{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/Divider/Divider.js","webpack:///./src/components/PostListing/PostListing.jsx","webpack:///./src/pages/blog.jsx"],"names":["props","ref","_props$absolute","absolute","classes","className","_props$component","component","Component","_props$flexItem","flexItem","_props$light","light","_props$orientation","orientation","_props$role","role","undefined","_props$variant","variant","other","root","vertical","withStyles","theme","height","margin","border","flexShrink","backgroundColor","palette","divider","position","bottom","left","width","inset","marginLeft","middle","spacing","marginRight","alignSelf","name","styles","link","textDecoration","color","config","secondary","dark","primary","main","PostListing","cleanupExcerpt","excerpt","excerptLower","toLowerCase","hotWord","startsWith","substring","length","getPostList","postEdges","postList","forEach","postEdge","push","path","node","fields","slug","tags","frontmatter","author","category","cover","coverURL","coverFile","publicURL","title","date","timeToRead","render","this","style","fontSize","padding","lineHeight","maxWidth","Card","CardContent","map","post","i","key","to","alt","src","float","marginBottom","borderRadius","textShadow","marginTop","PostTags","clear","React","Index","data","allMdx","edges","pageSEO","siteTitle","description","url","location","href","background","textAlign","backgroundImage","pageQuery"],"mappings":"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","file":"component---src-pages-blog-jsx-145add7b2056b9a3d015.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      height: 1,\n      margin: 0,\n      // Reset browser default style.\n      border: 'none',\n      flexShrink: 0,\n      backgroundColor: theme.palette.divider\n    },\n\n    /* Styles applied to the root element if `absolute={true}`. */\n    absolute: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `variant=\"inset\"`. */\n    inset: {\n      marginLeft: 72\n    },\n\n    /* Styles applied to the root element if `light={true}`. */\n    light: {\n      backgroundColor: fade(theme.palette.divider, 0.08)\n    },\n\n    /* Styles applied to the root element if `variant=\"middle\"`. */\n    middle: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      height: '100%',\n      width: 1\n    },\n\n    /* Styles applied to the root element if `flexItem={true}`. */\n    flexItem: {\n      alignSelf: 'stretch',\n      height: 'auto'\n    }\n  };\n};\nvar Divider = React.forwardRef(function Divider(props, ref) {\n  var _props$absolute = props.absolute,\n      absolute = _props$absolute === void 0 ? false : _props$absolute,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'hr' : _props$component,\n      _props$flexItem = props.flexItem,\n      flexItem = _props$flexItem === void 0 ? false : _props$flexItem,\n      _props$light = props.light,\n      light = _props$light === void 0 ? false : _props$light,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$role = props.role,\n      role = _props$role === void 0 ? Component !== 'hr' ? 'separator' : undefined : _props$role,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'fullWidth' : _props$variant,\n      other = _objectWithoutProperties(props, [\"absolute\", \"classes\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'fullWidth' && classes[variant], absolute && classes.absolute, flexItem && classes.flexItem, light && classes.light, orientation === 'vertical' && classes.vertical),\n    role: role,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { kebabCase } from \"lodash\";\nimport PostTags from \"../PostTags/PostTags\";\nimport config from \"../../../data/SiteConfig\";\n\nconst styles = {\n  link: {\n    textDecoration: \"none\",\n    color: config.secondary.dark,\n    \"&:hover\": {\n      color: config.primary.main,\n      textDecoration: \"none\",\n    },\n  },\n};\n\nclass PostListing extends React.Component {\n  cleanupExcerpt(excerpt) {\n    const hotWords = [\n      \"introduction\",\n      \"why?\",\n      \"background information\",\n      \"presenters\",\n      \"presenter\",\n    ];\n    const excerptLower = excerpt.toLowerCase();\n    for (const hotWord of hotWords) {\n      if (excerptLower.startsWith(hotWord)) {\n        return excerpt.substring(hotWord.length + 1);\n      }\n    }\n    return excerpt;\n  }\n\n  getPostList(postEdges) {\n    const postList = [];\n    postEdges.forEach((postEdge) => {\n      postList.push({\n        path: postEdge.node.fields.slug,\n        tags: postEdge.node.frontmatter.tags,\n        author: postEdge.node.frontmatter.author,\n        category: postEdge.node.frontmatter.category,\n        cover:\n          postEdge.node.frontmatter.coverURL ||\n          postEdge.node.frontmatter.coverFile.publicURL,\n        title: postEdge.node.frontmatter.title,\n        date: postEdge.node.frontmatter.date,\n        excerpt: this.cleanupExcerpt(postEdge.node.excerpt),\n        timeToRead: postEdge.node.timeToRead,\n      });\n    });\n    return postList;\n  }\n\n  render() {\n    const postList = this.getPostList(this.props.postEdges);\n    return (\n      <div\n        style={{\n          width: \"90%\",\n          fontSize: \"1em\",\n          margin: \"0 auto\",\n          padding: \"1em 0\",\n          lineHeight: \"1.5em\",\n          maxWidth: \"800px\",\n        }}\n      >\n        <Card style={{ margin: \"10px 0\" }}>\n          <CardContent>\n            {postList.map((post, i) => (\n              <div key={i}>\n                <Link to={post.path} className={this.props.classes.link}>\n                  <img\n                    alt={`${post.title}Thumbnail`}\n                    src={post.cover}\n                    className=\"blogImage\"\n                    style={{\n                      float: \"right\",\n                      marginLeft: \"10px\",\n                      marginBottom: \"10px\",\n                      borderRadius: \"4px\",\n                    }}\n                  />\n                  <h2\n                    style={{\n                      textShadow: \"0 12px 30px rgba(0, 0, 0, 0.15)\",\n                      fontSize: \"2rem\",\n                      lineHeight: \"2rem\",\n                      marginBottom: \"0.75rem\",\n                      marginTop: \"0.75rem\",\n                    }}\n                  >\n                    {post.title}\n                  </h2>\n                </Link>\n                <small style={{ color: config.primary.dark }}>\n                  By:\n                  {post.author}\n                </small>\n                <br />\n                {post.date} &mdash;\n                {post.timeToRead} Min Read &mdash; In\n                <Link\n                  to={`/categories/${kebabCase(post.category)}`}\n                  className={this.props.classes.link}\n                >\n                  {post.category}\n                </Link>\n                <br />\n                {post.excerpt} {post.tags ? <br /> : null}{\" \"}\n                <PostTags tags={post.tags} />\n                <br style={{ clear: \"both\" }} />\n                {i < postList.length - 1 ? (\n                  <Divider style={{ margin: \"20px 0\" }} />\n                ) : null}\n              </div>\n            ))}\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(PostListing);\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../layout\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport SEO from \"../components/SEO/SEO\";\nimport NavBar from \"../components/navBar\";\nimport Footer from \"../components/Footer\";\nimport config from \"../../data/SiteConfig\";\n\nclass Index extends React.Component {\n  render() {\n    const postEdges = this.props.data.allMdx.edges;\n    const pageSEO = {\n      title: `Blog | ${config.siteTitle}`,\n      description: `Explore all articles and posts published on my website.`,\n    };\n    return (\n      <Layout>\n        <SEO url={this.props.location.href} pageSEO={pageSEO} />\n        <NavBar\n          style={{ background: config.secondary.dark }}\n          location={this.props.location}\n        />\n        <div\n          style={{\n            textAlign: \"left\",\n            backgroundImage: `linear-gradient(${config.secondary.dark}, ${config.primary.light} 40%, ${config.primary.light} 60%, ${config.secondary.dark})`,\n            padding: \"1em 0\",\n          }}\n        >\n          <h1 style={{ textAlign: \"center\", color: \"white\" }}>Blog</h1>\n          <PostListing postEdges={postEdges} />\n        </div>\n        <Footer />\n      </Layout>\n    );\n  }\n}\n\nexport default Index;\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query IndexQuery {\n    allMdx(\n      limit: 2000\n      sort: { fields: [fields___date], order: DESC }\n      filter: { fileAbsolutePath: { regex: \"/blog/\" } }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            category\n            title\n            tags\n            author\n            coverURL\n            coverFile {\n              publicURL\n            }\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}