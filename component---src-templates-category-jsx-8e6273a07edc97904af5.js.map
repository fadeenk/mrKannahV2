{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/Divider/Divider.js","webpack:///./src/components/PostListing/PostListing.jsx","webpack:///./src/templates/category.jsx"],"names":["props","ref","_props$absolute","absolute","classes","className","_props$component","component","Component","_props$flexItem","flexItem","_props$light","light","_props$orientation","orientation","_props$role","role","undefined","_props$variant","variant","other","root","vertical","withStyles","theme","height","margin","border","flexShrink","backgroundColor","palette","divider","position","bottom","left","width","inset","marginLeft","middle","spacing","marginRight","alignSelf","name","styles","link","textDecoration","color","config","secondary","dark","primary","main","PostListing","cleanupExcerpt","excerpt","excerptLower","toLowerCase","hotWord","startsWith","substring","length","getPostList","postEdges","postList","forEach","postEdge","push","path","node","fields","slug","tags","frontmatter","author","category","cover","coverURL","coverFile","publicURL","title","date","timeToRead","render","this","style","fontSize","padding","lineHeight","maxWidth","Card","CardContent","map","post","i","key","to","alt","src","float","marginBottom","borderRadius","textShadow","marginTop","PostTags","clear","React","CategoryTemplate","pageContext","data","allMdx","edges","pageSEO","siteTitle","description","url","location","href","background","pathname","urljoin","pathPrefix","textAlign","backgroundImage","pageQuery"],"mappings":"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","file":"component---src-templates-category-jsx-8e6273a07edc97904af5.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      height: 1,\n      margin: 0,\n      // Reset browser default style.\n      border: 'none',\n      flexShrink: 0,\n      backgroundColor: theme.palette.divider\n    },\n\n    /* Styles applied to the root element if `absolute={true}`. */\n    absolute: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `variant=\"inset\"`. */\n    inset: {\n      marginLeft: 72\n    },\n\n    /* Styles applied to the root element if `light={true}`. */\n    light: {\n      backgroundColor: fade(theme.palette.divider, 0.08)\n    },\n\n    /* Styles applied to the root element if `variant=\"middle\"`. */\n    middle: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      height: '100%',\n      width: 1\n    },\n\n    /* Styles applied to the root element if `flexItem={true}`. */\n    flexItem: {\n      alignSelf: 'stretch',\n      height: 'auto'\n    }\n  };\n};\nvar Divider = React.forwardRef(function Divider(props, ref) {\n  var _props$absolute = props.absolute,\n      absolute = _props$absolute === void 0 ? false : _props$absolute,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'hr' : _props$component,\n      _props$flexItem = props.flexItem,\n      flexItem = _props$flexItem === void 0 ? false : _props$flexItem,\n      _props$light = props.light,\n      light = _props$light === void 0 ? false : _props$light,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$role = props.role,\n      role = _props$role === void 0 ? Component !== 'hr' ? 'separator' : undefined : _props$role,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'fullWidth' : _props$variant,\n      other = _objectWithoutProperties(props, [\"absolute\", \"classes\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'fullWidth' && classes[variant], absolute && classes.absolute, flexItem && classes.flexItem, light && classes.light, orientation === 'vertical' && classes.vertical),\n    role: role,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes = {\n  /**\n   * Absolutely position the element.\n   */\n  absolute: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   */\n  flexItem: PropTypes.bool,\n\n  /**\n   * If `true`, the divider will have a lighter color.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The divider orientation.\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'inset', 'middle'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport {withStyles} from \"@material-ui/core/styles\"\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Divider from '@material-ui/core/Divider';\nimport {kebabCase} from 'lodash';\nimport PostTags from '../PostTags/PostTags';\nimport config from '../../../data/SiteConfig';\n\nconst styles = {\n  link: {\n    textDecoration: 'none',\n    color: config.secondary.dark,\n    '&:hover': {\n      color: config.primary.main,\n      textDecoration: 'none',\n    },\n  }\n};\n\nclass PostListing extends React.Component {\n  cleanupExcerpt(excerpt) {\n    const hotWords = ['introduction', 'why?', 'background information', 'presenters', 'presenter']\n    const excerptLower = excerpt.toLowerCase()\n    for (const hotWord of hotWords) {\n      if (excerptLower.startsWith(hotWord)) {\n        return excerpt.substring(hotWord.length + 1);\n      }\n    }\n    return excerpt\n  }\n\n  getPostList(postEdges) {\n    const postList = [];\n    postEdges.forEach(postEdge => {\n      postList.push({\n        path: postEdge.node.fields.slug,\n        tags: postEdge.node.frontmatter.tags,\n        author: postEdge.node.frontmatter.author,\n        category: postEdge.node.frontmatter.category,\n        cover: postEdge.node.frontmatter.coverURL || postEdge.node.frontmatter.coverFile.publicURL,\n        title: postEdge.node.frontmatter.title,\n        date: postEdge.node.frontmatter.date,\n        excerpt: this.cleanupExcerpt(postEdge.node.excerpt),\n        timeToRead: postEdge.node.timeToRead\n      });\n    });\n    return postList;\n  }\n\n  render() {\n    const postList = this.getPostList(this.props.postEdges);\n    return (\n      <div style={{\n        width: '90%',\n        fontSize: '1em',\n        margin: '0 auto',\n        padding: '1em 0',\n        lineHeight: '1.5em',\n        maxWidth: '800px',\n      }}>\n        <Card style={{margin: '10px 0'}}>\n          <CardContent>\n          {\n            postList.map((post, i) => (\n              <div key={i}>\n                <Link to={post.path} className={this.props.classes.link}>\n                  <img alt={post.title + 'Thumbnail'} src={post.cover} className=\"blogImage\" style={{float: 'right', marginLeft: '10px', marginBottom: '10px', borderRadius: '4px'}} />\n                  <h2 style={{\n                    textShadow: '0 12px 30px rgba(0, 0, 0, 0.15)',\n                    fontSize: '2rem',\n                    lineHeight: '2rem',\n                    marginBottom: '0.75rem',\n                    marginTop: '0.75rem'\n                  }}>\n                    {post.title}\n                  </h2>\n                </Link>\n                <small style={{color: config.primary.dark}}>By: {post.author}</small><br/>\n                {post.date} &mdash; {post.timeToRead} Min Read &mdash; In <Link to={`/categories/${kebabCase(post.category)}`} className={this.props.classes.link}>{post.category}</Link><br/>\n                {post.excerpt} {post.tags ? (<br/>) : null} <PostTags tags={post.tags} />\n                <br style={{clear: 'both'}} />\n                {i < postList.length -1 ? <Divider style={{margin: '20px 0'}}/> : null}\n              </div>\n          ))}\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(PostListing);\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport urljoin from \"url-join\";\nimport Layout from \"../layout\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport config from \"../../data/SiteConfig\";\nimport SEO from \"../components/SEO/SEO\";\nimport NavBar from \"../components/navBar\";\nimport Footer from \"../components/Footer\";\n\nexport default class CategoryTemplate extends React.Component {\n  render() {\n    const { category } = this.props.pageContext;\n    const postEdges = this.props.data.allMdx.edges;\n    const pageSEO = {\n      title: `${category} Posts | ${config.siteTitle}`,\n      description: `Posts in category \"${category}\".`,\n    };\n    return (\n      <Layout>\n        <SEO url={this.props.location.href} pageSEO={pageSEO} />\n        <NavBar style={{background: config.secondary.dark}} location={{pathname: urljoin(config.pathPrefix, '/blog/')}} />\n        <div style={{ textAlign: 'left', backgroundImage: `linear-gradient(${config.secondary.dark}, ${config.primary.light} 40%, ${config.primary.light} 60%, ${config.secondary.dark})`, padding: '1em 0' }}>\n          <h1 style={{textAlign: 'center', color: 'white'}}>{category}</h1>\n          <PostListing postEdges={postEdges} />\n        </div>\n        <Footer />\n      </Layout>\n    );\n  }\n}\n\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query CategoryPage($category: String) {\n    allMdx(\n      limit: 1000\n      sort: { fields: [fields___date], order: DESC }\n      filter: { frontmatter: { category: { eq: $category } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            author\n            category\n            coverURL\n            coverFile {\n              publicURL\n            }\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}