{"data":{"mdx":{"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nconst layoutProps = {};\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components,\n      props: {\n        \"id\": \"introduction\"\n      }\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"h2\",\n      props: {\n        \"href\": \"#introduction\",\n        \"aria-label\": \"introduction permalink\",\n        \"className\": \"anchor\"\n      }\n    }, React.createElement(MDXTag, {\n      name: \"svg\",\n      components: components,\n      parentName: \"a\",\n      props: {\n        \"aria-hidden\": \"true\",\n        \"focusable\": \"false\",\n        \"height\": \"16\",\n        \"version\": \"1.1\",\n        \"viewBox\": \"0 0 16 16\",\n        \"width\": \"16\"\n      }\n    }, React.createElement(MDXTag, {\n      name: \"path\",\n      components: components,\n      parentName: \"svg\",\n      props: {\n        \"fillRule\": \"evenodd\",\n        \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n      }\n    }))), `Introduction`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `This talk was hosted during the Developer Week 2019 conference. I attended this talk to satisfy my curiosity for how Eventbrite has evolved. `), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components,\n      props: {\n        \"id\": \"presenter\"\n      }\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"h2\",\n      props: {\n        \"href\": \"#presenter\",\n        \"aria-label\": \"presenter permalink\",\n        \"className\": \"anchor\"\n      }\n    }, React.createElement(MDXTag, {\n      name: \"svg\",\n      components: components,\n      parentName: \"a\",\n      props: {\n        \"aria-hidden\": \"true\",\n        \"focusable\": \"false\",\n        \"height\": \"16\",\n        \"version\": \"1.1\",\n        \"viewBox\": \"0 0 16 16\",\n        \"width\": \"16\"\n      }\n    }, React.createElement(MDXTag, {\n      name: \"path\",\n      components: components,\n      parentName: \"svg\",\n      props: {\n        \"fillRule\": \"evenodd\",\n        \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n      }\n    }))), `Presenter`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `This talk was different than the other talks. This one was a discussion between Romain Huet (Head of Global Developer Relation at Stripe) and Renaud Visage (Technical Co-Founder of Eventbrite). `), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components,\n      props: {\n        \"id\": \"summary\"\n      }\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"h2\",\n      props: {\n        \"href\": \"#summary\",\n        \"aria-label\": \"summary permalink\",\n        \"className\": \"anchor\"\n      }\n    }, React.createElement(MDXTag, {\n      name: \"svg\",\n      components: components,\n      parentName: \"a\",\n      props: {\n        \"aria-hidden\": \"true\",\n        \"focusable\": \"false\",\n        \"height\": \"16\",\n        \"version\": \"1.1\",\n        \"viewBox\": \"0 0 16 16\",\n        \"width\": \"16\"\n      }\n    }, React.createElement(MDXTag, {\n      name: \"path\",\n      components: components,\n      parentName: \"svg\",\n      props: {\n        \"fillRule\": \"evenodd\",\n        \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n      }\n    }))), `Summary`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Integration is not about checking the box, it is how truly integrated and connected the systems are.`), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components,\n      props: {\n        \"id\": \"how-to-build-apis\"\n      }\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"h3\",\n      props: {\n        \"href\": \"#how-to-build-apis\",\n        \"aria-label\": \"how to build apis permalink\",\n        \"className\": \"anchor\"\n      }\n    }, React.createElement(MDXTag, {\n      name: \"svg\",\n      components: components,\n      parentName: \"a\",\n      props: {\n        \"aria-hidden\": \"true\",\n        \"focusable\": \"false\",\n        \"height\": \"16\",\n        \"version\": \"1.1\",\n        \"viewBox\": \"0 0 16 16\",\n        \"width\": \"16\"\n      }\n    }, React.createElement(MDXTag, {\n      name: \"path\",\n      components: components,\n      parentName: \"svg\",\n      props: {\n        \"fillRule\": \"evenodd\",\n        \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n      }\n    }))), `How to build APIs`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `When building a product, one must keep in mind the end goal and how the product will turn. If product is prioritized then apis are built, the apis will be second class citizen. However, if APIs are designed first and then implemented into the product, it makes things easier to open up to the public.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Another thing to keep in mind is future proof apis. Once a single user starts using the API it is extremely difficult to change it (especially if dealing with payment processing aka. Stripe). `), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Finally, do things that don't scale first! Always offer help and learn from the customer before scaling and becoming hands off. This ensures you don't spend time and resources scaling something that will need to be revamped once the customer starts using it. Find the right partners to help build the platform (expose the apis).`), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components,\n      props: {\n        \"id\": \"documenting-apis\"\n      }\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"h3\",\n      props: {\n        \"href\": \"#documenting-apis\",\n        \"aria-label\": \"documenting apis permalink\",\n        \"className\": \"anchor\"\n      }\n    }, React.createElement(MDXTag, {\n      name: \"svg\",\n      components: components,\n      parentName: \"a\",\n      props: {\n        \"aria-hidden\": \"true\",\n        \"focusable\": \"false\",\n        \"height\": \"16\",\n        \"version\": \"1.1\",\n        \"viewBox\": \"0 0 16 16\",\n        \"width\": \"16\"\n      }\n    }, React.createElement(MDXTag, {\n      name: \"path\",\n      components: components,\n      parentName: \"svg\",\n      props: {\n        \"fillRule\": \"evenodd\",\n        \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n      }\n    }))), `Documenting APIs`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `When it comes to documentation most users/developers don't want data! They want workflows, actions, defined processes and examples. Define benefits and approaches for customers. `), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `API documentation should be treated like a product. Do user interviews, ensure documentation are accurate, provide training and iterate. Integration experience should be measured using `, React.createElement(MDXTag, {\n      name: \"strong\",\n      components: components,\n      parentName: \"p\"\n    }, `Time to first API call`), `.`), React.createElement(MDXTag, {\n      name: \"h3\",\n      components: components,\n      props: {\n        \"id\": \"fun-fact\"\n      }\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"h3\",\n      props: {\n        \"href\": \"#fun-fact\",\n        \"aria-label\": \"fun fact permalink\",\n        \"className\": \"anchor\"\n      }\n    }, React.createElement(MDXTag, {\n      name: \"svg\",\n      components: components,\n      parentName: \"a\",\n      props: {\n        \"aria-hidden\": \"true\",\n        \"focusable\": \"false\",\n        \"height\": \"16\",\n        \"version\": \"1.1\",\n        \"viewBox\": \"0 0 16 16\",\n        \"width\": \"16\"\n      }\n    }, React.createElement(MDXTag, {\n      name: \"path\",\n      components: components,\n      parentName: \"svg\",\n      props: {\n        \"fillRule\": \"evenodd\",\n        \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n      }\n    }))), `Fun fact`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Eventbrite started exposing data using RSS feeds.`));\n  }\n\n}\nMDXContent.isMDXComponent = true;"},"timeToRead":1,"excerpt":"Introduction This talk was hosted during the Developer Week 2019 conference. I attended this talk to satisfy my curiosity for how Eventbrite…","frontmatter":{"title":"Eventbrite’s 13-Year Technical Evolution","coverURL":"","coverFile":{"publicURL":"/static/devWeek-c8f6cafae4efd9391ef10cec805fcfd0.jpg"},"date":"February 21, 2019","author":"Fadee Kannah","authorTwitter":"@fadeenk","publisher":"MrKannah.com","dateModified":"2019-03-02T00:00:00.000Z","category":"Talks","tags":["DevWeek2019","Development","API","Architecture"]},"fields":{"slug":"/eventbrites-13-year-technical-evolution","date":"2019-02-21T08:00:00.000Z"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/eventbrites-13-year-technical-evolution"}}