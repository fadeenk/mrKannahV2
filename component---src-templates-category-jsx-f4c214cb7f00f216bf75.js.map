{"version":3,"sources":["webpack:///./src/templates/category.jsx"],"names":["CategoryTemplate","render","category","this","props","pageContext","postEdges","data","allMdx","edges","pageSEO","title","config","siteTitle","description","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_layout__WEBPACK_IMPORTED_MODULE_3__","_components_SEO_SEO__WEBPACK_IMPORTED_MODULE_6__","url","location","href","_components_navBar__WEBPACK_IMPORTED_MODULE_7__","style","background","secondary","dark","pathname","urljoin","pathPrefix","textAlign","backgroundImage","primary","light","padding","_components_PostListing_PostListing__WEBPACK_IMPORTED_MODULE_4__","_components_Footer__WEBPACK_IMPORTED_MODULE_8__","React","Component","pageQuery"],"mappings":"kSAWqBA,kLACnBC,OAAA,WAAS,IACCC,EAAaC,KAAKC,MAAMC,YAAxBH,SACFI,EAAYH,KAAKC,MAAMG,KAAKC,OAAOC,MACnCC,EAAU,CACdC,MAAUT,EAAL,YAAyBU,IAAOC,UACrCC,YAAW,sBAAwBZ,EAAxB,MAEb,OACEa,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKC,IAAKjB,KAAKC,MAAMiB,SAASC,KAAMZ,QAASA,IAC7CK,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQC,MAAO,CAACC,WAAYb,IAAOc,UAAUC,MAAON,SAAU,CAACO,SAAUC,IAAQjB,IAAOkB,WAAY,aACpGf,EAAAC,EAAAC,cAAA,OAAKO,MAAO,CAAEO,UAAW,OAAQC,gBAAe,mBAAqBpB,IAAOc,UAAUC,KAAtC,KAA+Cf,IAAOqB,QAAQC,MAA9D,SAA4EtB,IAAOqB,QAAQC,MAA3F,SAAyGtB,IAAOc,UAAUC,KAA1H,IAAmIQ,QAAS,UAC1LpB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAa9B,UAAWA,KAE1BS,EAAAC,EAAAC,cAACoB,EAAA,EAAD,WAfsCC,IAAMC,WAuBvCC,EAAS","file":"component---src-templates-category-jsx-f4c214cb7f00f216bf75.js","sourcesContent":["import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport urljoin from \"url-join\";\nimport Layout from \"../layout\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport config from \"../../data/SiteConfig\";\nimport SEO from \"../components/SEO/SEO\";\nimport NavBar from \"../components/navBar\";\nimport Footer from \"../components/Footer\";\n\nexport default class CategoryTemplate extends React.Component {\n  render() {\n    const { category } = this.props.pageContext;\n    const postEdges = this.props.data.allMdx.edges;\n    const pageSEO = {\n      title: `${category} Posts | ${config.siteTitle}`,\n      description: `Posts in category \"${category}\".`,\n    };\n    return (\n      <Layout>\n        <SEO url={this.props.location.href} pageSEO={pageSEO} />\n        <NavBar style={{background: config.secondary.dark}} location={{pathname: urljoin(config.pathPrefix, '/blog/')}} />\n        <div style={{ textAlign: 'left', backgroundImage: `linear-gradient(${config.secondary.dark}, ${config.primary.light} 40%, ${config.primary.light} 60%, ${config.secondary.dark})`, padding: '1em 0' }}>\n          <PostListing postEdges={postEdges} />\n        </div>\n        <Footer />\n      </Layout>\n    );\n  }\n}\n\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query CategoryPage($category: String) {\n    allMdx(\n      limit: 1000\n      sort: { fields: [fields___date], order: DESC }\n      filter: { frontmatter: { category: { eq: $category } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            author\n            category\n            coverURL\n            coverFile {\n              publicURL\n            }\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}