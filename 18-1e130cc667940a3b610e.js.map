{"version":3,"sources":["webpack:///../src/severity.ts","webpack:///../src/status.ts","webpack:///../src/index.ts","webpack:///../../src/integrations/functiontostring.ts","webpack:///../../src/integrations/inboundfilters.ts","webpack:///../src/polyfill.ts","webpack:///../src/error.ts","webpack:///../src/dsn.ts","webpack:///../src/api.ts","webpack:///../src/integration.ts","webpack:///../src/baseclient.ts","webpack:///../../src/transports/noop.ts","webpack:///../src/basebackend.ts","webpack:///../src/supports.ts","webpack:///../src/tracekit.ts","webpack:///../src/parsers.ts","webpack:///../src/eventbuilder.ts","webpack:///../src/promisebuffer.ts","webpack:///../../src/transports/base.ts","webpack:///../../src/transports/fetch.ts","webpack:///../../src/transports/xhr.ts","webpack:///../src/backend.ts","webpack:///../src/version.ts","webpack:///../src/client.ts","webpack:///../src/helpers.ts","webpack:///../../src/integrations/trycatch.ts","webpack:///../../src/integrations/breadcrumbs.ts","webpack:///../../src/integrations/globalhandlers.ts","webpack:///../../src/integrations/linkederrors.ts","webpack:///../../src/integrations/useragent.ts","webpack:///../src/sdk.ts","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///../src/hub.ts","webpack:///../src/scope.ts","webpack:///../src/is.ts","webpack:///../src/span.ts","webpack:///../src/misc.ts","webpack:///./node_modules/core-js/modules/es6.typed.uint16-array.js","webpack:///(webpack)/buildin/harmony-module.js","webpack:///../src/syncpromise.ts","webpack:///../src/memo.ts","webpack:///../src/string.ts","webpack:///../src/logger.ts","webpack:///../src/object.ts"],"names":["Severity","Status","fromString","level","Debug","Info","Warning","Error","Fatal","Critical","Log","fromHttpCode","code","Success","RateLimit","Invalid","Failed","Unknown","callOnHub","method","args","_i","arguments","length","hub","Object","esm_hub","apply","tslib_es6","captureException","exception","syntheticException","originalException","captureMessage","message","captureEvent","event","configureScope","callback","addBreadcrumb","breadcrumb","setContext","name","context","setExtras","extras","setTags","tags","setExtra","key","extra","setTag","value","setUser","user","withScope","originalFunctionToString","FunctionToString","this","id","prototype","setupOnce","Function","toString","__sentry__","__sentry_original__","DEFAULT_IGNORE_ERRORS","inboundfilters_InboundFilters","InboundFilters","_options","esm_scope","self","getIntegration","client","getClient","clientOptions","getOptions","options","_mergeOptions","_shouldDropEvent","_isSentryError","logger","warn","misc","_isIgnoredError","_isBlacklistedUrl","_getEventFilterUrl","_isWhitelistedUrl","ignoreInternal","values","type","_oO","ignoreErrors","_getPossibleEventMessages","some","pattern","string","blacklistUrls","url","whitelistUrls","_a","_b","_c","oO","error","stacktrace","frames_1","frames","filename","frames_2","setPrototypeOf","__proto__","Array","obj","proto","prop","hasOwnProperty","error_SentryError","_super","SentryError","_this","call","_newTarget","constructor","DSN_REGEX","dsn_Dsn","Dsn","from","_fromString","_fromComponents","_validate","withPassword","host","path","pass","port","projectId","protocol","str","match","exec","slice","split","join","pop","components","forEach","component","isNaN","parseInt","api_API","API","dsn","_dsnObject","getDsn","getStoreEndpoint","_getBaseUrl","getStoreEndpointPath","getStoreEndpointWithUrlEncodedAuth","auth","sentry_key","sentry_version","object","getRequestHeaders","clientName","clientVersion","header","push","Date","getTime","Content-Type","X-Sentry-Auth","getReportDialogEndpoint","dialogOptions","endpoint","encodedOptions","encodeURIComponent","email","installedIntegrations","setupIntegrations","integrations","defaultIntegrations","userIntegrations","isArray","userIntegrationsNames_1","map","i","pickedIntegrationsNames_1","defaultIntegration","indexOf","userIntegration","integrationsNames","splice","getIntegrationsToSetup","integration","log","setupIntegration","baseclient_BaseClient","BaseClient","backendClass","_integrations","_processing","_backend","_dsn","_isEnabled","hint","scope","eventId","event_id","_getBackend","eventFromException","then","_processEvent","finalEvent","reason","is","eventFromMessage","flush","timeout","_isClientProcessing","status","clearInterval","interval","getTransport","close","transportFlushed","ready","result","enabled","getIntegrations","syncpromise","resolve","ticked","setInterval","undefined","_prepareEvent","environment","release","dist","maxValueLength","prepared","request","_addIntegrations","sdk","applyToEvent","sdkInfo","integrationsArray","keys","beforeSend","sampleRate","Math","random","reject","data","sendEvent","beforeSendResult","_handleAsyncBeforeSend","processedEvent","e","noop_NoopTransport","NoopTransport","_","Skipped","basebackend_BaseBackend","BaseBackend","_transport","_setupTransport","_exception","_hint","_message","_level","supportsFetch","Headers","Request","Response","supportsReferrerPolicy","referrerPolicy","UNKNOWN_FUNCTION","tracekit_chrome","gecko","winjs","geckoEval","chromeEval","computeStackTrace","ex","stack","popSize","framesToPop","parts","opera10Regex","opera11Regex","lines","line","element","func","column","extractMessage","computeStackTraceFromStacktraceProp","popFrames","submatch","isNative","columnNumber","computeStackTraceFromStackProp","failed","STACKTRACE_LIMIT","exceptionFromStacktrace","prepareFramesForEvent","eventFromStacktrace","localStack","firstFrameFunction","lastFrameFunction","frame","colno","function","in_app","lineno","reverse","eventFromUnknownInput","domException","name_1","eventFromString","rejection","__serialized__","eventFromPlainObject","synthetic","input","attachStacktrace","promisebuffer_PromiseBuffer","PromiseBuffer","_limit","_buffer","isReady","add","task","remove","drain","capturedSetTimeout","setTimeout","all","clearTimeout","base_BaseTransport","BaseTransport","fetch_global","fetch_FetchTransport","FetchTransport","_disabledUntil","now","Promise","defaultOptions","body","JSON","stringify","fetch","response","headers","get","catch","xhr_XHRTransport","XHRTransport","XMLHttpRequest","onreadystatechange","readyState","getResponseHeader","open","send","backend_BrowserBackend","BrowserBackend","transportOptions","transport","handled","SDK_NAME","client_BrowserClient","BrowserClient","platform","packages","version","showReportDialog","document","script","createElement","async","src","onLoad","onload","head","appendChild","keypressTimeout","lastCapturedEvent","debounceDuration","ignoreOnError","shouldIgnoreOnError","wrap","fn","before","__sentry_wrapped__","sentryWrapped","wrappedArguments","arg","handleEvent","addEventProcessor","mechanism","property","defineProperty","enumerable","defineProperties","getOwnPropertyDescriptor","configurable","debounceTimer","breadcrumbEventHandler","eventName","debounce","captureBreadcrumb","target","category","keypressEventHandler","tagName","isContentEditable","trycatch_TryCatch","TryCatch","_ignoreOnError","_wrapTimeFunction","original","originalCallback","getFunctionName","_wrapRAF","handler","_wrapEventTarget","global","bind","err","lastHref","breadcrumbs_global","breadcrumbs_Breadcrumbs","Breadcrumbs","console","dom","history","sentry","xhr","_instrumentConsole","originalConsoleLevel","breadcrumbData","_instrumentDOM","addEventListener","innerOriginal","_instrumentFetch","isNativeFunc","doc","sandbox","hidden","contentWindow","removeChild","supportsNativeFetch","originalFetch","fetchInput","String","filterUrl","addSentryBreadcrumb","fetchData","toUpperCase","status_code","_instrumentHistory","chrome","isChromePackagedApp","app","runtime","hasHistoryApi","pushState","replaceState","captureUrlChange","to","parsedLoc","location","href","parsedTo","parsedFrom","relative","oldOnPopState","onpopstate","currentHref","historyReplacementFunction","originalHistoryFunction","_instrumentXHR","xhrproto","originalOpen","__sentry_xhr__","__sentry_own_request__","originalSend","onreadystatechangeHandler","wrapProp","serializedData","event_1","parse","globalhandlers_GlobalHandlers","GlobalHandlers","_global","_oldOnErrorHandler","_oldOnUnhandledRejectionHandler","_onErrorHandlerInstalled","_onUnhandledRejectionHandlerInstalled","onerror","onunhandledrejection","stackTraceLimit","_installGlobalOnErrorHandler","_installGlobalOnUnhandledRejectionHandler","msg","currentHub","hasIntegration","isFailedOwnDelivery","_eventFromIncompleteOnError","_enhanceEventWithInitialFrame","_eventFromIncompleteRejection","groups","DEFAULT_KEY","DEFAULT_LIMIT","linkederrors_LinkedErrors","LinkedErrors","_key","limit","_handler","linkedErrors","_walkErrorTree","useragent_global","useragent_UserAgent","UserAgent","navigator","userAgent","sdk_defaultIntegrations","integrations_namespaceObject","init","window_1","SENTRY_RELEASE","clientClass","debug","enable","bindClient","initAndBind","lastEventId","forceLoad","sdk_close","sdk_wrap","windowIntegrations","_window","Sentry","Integrations","INTEGRATIONS","esm_integrations_namespaceObject","__webpack_require__","d","__webpack_exports__","__extends","_assign","__read","__spread","_extendStatics","b","p","__","create","assign","t","s","n","o","m","Symbol","iterator","r","ar","next","done","concat","API_VERSION","Hub","_version","_scope__WEBPACK_IMPORTED_MODULE_3__","_stack","_invokeClient","top","getStackTop","tslib__WEBPACK_IMPORTED_MODULE_0__","isOlderThan","pushScope","getStack","parentScope","clone","popScope","getScope","_lastEventId","_sentry_utils__WEBPACK_IMPORTED_MODULE_1__","finalHint","beforeBreadcrumb","maxBreadcrumbs","timestamp","mergedBreadcrumb","finalBreadcrumb","min","run","oldHub","makeMain","_sentry_utils__WEBPACK_IMPORTED_MODULE_2__","traceHeaders","span","getSpan","sentry-trace","toTraceparent","getMainCarrier","carrier","__SENTRY__","registry","getHubFromCarrier","setHubOnCarrier","getCurrentHub","hasHubOnCarrier","domain","module","activeDomain","active","registryHubTopStack","_Oo","getHubFromActiveDomain","Scope","_notifyingListeners","_scopeListeners","_eventProcessors","_breadcrumbs","_user","_tags","_extra","_context","addScopeListener","_notifyScopeListeners","_notifyEventProcessors","processors","index","_sentry_utils__WEBPACK_IMPORTED_MODULE_6__","processor","tslib__WEBPACK_IMPORTED_MODULE_5__","_sentry_utils__WEBPACK_IMPORTED_MODULE_7__","final","_sentry_utils__WEBPACK_IMPORTED_MODULE_8__","setFingerprint","fingerprint","_fingerprint","setLevel","setTransaction","transaction","_transaction","setSpan","_span","startSpan","parentSpan","_span__WEBPACK_IMPORTED_MODULE_10__","setParent","newScope","clear","clearBreadcrumbs","_applyFingerprint","contexts","trace","breadcrumbs","getGlobalEventProcessors","_sentry_utils__WEBPACK_IMPORTED_MODULE_9__","globalEventProcessors","addGlobalEventProcessor","isError","wat","isErrorEvent","isDOMError","isDOMException","isString","isPrimitive","isPlainObject","isEvent","Event","isElement","Element","isRegExp","isThenable","Boolean","isSyntheticEvent","TRACEPARENT_REGEXP","Span","_traceId","_spanId","_sampled","_parent","substring","parent","setSampled","sampled","fromTraceparent","traceparent","matches","parent_1","toJSON","span_id","trace_id","dynamicRequire","mod","require","isNodeEnv","process","fallbackGlobalObject","getGlobalObject","window","uuid4","crypto","msCrypto","getRandomValues","arr","Uint16Array","pad","num","v","replace","c","parseUrl","query","fragment","getEventDescription","consoleSandbox","originalConsole","wrappedLevels","addExceptionTypeValue","addExceptionMechanism","getLocationHref","htmlTreeAsString","elem","currentElem","out","height","len","sepLength","nextStr","_htmlElementAsString","parentNode","el","className","classes","attr","toLowerCase","_is__WEBPACK_IMPORTED_MODULE_9__","attrWhitelist","getAttribute","defaultRetryAfter","parseRetryAfterHeader","headerDelay","headerDate","byteOffset","exports","originalModule","webpackPolyfill","children","l","States","SyncPromise","executor","_state","PENDING","_handlers","_resolve","_setResult","RESOLVED","_reject","REJECTED","state","_is__WEBPACK_IMPORTED_MODULE_4__","_value","_executeHandlers","_attachHandler","onrejected","onfulfilled","collection","counter","resolvedCollection","item","TypeError","_onfulfilled","_onrejected","val","finally","onfinally","isRejected","Memo","_hasWeakSet","WeakSet","_inner","memoize","has","unmemoize","delete","truncate","safeJoin","isMatchingPattern","_is__WEBPACK_IMPORTED_MODULE_0__","max","substr","delimiter","output","test","_misc__WEBPACK_IMPORTED_MODULE_0__","PREFIX","Logger","_enabled","disable","fill","source","replacement","wrapped","urlEncode","getWalkSource","_is__WEBPACK_IMPORTED_MODULE_8__","_misc__WEBPACK_IMPORTED_MODULE_10__","currentTarget","CustomEvent","detail","jsonSize","encodeURI","utf8Length","normalizeToSize","depth","maxSize","serialized","normalize","normalizeValue","_events","walk","memo","Infinity","_memo__WEBPACK_IMPORTED_MODULE_9__","normalized","serializeValue","acc","innerKey","extractExceptionKeysForMessage","maxLength","sort","_string__WEBPACK_IMPORTED_MODULE_11__","includedKeys"],"mappings":"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","file":"18-1e130cc667940a3b610e.js","sourcesContent":["/** JSDoc */\nexport enum Severity {\n  /** JSDoc */\n  Fatal = 'fatal',\n  /** JSDoc */\n  Error = 'error',\n  /** JSDoc */\n  Warning = 'warning',\n  /** JSDoc */\n  Log = 'log',\n  /** JSDoc */\n  Info = 'info',\n  /** JSDoc */\n  Debug = 'debug',\n  /** JSDoc */\n  Critical = 'critical',\n}\n// tslint:disable:completed-docs\n// tslint:disable:no-unnecessary-qualifier no-namespace\nexport namespace Severity {\n  /**\n   * Converts a string-based level into a {@link Severity}.\n   *\n   * @param level string representation of Severity\n   * @returns Severity\n   */\n  export function fromString(level: string): Severity {\n    switch (level) {\n      case 'debug':\n        return Severity.Debug;\n      case 'info':\n        return Severity.Info;\n      case 'warn':\n      case 'warning':\n        return Severity.Warning;\n      case 'error':\n        return Severity.Error;\n      case 'fatal':\n        return Severity.Fatal;\n      case 'critical':\n        return Severity.Critical;\n      case 'log':\n      default:\n        return Severity.Log;\n    }\n  }\n}\n","/** The status of an event. */\nexport enum Status {\n  /** The status could not be determined. */\n  Unknown = 'unknown',\n  /** The event was skipped due to configuration or callbacks. */\n  Skipped = 'skipped',\n  /** The event was sent to Sentry successfully. */\n  Success = 'success',\n  /** The client is currently rate limited and will try again later. */\n  RateLimit = 'rate_limit',\n  /** The event could not be processed. */\n  Invalid = 'invalid',\n  /** A server-side error ocurred during submission. */\n  Failed = 'failed',\n}\n// tslint:disable:completed-docs\n// tslint:disable:no-unnecessary-qualifier no-namespace\nexport namespace Status {\n  /**\n   * Converts a HTTP status code into a {@link Status}.\n   *\n   * @param code The HTTP response status code.\n   * @returns The send status or {@link Status.Unknown}.\n   */\n  export function fromHttpCode(code: number): Status {\n    if (code >= 200 && code < 300) {\n      return Status.Success;\n    }\n\n    if (code === 429) {\n      return Status.RateLimit;\n    }\n\n    if (code >= 400 && code < 500) {\n      return Status.Invalid;\n    }\n\n    if (code >= 500) {\n      return Status.Failed;\n    }\n\n    return Status.Unknown;\n  }\n}\n","export {\n  Breadcrumb,\n  Request,\n  SdkInfo,\n  Event,\n  Exception,\n  Response,\n  Severity,\n  StackFrame,\n  Stacktrace,\n  Status,\n  Thread,\n  User,\n} from '@sentry/types';\n\nexport {\n  addGlobalEventProcessor,\n  addBreadcrumb,\n  captureException,\n  captureEvent,\n  captureMessage,\n  configureScope,\n  getHubFromCarrier,\n  getCurrentHub,\n  Hub,\n  Scope,\n  setContext,\n  setExtra,\n  setExtras,\n  setTag,\n  setTags,\n  setUser,\n  Span,\n  withScope,\n} from '@sentry/core';\n\nexport { BrowserOptions } from './backend';\nexport { BrowserClient, ReportDialogOptions } from './client';\nexport { defaultIntegrations, forceLoad, init, lastEventId, onLoad, showReportDialog, flush, close, wrap } from './sdk';\nexport { SDK_NAME, SDK_VERSION } from './version';\n\nimport { Integrations as CoreIntegrations } from '@sentry/core';\nimport { getGlobalObject } from '@sentry/utils';\n\nimport * as BrowserIntegrations from './integrations';\nimport * as Transports from './transports';\n\nlet windowIntegrations = {};\n\n// This block is needed to add compatibility with the integrations packages when used with a CDN\n// tslint:disable: no-unsafe-any\nconst _window = getGlobalObject<Window>();\nif (_window.Sentry && _window.Sentry.Integrations) {\n  windowIntegrations = _window.Sentry.Integrations;\n}\n// tslint:enable: no-unsafe-any\n\nconst INTEGRATIONS = {\n  ...windowIntegrations,\n  ...CoreIntegrations,\n  ...BrowserIntegrations,\n};\n\nexport { INTEGRATIONS as Integrations, Transports };\n","import { Integration, WrappedFunction } from '@sentry/types';\n\nlet originalFunctionToString: () => void;\n\n/** Patch toString calls to return proper name for wrapped functions */\nexport class FunctionToString implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public name: string = FunctionToString.id;\n\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'FunctionToString';\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    originalFunctionToString = Function.prototype.toString;\n\n    Function.prototype.toString = function(this: WrappedFunction, ...args: any[]): string {\n      const context = this.__sentry__ ? this.__sentry_original__ : this;\n      // tslint:disable-next-line:no-unsafe-any\n      return originalFunctionToString.apply(context, args);\n    };\n  }\n}\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { Event, Integration } from '@sentry/types';\nimport { getEventDescription, isMatchingPattern, logger } from '@sentry/utils';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n\n/** JSDoc */\ninterface InboundFiltersOptions {\n  blacklistUrls?: Array<string | RegExp>;\n  ignoreErrors?: Array<string | RegExp>;\n  ignoreInternal?: boolean;\n  whitelistUrls?: Array<string | RegExp>;\n}\n\n/** Inbound filters configurable by the user */\nexport class InboundFilters implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public name: string = InboundFilters.id;\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'InboundFilters';\n\n  public constructor(private readonly _options: InboundFiltersOptions = {}) {}\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    addGlobalEventProcessor((event: Event) => {\n      const hub = getCurrentHub();\n      if (!hub) {\n        return event;\n      }\n      const self = hub.getIntegration(InboundFilters);\n      if (self) {\n        const client = hub.getClient();\n        const clientOptions = client ? client.getOptions() : {};\n        const options = self._mergeOptions(clientOptions);\n        if (self._shouldDropEvent(event, options)) {\n          return null;\n        }\n      }\n      return event;\n    });\n  }\n\n  /** JSDoc */\n  private _shouldDropEvent(event: Event, options: InboundFiltersOptions): boolean {\n    if (this._isSentryError(event, options)) {\n      logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${getEventDescription(event)}`);\n      return true;\n    }\n    if (this._isIgnoredError(event, options)) {\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n      return true;\n    }\n    if (this._isBlacklistedUrl(event, options)) {\n      logger.warn(\n        `Event dropped due to being matched by \\`blacklistUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${this._getEventFilterUrl(event)}`,\n      );\n      return true;\n    }\n    if (!this._isWhitelistedUrl(event, options)) {\n      logger.warn(\n        `Event dropped due to not being matched by \\`whitelistUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${this._getEventFilterUrl(event)}`,\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /** JSDoc */\n  private _isSentryError(event: Event, options: InboundFiltersOptions = {}): boolean {\n    if (!options.ignoreInternal) {\n      return false;\n    }\n\n    try {\n      return (\n        (event &&\n          event.exception &&\n          event.exception.values &&\n          event.exception.values[0] &&\n          event.exception.values[0].type === 'SentryError') ||\n        false\n      );\n    } catch (_oO) {\n      return false;\n    }\n  }\n\n  /** JSDoc */\n  private _isIgnoredError(event: Event, options: InboundFiltersOptions = {}): boolean {\n    if (!options.ignoreErrors || !options.ignoreErrors.length) {\n      return false;\n    }\n\n    return this._getPossibleEventMessages(event).some(message =>\n      // Not sure why TypeScript complains here...\n      (options.ignoreErrors as Array<RegExp | string>).some(pattern => isMatchingPattern(message, pattern)),\n    );\n  }\n\n  /** JSDoc */\n  private _isBlacklistedUrl(event: Event, options: InboundFiltersOptions = {}): boolean {\n    // TODO: Use Glob instead?\n    if (!options.blacklistUrls || !options.blacklistUrls.length) {\n      return false;\n    }\n    const url = this._getEventFilterUrl(event);\n    return !url ? false : options.blacklistUrls.some(pattern => isMatchingPattern(url, pattern));\n  }\n\n  /** JSDoc */\n  private _isWhitelistedUrl(event: Event, options: InboundFiltersOptions = {}): boolean {\n    // TODO: Use Glob instead?\n    if (!options.whitelistUrls || !options.whitelistUrls.length) {\n      return true;\n    }\n    const url = this._getEventFilterUrl(event);\n    return !url ? true : options.whitelistUrls.some(pattern => isMatchingPattern(url, pattern));\n  }\n\n  /** JSDoc */\n  private _mergeOptions(clientOptions: InboundFiltersOptions = {}): InboundFiltersOptions {\n    return {\n      blacklistUrls: [...(this._options.blacklistUrls || []), ...(clientOptions.blacklistUrls || [])],\n      ignoreErrors: [\n        ...(this._options.ignoreErrors || []),\n        ...(clientOptions.ignoreErrors || []),\n        ...DEFAULT_IGNORE_ERRORS,\n      ],\n      ignoreInternal: typeof this._options.ignoreInternal !== 'undefined' ? this._options.ignoreInternal : true,\n      whitelistUrls: [...(this._options.whitelistUrls || []), ...(clientOptions.whitelistUrls || [])],\n    };\n  }\n\n  /** JSDoc */\n  private _getPossibleEventMessages(event: Event): string[] {\n    if (event.message) {\n      return [event.message];\n    }\n    if (event.exception) {\n      try {\n        const { type = '', value = '' } = (event.exception.values && event.exception.values[0]) || {};\n        return [`${value}`, `${type}: ${value}`];\n      } catch (oO) {\n        logger.error(`Cannot extract message for event ${getEventDescription(event)}`);\n        return [];\n      }\n    }\n    return [];\n  }\n\n  /** JSDoc */\n  private _getEventFilterUrl(event: Event): string | null {\n    try {\n      if (event.stacktrace) {\n        const frames = event.stacktrace.frames;\n        return (frames && frames[frames.length - 1].filename) || null;\n      }\n      if (event.exception) {\n        const frames =\n          event.exception.values && event.exception.values[0].stacktrace && event.exception.values[0].stacktrace.frames;\n        return (frames && frames[frames.length - 1].filename) || null;\n      }\n      return null;\n    } catch (oO) {\n      logger.error(`Cannot extract url for event ${getEventDescription(event)}`);\n      return null;\n    }\n  }\n}\n","export const setPrototypeOf =\n  Object.setPrototypeOf || ({ __proto__: [] } instanceof Array ? setProtoOf : mixinProperties); // tslint:disable-line:no-unbound-method\n\n/**\n * setPrototypeOf polyfill using __proto__\n */\nfunction setProtoOf<TTarget extends object, TProto>(obj: TTarget, proto: TProto): TTarget & TProto {\n  // @ts-ignore\n  obj.__proto__ = proto;\n  return obj as TTarget & TProto;\n}\n\n/**\n * setPrototypeOf polyfill using mixin\n */\nfunction mixinProperties<TTarget extends object, TProto>(obj: TTarget, proto: TProto): TTarget & TProto {\n  for (const prop in proto) {\n    if (!obj.hasOwnProperty(prop)) {\n      // @ts-ignore\n      obj[prop] = proto[prop];\n    }\n  }\n\n  return obj as TTarget & TProto;\n}\n","import { setPrototypeOf } from './polyfill';\n\n/** An error emitted by Sentry SDKs and related utilities. */\nexport class SentryError extends Error {\n  /** Display name of this error instance. */\n  public name: string;\n\n  public constructor(public message: string) {\n    super(message);\n\n    // tslint:disable:no-unsafe-any\n    this.name = new.target.prototype.constructor.name;\n    setPrototypeOf(this, new.target.prototype);\n  }\n}\n","import { DsnComponents, DsnLike, DsnProtocol } from '@sentry/types';\nimport { SentryError } from '@sentry/utils';\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+))?@)([\\w\\.-]+)(?::(\\d+))?\\/(.+)/;\n\n/** Error message */\nconst ERROR_MESSAGE = 'Invalid Dsn';\n\n/** The Sentry Dsn, identifying a Sentry instance and project. */\nexport class Dsn implements DsnComponents {\n  /** Protocol used to connect to Sentry. */\n  public protocol!: DsnProtocol;\n  /** Public authorization key. */\n  public user!: string;\n  /** private _authorization key (deprecated, optional). */\n  public pass!: string;\n  /** Hostname of the Sentry instance. */\n  public host!: string;\n  /** Port of the Sentry instance. */\n  public port!: string;\n  /** Path */\n  public path!: string;\n  /** Project ID */\n  public projectId!: string;\n\n  /** Creates a new Dsn component */\n  public constructor(from: DsnLike) {\n    if (typeof from === 'string') {\n      this._fromString(from);\n    } else {\n      this._fromComponents(from);\n    }\n\n    this._validate();\n  }\n\n  /**\n   * Renders the string representation of this Dsn.\n   *\n   * By default, this will render the public representation without the password\n   * component. To get the deprecated private _representation, set `withPassword`\n   * to true.\n   *\n   * @param withPassword When set to true, the password will be included.\n   */\n  public toString(withPassword: boolean = false): string {\n    // tslint:disable-next-line:no-this-assignment\n    const { host, path, pass, port, projectId, protocol, user } = this;\n    return (\n      `${protocol}://${user}${withPassword && pass ? `:${pass}` : ''}` +\n      `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n    );\n  }\n\n  /** Parses a string into this Dsn. */\n  private _fromString(str: string): void {\n    const match = DSN_REGEX.exec(str);\n\n    if (!match) {\n      throw new SentryError(ERROR_MESSAGE);\n    }\n\n    const [protocol, user, pass = '', host, port = '', lastPath] = match.slice(1);\n    let path = '';\n    let projectId = lastPath;\n\n    const split = projectId.split('/');\n    if (split.length > 1) {\n      path = split.slice(0, -1).join('/');\n      projectId = split.pop() as string;\n    }\n\n    this._fromComponents({ host, pass, path, projectId, port, protocol: protocol as DsnProtocol, user });\n  }\n\n  /** Maps Dsn components into this instance. */\n  private _fromComponents(components: DsnComponents): void {\n    this.protocol = components.protocol;\n    this.user = components.user;\n    this.pass = components.pass || '';\n    this.host = components.host;\n    this.port = components.port || '';\n    this.path = components.path || '';\n    this.projectId = components.projectId;\n  }\n\n  /** Validates this Dsn and throws on error. */\n  private _validate(): void {\n    ['protocol', 'user', 'host', 'projectId'].forEach(component => {\n      if (!this[component as keyof DsnComponents]) {\n        throw new SentryError(ERROR_MESSAGE);\n      }\n    });\n\n    if (this.protocol !== 'http' && this.protocol !== 'https') {\n      throw new SentryError(ERROR_MESSAGE);\n    }\n\n    if (this.port && isNaN(parseInt(this.port, 10))) {\n      throw new SentryError(ERROR_MESSAGE);\n    }\n  }\n}\n","import { DsnLike } from '@sentry/types';\nimport { urlEncode } from '@sentry/utils';\n\nimport { Dsn } from './dsn';\n\nconst SENTRY_API_VERSION = '7';\n\n/** Helper class to provide urls to different Sentry endpoints. */\nexport class API {\n  /** The internally used Dsn object. */\n  private readonly _dsnObject: Dsn;\n  /** Create a new instance of API */\n  public constructor(public dsn: DsnLike) {\n    this._dsnObject = new Dsn(dsn);\n  }\n\n  /** Returns the Dsn object. */\n  public getDsn(): Dsn {\n    return this._dsnObject;\n  }\n\n  /** Returns a string with auth headers in the url to the store endpoint. */\n  public getStoreEndpoint(): string {\n    return `${this._getBaseUrl()}${this.getStoreEndpointPath()}`;\n  }\n\n  /** Returns the store endpoint with auth added in url encoded. */\n  public getStoreEndpointWithUrlEncodedAuth(): string {\n    const dsn = this._dsnObject;\n    const auth = {\n      sentry_key: dsn.user,\n      sentry_version: SENTRY_API_VERSION,\n    };\n    // Auth is intentionally sent as part of query string (NOT as custom HTTP header)\n    // to avoid preflight CORS requests\n    return `${this.getStoreEndpoint()}?${urlEncode(auth)}`;\n  }\n\n  /** Returns the base path of the url including the port. */\n  private _getBaseUrl(): string {\n    const dsn = this._dsnObject;\n    const protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n    const port = dsn.port ? `:${dsn.port}` : '';\n    return `${protocol}//${dsn.host}${port}`;\n  }\n\n  /** Returns only the path component for the store endpoint. */\n  public getStoreEndpointPath(): string {\n    const dsn = this._dsnObject;\n    return `${dsn.path ? `/${dsn.path}` : ''}/api/${dsn.projectId}/store/`;\n  }\n\n  /** Returns an object that can be used in request headers. */\n  public getRequestHeaders(clientName: string, clientVersion: string): { [key: string]: string } {\n    const dsn = this._dsnObject;\n    const header = [`Sentry sentry_version=${SENTRY_API_VERSION}`];\n    header.push(`sentry_timestamp=${new Date().getTime()}`);\n    header.push(`sentry_client=${clientName}/${clientVersion}`);\n    header.push(`sentry_key=${dsn.user}`);\n    if (dsn.pass) {\n      header.push(`sentry_secret=${dsn.pass}`);\n    }\n    return {\n      'Content-Type': 'application/json',\n      'X-Sentry-Auth': header.join(', '),\n    };\n  }\n\n  /** Returns the url to the report dialog endpoint. */\n  public getReportDialogEndpoint(\n    dialogOptions: {\n      [key: string]: any;\n      user?: { name?: string; email?: string };\n    } = {},\n  ): string {\n    const dsn = this._dsnObject;\n    const endpoint = `${this._getBaseUrl()}${dsn.path ? `/${dsn.path}` : ''}/api/embed/error-page/`;\n\n    const encodedOptions = [];\n    encodedOptions.push(`dsn=${dsn.toString()}`);\n    for (const key in dialogOptions) {\n      if (key === 'user') {\n        if (!dialogOptions.user) {\n          continue;\n        }\n        if (dialogOptions.user.name) {\n          encodedOptions.push(`name=${encodeURIComponent(dialogOptions.user.name)}`);\n        }\n        if (dialogOptions.user.email) {\n          encodedOptions.push(`email=${encodeURIComponent(dialogOptions.user.email)}`);\n        }\n      } else {\n        encodedOptions.push(`${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] as string)}`);\n      }\n    }\n    if (encodedOptions.length) {\n      return `${endpoint}?${encodedOptions.join('&')}`;\n    }\n\n    return endpoint;\n  }\n}\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { Integration, Options } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nexport const installedIntegrations: string[] = [];\n\n/** Map of integrations assigned to a client */\nexport interface IntegrationIndex {\n  [key: string]: Integration;\n}\n\n/** Gets integration to install */\nexport function getIntegrationsToSetup(options: Options): Integration[] {\n  const defaultIntegrations = (options.defaultIntegrations && [...options.defaultIntegrations]) || [];\n  const userIntegrations = options.integrations;\n  let integrations: Integration[] = [];\n  if (Array.isArray(userIntegrations)) {\n    const userIntegrationsNames = userIntegrations.map(i => i.name);\n    const pickedIntegrationsNames: string[] = [];\n\n    // Leave only unique default integrations, that were not overridden with provided user integrations\n    defaultIntegrations.forEach(defaultIntegration => {\n      if (\n        userIntegrationsNames.indexOf(defaultIntegration.name) === -1 &&\n        pickedIntegrationsNames.indexOf(defaultIntegration.name) === -1\n      ) {\n        integrations.push(defaultIntegration);\n        pickedIntegrationsNames.push(defaultIntegration.name);\n      }\n    });\n\n    // Don't add same user integration twice\n    userIntegrations.forEach(userIntegration => {\n      if (pickedIntegrationsNames.indexOf(userIntegration.name) === -1) {\n        integrations.push(userIntegration);\n        pickedIntegrationsNames.push(userIntegration.name);\n      }\n    });\n  } else if (typeof userIntegrations === 'function') {\n    integrations = userIntegrations(defaultIntegrations);\n    integrations = Array.isArray(integrations) ? integrations : [integrations];\n  } else {\n    integrations = [...defaultIntegrations];\n  }\n\n  // Make sure that if present, `Debug` integration will always run last\n  const integrationsNames = integrations.map(i => i.name);\n  const alwaysLastToRun = 'Debug';\n  if (integrationsNames.indexOf(alwaysLastToRun) !== -1) {\n    integrations.push(...integrations.splice(integrationsNames.indexOf(alwaysLastToRun), 1));\n  }\n\n  return integrations;\n}\n\n/** Setup given integration */\nexport function setupIntegration(integration: Integration): void {\n  if (installedIntegrations.indexOf(integration.name) !== -1) {\n    return;\n  }\n  integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n  installedIntegrations.push(integration.name);\n  logger.log(`Integration installed: ${integration.name}`);\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nexport function setupIntegrations<O extends Options>(options: O): IntegrationIndex {\n  const integrations: IntegrationIndex = {};\n  getIntegrationsToSetup(options).forEach(integration => {\n    integrations[integration.name] = integration;\n    setupIntegration(integration);\n  });\n  return integrations;\n}\n","import { Scope } from '@sentry/hub';\nimport { Client, Event, EventHint, Integration, IntegrationClass, Options, SdkInfo, Severity } from '@sentry/types';\nimport { isPrimitive, isThenable, logger, SyncPromise, truncate, uuid4 } from '@sentry/utils';\n\nimport { Backend, BackendClass } from './basebackend';\nimport { Dsn } from './dsn';\nimport { IntegrationIndex, setupIntegrations } from './integration';\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding backend constructor and options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}. Also, the Backend instance is available via\n * {@link Client.getBackend}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event via the backend, it is passed through\n * {@link BaseClient.prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeBackend, NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(NodeBackend, options);\n *   }\n *\n *   // ...\n * }\n */\nexport abstract class BaseClient<B extends Backend, O extends Options> implements Client<O> {\n  /**\n   * The backend used to physically interact in the enviornment. Usually, this\n   * will correspond to the client. When composing SDKs, however, the Backend\n   * from the root SDK will be used.\n   */\n  protected readonly _backend: B;\n\n  /** Options passed to the SDK. */\n  protected readonly _options: O;\n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n  protected readonly _dsn?: Dsn;\n\n  /** Array of used integrations. */\n  protected readonly _integrations: IntegrationIndex = {};\n\n  /** Is the client still processing a call? */\n  protected _processing: boolean = false;\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param backendClass A constructor function to create the backend.\n   * @param options Options for the client.\n   */\n  protected constructor(backendClass: BackendClass<B, O>, options: O) {\n    this._backend = new backendClass(options);\n    this._options = options;\n\n    if (options.dsn) {\n      this._dsn = new Dsn(options.dsn);\n    }\n\n    if (this._isEnabled()) {\n      this._integrations = setupIntegrations(this._options);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureException(exception: any, hint?: EventHint, scope?: Scope): string | undefined {\n    let eventId: string | undefined = hint && hint.event_id;\n    this._processing = true;\n\n    this._getBackend()\n      .eventFromException(exception, hint)\n      .then(event => this._processEvent(event, hint, scope))\n      .then(finalEvent => {\n        // We need to check for finalEvent in case beforeSend returned null\n        eventId = finalEvent && finalEvent.event_id;\n        this._processing = false;\n      })\n      .then(null, reason => {\n        logger.error(reason);\n        this._processing = false;\n      });\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureMessage(message: string, level?: Severity, hint?: EventHint, scope?: Scope): string | undefined {\n    let eventId: string | undefined = hint && hint.event_id;\n\n    this._processing = true;\n\n    const promisedEvent = isPrimitive(message)\n      ? this._getBackend().eventFromMessage(`${message}`, level, hint)\n      : this._getBackend().eventFromException(message, hint);\n\n    promisedEvent\n      .then(event => this._processEvent(event, hint, scope))\n      .then(finalEvent => {\n        // We need to check for finalEvent in case beforeSend returned null\n        eventId = finalEvent && finalEvent.event_id;\n        this._processing = false;\n      })\n      .then(null, reason => {\n        logger.error(reason);\n        this._processing = false;\n      });\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureEvent(event: Event, hint?: EventHint, scope?: Scope): string | undefined {\n    let eventId: string | undefined = hint && hint.event_id;\n    this._processing = true;\n\n    this._processEvent(event, hint, scope)\n      .then(finalEvent => {\n        // We need to check for finalEvent in case beforeSend returned null\n        eventId = finalEvent && finalEvent.event_id;\n        this._processing = false;\n      })\n      .then(null, reason => {\n        logger.error(reason);\n        this._processing = false;\n      });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getDsn(): Dsn | undefined {\n    return this._dsn;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getOptions(): O {\n    return this._options;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public flush(timeout?: number): PromiseLike<boolean> {\n    return this._isClientProcessing(timeout).then(status => {\n      clearInterval(status.interval);\n      return this._getBackend()\n        .getTransport()\n        .close(timeout)\n        .then(transportFlushed => status.ready && transportFlushed);\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public close(timeout?: number): PromiseLike<boolean> {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      return result;\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getIntegrations(): IntegrationIndex {\n    return this._integrations || {};\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null {\n    try {\n      return (this._integrations[integration.id] as T) || null;\n    } catch (_oO) {\n      logger.warn(`Cannot retrieve integration ${integration.id} from the current Client`);\n      return null;\n    }\n  }\n\n  /** Waits for the client to be done with processing. */\n  protected _isClientProcessing(timeout?: number): PromiseLike<{ ready: boolean; interval: number }> {\n    return new SyncPromise<{ ready: boolean; interval: number }>(resolve => {\n      let ticked: number = 0;\n      const tick: number = 1;\n\n      let interval = 0;\n      clearInterval(interval);\n\n      interval = (setInterval(() => {\n        if (!this._processing) {\n          resolve({\n            interval,\n            ready: true,\n          });\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            resolve({\n              interval,\n              ready: false,\n            });\n          }\n        }\n      }, tick) as unknown) as number;\n    });\n  }\n\n  /** Returns the current backend. */\n  protected _getBackend(): B {\n    return this._backend;\n  }\n\n  /** Determines whether this SDK is enabled and a valid Dsn is present. */\n  protected _isEnabled(): boolean {\n    return this.getOptions().enabled !== false && this._dsn !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional informartion about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n  protected _prepareEvent(event: Event, scope?: Scope, hint?: EventHint): PromiseLike<Event | null> {\n    const { environment, release, dist, maxValueLength = 250 } = this.getOptions();\n\n    const prepared: Event = { ...event };\n    if (prepared.environment === undefined && environment !== undefined) {\n      prepared.environment = environment;\n    }\n    if (prepared.release === undefined && release !== undefined) {\n      prepared.release = release;\n    }\n\n    if (prepared.dist === undefined && dist !== undefined) {\n      prepared.dist = dist;\n    }\n\n    if (prepared.message) {\n      prepared.message = truncate(prepared.message, maxValueLength);\n    }\n\n    const exception = prepared.exception && prepared.exception.values && prepared.exception.values[0];\n    if (exception && exception.value) {\n      exception.value = truncate(exception.value, maxValueLength);\n    }\n\n    const request = prepared.request;\n    if (request && request.url) {\n      request.url = truncate(request.url, maxValueLength);\n    }\n\n    if (prepared.event_id === undefined) {\n      prepared.event_id = uuid4();\n    }\n\n    this._addIntegrations(prepared.sdk);\n\n    // We prepare the result here with a resolved Event.\n    let result = SyncPromise.resolve<Event | null>(prepared);\n\n    // This should be the last thing called, since we want that\n    // {@link Hub.addEventProcessor} gets the finished prepared event.\n    if (scope) {\n      // In case we have a hub we reassign it.\n      result = scope.applyToEvent(prepared, hint);\n    }\n\n    return result;\n  }\n\n  /**\n   * This function adds all used integrations to the SDK info in the event.\n   * @param sdkInfo The sdkInfo of the event that will be filled with all integrations.\n   */\n  protected _addIntegrations(sdkInfo?: SdkInfo): void {\n    const integrationsArray = Object.keys(this._integrations);\n    if (sdkInfo && integrationsArray.length > 0) {\n      sdkInfo.integrations = integrationsArray;\n    }\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional informartion about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n  protected _processEvent(event: Event, hint?: EventHint, scope?: Scope): PromiseLike<Event> {\n    const { beforeSend, sampleRate } = this.getOptions();\n\n    if (!this._isEnabled()) {\n      return SyncPromise.reject('SDK not enabled, will not send event.');\n    }\n\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    if (typeof sampleRate === 'number' && Math.random() > sampleRate) {\n      return SyncPromise.reject('This event has been sampled, will not send event.');\n    }\n\n    return new SyncPromise((resolve, reject) => {\n      this._prepareEvent(event, scope, hint)\n        .then(prepared => {\n          if (prepared === null) {\n            reject('An event processor returned null, will not send event.');\n            return;\n          }\n\n          let finalEvent: Event | null = prepared;\n\n          try {\n            const isInternalException = hint && hint.data && (hint.data as { [key: string]: any }).__sentry__ === true;\n            if (isInternalException || !beforeSend) {\n              this._getBackend().sendEvent(finalEvent);\n              resolve(finalEvent);\n              return;\n            }\n\n            const beforeSendResult = beforeSend(prepared, hint);\n            // tslint:disable-next-line:strict-type-predicates\n            if (typeof beforeSendResult === 'undefined') {\n              logger.error('`beforeSend` method has to return `null` or a valid event.');\n            } else if (isThenable(beforeSendResult)) {\n              this._handleAsyncBeforeSend(beforeSendResult as PromiseLike<Event | null>, resolve, reject);\n            } else {\n              finalEvent = beforeSendResult as Event | null;\n\n              if (finalEvent === null) {\n                logger.log('`beforeSend` returned `null`, will not send event.');\n                resolve(null);\n                return;\n              }\n\n              // From here on we are really async\n              this._getBackend().sendEvent(finalEvent);\n              resolve(finalEvent);\n            }\n          } catch (exception) {\n            this.captureException(exception, {\n              data: {\n                __sentry__: true,\n              },\n              originalException: exception as Error,\n            });\n            reject('`beforeSend` threw an error, will not send event.');\n          }\n        })\n        .then(null, () => {\n          reject('`beforeSend` threw an error, will not send event.');\n        });\n    });\n  }\n\n  /**\n   * Resolves before send Promise and calls resolve/reject on parent SyncPromise.\n   */\n  private _handleAsyncBeforeSend(\n    beforeSend: PromiseLike<Event | null>,\n    resolve: (event: Event) => void,\n    reject: (reason: string) => void,\n  ): void {\n    beforeSend\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          reject('`beforeSend` returned `null`, will not send event.');\n          return;\n        }\n        // From here on we are really async\n        this._getBackend().sendEvent(processedEvent);\n        resolve(processedEvent);\n      })\n      .then(null, e => {\n        reject(`beforeSend rejected with ${e}`);\n      });\n  }\n}\n","import { Event, Response, Status, Transport } from '@sentry/types';\nimport { SyncPromise } from '@sentry/utils';\n\n/** Noop transport */\nexport class NoopTransport implements Transport {\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(_: Event): PromiseLike<Response> {\n    return SyncPromise.resolve({\n      reason: `NoopTransport: Event has been skipped because no Dsn is configured.`,\n      status: Status.Skipped,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public close(_?: number): PromiseLike<boolean> {\n    return SyncPromise.resolve(true);\n  }\n}\n","import { Event, EventHint, Options, Severity, Transport } from '@sentry/types';\nimport { logger, SentryError } from '@sentry/utils';\n\nimport { NoopTransport } from './transports/noop';\n\n/**\n * Internal platform-dependent Sentry SDK Backend.\n *\n * While {@link Client} contains business logic specific to an SDK, the\n * Backend offers platform specific implementations for low-level operations.\n * These are persisting and loading information, sending events, and hooking\n * into the environment.\n *\n * Backends receive a handle to the Client in their constructor. When a\n * Backend automatically generates events, it must pass them to\n * the Client for validation and processing first.\n *\n * Usually, the Client will be of corresponding type, e.g. NodeBackend\n * receives NodeClient. However, higher-level SDKs can choose to instanciate\n * multiple Backends and delegate tasks between them. In this case, an event\n * generated by one backend might very well be sent by another one.\n *\n * The client also provides access to options via {@link Client.getOptions}.\n * @hidden\n */\nexport interface Backend {\n  /** Creates a {@link Event} from an exception. */\n  eventFromException(exception: any, hint?: EventHint): PromiseLike<Event>;\n\n  /** Creates a {@link Event} from a plain message. */\n  eventFromMessage(message: string, level?: Severity, hint?: EventHint): PromiseLike<Event>;\n\n  /** Submits the event to Sentry */\n  sendEvent(event: Event): void;\n\n  /**\n   * Returns the transport that is used by the backend.\n   * Please note that the transport gets lazy initialized so it will only be there once the first event has been sent.\n   *\n   * @returns The transport.\n   */\n  getTransport(): Transport;\n}\n\n/**\n * A class object that can instanciate Backend objects.\n * @hidden\n */\nexport type BackendClass<B extends Backend, O extends Options> = new (options: O) => B;\n\n/**\n * This is the base implemention of a Backend.\n * @hidden\n */\nexport abstract class BaseBackend<O extends Options> implements Backend {\n  /** Options passed to the SDK. */\n  protected readonly _options: O;\n\n  /** Cached transport used internally. */\n  protected _transport: Transport;\n\n  /** Creates a new backend instance. */\n  public constructor(options: O) {\n    this._options = options;\n    if (!this._options.dsn) {\n      logger.warn('No DSN provided, backend will not do anything.');\n    }\n    this._transport = this._setupTransport();\n  }\n\n  /**\n   * Sets up the transport so it can be used later to send requests.\n   */\n  protected _setupTransport(): Transport {\n    return new NoopTransport();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromException(_exception: any, _hint?: EventHint): PromiseLike<Event> {\n    throw new SentryError('Backend has to implement `eventFromException` method');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromMessage(_message: string, _level?: Severity, _hint?: EventHint): PromiseLike<Event> {\n    throw new SentryError('Backend has to implement `eventFromMessage` method');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(event: Event): void {\n    this._transport.sendEvent(event).then(null, reason => {\n      logger.error(`Error while sending event: ${reason}`);\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getTransport(): Transport {\n    return this._transport;\n  }\n}\n","import { logger } from './logger';\nimport { getGlobalObject } from './misc';\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsErrorEvent(): boolean {\n  try {\n    // tslint:disable:no-unused-expression\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMError(): boolean {\n  try {\n    // It really needs 1 argument, not 0.\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-ignore\n    // tslint:disable:no-unused-expression\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMException(): boolean {\n  try {\n    // tslint:disable:no-unused-expression\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsFetch(): boolean {\n  if (!('fetch' in getGlobalObject<Window>())) {\n    return false;\n  }\n\n  try {\n    // tslint:disable-next-line:no-unused-expression\n    new Headers();\n    // tslint:disable-next-line:no-unused-expression\n    new Request('');\n    // tslint:disable-next-line:no-unused-expression\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nexport function supportsNativeFetch(): boolean {\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  const isNativeFunc = (func: Function) => func.toString().indexOf('native') !== -1;\n  const global = getGlobalObject<Window>();\n  let result = null;\n  const doc = global.document;\n  if (doc) {\n    const sandbox = doc.createElement('iframe');\n    sandbox.hidden = true;\n    try {\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // tslint:disable-next-line no-unbound-method\n        result = isNativeFunc(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  if (result === null) {\n    // tslint:disable-next-line no-unbound-method\n    result = isNativeFunc(global.fetch);\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReportingObserver(): boolean {\n  // tslint:disable-next-line: no-unsafe-any\n  return 'ReportingObserver' in getGlobalObject();\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReferrerPolicy(): boolean {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n  // https://caniuse.com/#feat=referrer-policy\n  // It doesn't. And it throw exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    // tslint:disable:no-unused-expression\n    new Request('_', {\n      referrerPolicy: 'origin' as ReferrerPolicy,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsHistory(): boolean {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  const global = getGlobalObject<Window>();\n  const chrome = (global as any).chrome;\n  // tslint:disable-next-line:no-unsafe-any\n  const isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n  const hasHistoryApi = 'history' in global && !!global.history.pushState && !!global.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n","// tslint:disable:object-literal-sort-keys\n\n/**\n * This was originally forked from https://github.com/occ/TraceKit, but has since been\n * largely modified and is now maintained as part of Sentry JS SDK.\n */\n\n/**\n * An object representing a single stack frame.\n * {Object} StackFrame\n * {string} url The JavaScript or HTML file URL.\n * {string} func The function name, or empty for anonymous functions (if guessing did not work).\n * {string[]?} args The arguments passed to the function, if known.\n * {number=} line The line number, if known.\n * {number=} column The column number, if known.\n * {string[]} context An array of source code lines; the middle element corresponds to the correct line#.\n */\nexport interface StackFrame {\n  url: string;\n  func: string;\n  args: string[];\n  line: number | null;\n  column: number | null;\n}\n\n/**\n * An object representing a JavaScript stack trace.\n * {Object} StackTrace\n * {string} name The name of the thrown exception.\n * {string} message The exception error message.\n * {TraceKit.StackFrame[]} stack An array of stack frames.\n */\nexport interface StackTrace {\n  name: string;\n  message: string;\n  mechanism?: string;\n  stack: StackFrame[];\n  failed?: boolean;\n}\n\n// global reference to slice\nconst UNKNOWN_FUNCTION = '?';\n\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\nconst chrome = /^\\s*at (?:(.*?) ?\\()?((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|[-a-z]+:|\\/).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nconst gecko = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:file|https?|blob|chrome|webpack|resource|moz-extension).*?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js))(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nconst winjs = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\nconst geckoEval = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\nconst chromeEval = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\n/** JSDoc */\nexport function computeStackTrace(ex: any): StackTrace {\n  // tslint:disable:no-unsafe-any\n\n  let stack = null;\n  const popSize: number = ex && ex.framesToPop;\n\n  try {\n    // This must be tried first because Opera 10 *destroys*\n    // its stacktrace property if you try to access the stack\n    // property first!!\n    stack = computeStackTraceFromStacktraceProp(ex);\n    if (stack) {\n      return popFrames(stack, popSize);\n    }\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    stack = computeStackTraceFromStackProp(ex);\n    if (stack) {\n      return popFrames(stack, popSize);\n    }\n  } catch (e) {\n    // no-empty\n  }\n\n  return {\n    message: extractMessage(ex),\n    name: ex && ex.name,\n    stack: [],\n    failed: true,\n  };\n}\n\n/** JSDoc */\n// tslint:disable-next-line:cyclomatic-complexity\nfunction computeStackTraceFromStackProp(ex: any): StackTrace | null {\n  // tslint:disable:no-conditional-assignment\n  if (!ex || !ex.stack) {\n    return null;\n  }\n\n  const stack = [];\n  const lines = ex.stack.split('\\n');\n  let isEval;\n  let submatch;\n  let parts;\n  let element;\n\n  for (let i = 0; i < lines.length; ++i) {\n    if ((parts = chrome.exec(lines[i]))) {\n      const isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n      isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n      if (isEval && (submatch = chromeEval.exec(parts[2]))) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = submatch[1]; // url\n        parts[3] = submatch[2]; // line\n        parts[4] = submatch[3]; // column\n      }\n      element = {\n        url: parts[2],\n        func: parts[1] || UNKNOWN_FUNCTION,\n        args: isNative ? [parts[2]] : [],\n        line: parts[3] ? +parts[3] : null,\n        column: parts[4] ? +parts[4] : null,\n      };\n    } else if ((parts = winjs.exec(lines[i]))) {\n      element = {\n        url: parts[2],\n        func: parts[1] || UNKNOWN_FUNCTION,\n        args: [],\n        line: +parts[3],\n        column: parts[4] ? +parts[4] : null,\n      };\n    } else if ((parts = gecko.exec(lines[i]))) {\n      isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n      if (isEval && (submatch = geckoEval.exec(parts[3]))) {\n        // throw out eval line/column and use top-most line number\n        parts[1] = parts[1] || `eval`;\n        parts[3] = submatch[1];\n        parts[4] = submatch[2];\n        parts[5] = ''; // no column when eval\n      } else if (i === 0 && !parts[5] && ex.columnNumber !== void 0) {\n        // FireFox uses this awesome columnNumber property for its top frame\n        // Also note, Firefox's column number is 0-based and everything else expects 1-based,\n        // so adding 1\n        // NOTE: this hack doesn't work if top-most frame is eval\n        stack[0].column = (ex.columnNumber as number) + 1;\n      }\n      element = {\n        url: parts[3],\n        func: parts[1] || UNKNOWN_FUNCTION,\n        args: parts[2] ? parts[2].split(',') : [],\n        line: parts[4] ? +parts[4] : null,\n        column: parts[5] ? +parts[5] : null,\n      };\n    } else {\n      continue;\n    }\n\n    if (!element.func && element.line) {\n      element.func = UNKNOWN_FUNCTION;\n    }\n\n    stack.push(element);\n  }\n\n  if (!stack.length) {\n    return null;\n  }\n\n  return {\n    message: extractMessage(ex),\n    name: ex.name,\n    stack,\n  };\n}\n\n/** JSDoc */\nfunction computeStackTraceFromStacktraceProp(ex: any): StackTrace | null {\n  if (!ex || !ex.stacktrace) {\n    return null;\n  }\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  const stacktrace = ex.stacktrace;\n  const opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n  const opera11Regex = / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^\\)]+))\\((.*)\\))? in (.*):\\s*$/i;\n  const lines = stacktrace.split('\\n');\n  const stack = [];\n  let parts;\n\n  for (let line = 0; line < lines.length; line += 2) {\n    // tslint:disable:no-conditional-assignment\n    let element = null;\n    if ((parts = opera10Regex.exec(lines[line]))) {\n      element = {\n        url: parts[2],\n        func: parts[3],\n        args: [],\n        line: +parts[1],\n        column: null,\n      };\n    } else if ((parts = opera11Regex.exec(lines[line]))) {\n      element = {\n        url: parts[6],\n        func: parts[3] || parts[4],\n        args: parts[5] ? parts[5].split(',') : [],\n        line: +parts[1],\n        column: +parts[2],\n      };\n    }\n\n    if (element) {\n      if (!element.func && element.line) {\n        element.func = UNKNOWN_FUNCTION;\n      }\n      stack.push(element);\n    }\n  }\n\n  if (!stack.length) {\n    return null;\n  }\n\n  return {\n    message: extractMessage(ex),\n    name: ex.name,\n    stack,\n  };\n}\n\n/** Remove N number of frames from the stack */\nfunction popFrames(stacktrace: StackTrace, popSize: number): StackTrace {\n  try {\n    return {\n      ...stacktrace,\n      stack: stacktrace.stack.slice(popSize),\n    };\n  } catch (e) {\n    return stacktrace;\n  }\n}\n\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\nfunction extractMessage(ex: any): string {\n  const message = ex && ex.message;\n  if (!message) {\n    return 'No error message';\n  }\n  if (message.error && typeof message.error.message === 'string') {\n    return message.error.message;\n  }\n  return message;\n}\n","import { Event, Exception, StackFrame } from '@sentry/types';\nimport { extractExceptionKeysForMessage, isEvent, normalizeToSize } from '@sentry/utils';\n\nimport { computeStackTrace, StackFrame as TraceKitStackFrame, StackTrace as TraceKitStackTrace } from './tracekit';\n\nconst STACKTRACE_LIMIT = 50;\n\n/**\n * This function creates an exception from an TraceKitStackTrace\n * @param stacktrace TraceKitStackTrace that will be converted to an exception\n * @hidden\n */\nexport function exceptionFromStacktrace(stacktrace: TraceKitStackTrace): Exception {\n  const frames = prepareFramesForEvent(stacktrace.stack);\n\n  const exception: Exception = {\n    type: stacktrace.name,\n    value: stacktrace.message,\n  };\n\n  if (frames && frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  // tslint:disable-next-line:strict-type-predicates\n  if (exception.type === undefined && exception.value === '') {\n    exception.value = 'Unrecoverable error caught';\n  }\n\n  return exception;\n}\n\n/**\n * @hidden\n */\nexport function eventFromPlainObject(exception: {}, syntheticException?: Error, rejection?: boolean): Event {\n  const event: Event = {\n    exception: {\n      values: [\n        {\n          type: isEvent(exception) ? exception.constructor.name : rejection ? 'UnhandledRejection' : 'Error',\n          value: `Non-Error ${\n            rejection ? 'promise rejection' : 'exception'\n          } captured with keys: ${extractExceptionKeysForMessage(exception)}`,\n        },\n      ],\n    },\n    extra: {\n      __serialized__: normalizeToSize(exception),\n    },\n  };\n\n  if (syntheticException) {\n    const stacktrace = computeStackTrace(syntheticException);\n    const frames = prepareFramesForEvent(stacktrace.stack);\n    event.stacktrace = {\n      frames,\n    };\n  }\n\n  return event;\n}\n\n/**\n * @hidden\n */\nexport function eventFromStacktrace(stacktrace: TraceKitStackTrace): Event {\n  const exception = exceptionFromStacktrace(stacktrace);\n\n  return {\n    exception: {\n      values: [exception],\n    },\n  };\n}\n\n/**\n * @hidden\n */\nexport function prepareFramesForEvent(stack: TraceKitStackFrame[]): StackFrame[] {\n  if (!stack || !stack.length) {\n    return [];\n  }\n\n  let localStack = stack;\n\n  const firstFrameFunction = localStack[0].func || '';\n  const lastFrameFunction = localStack[localStack.length - 1].func || '';\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (firstFrameFunction.indexOf('captureMessage') !== -1 || firstFrameFunction.indexOf('captureException') !== -1) {\n    localStack = localStack.slice(1);\n  }\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (lastFrameFunction.indexOf('sentryWrapped') !== -1) {\n    localStack = localStack.slice(0, -1);\n  }\n\n  // The frame where the crash happened, should be the last entry in the array\n  return localStack\n    .map(\n      (frame: TraceKitStackFrame): StackFrame => ({\n        colno: frame.column === null ? undefined : frame.column,\n        filename: frame.url || localStack[0].url,\n        function: frame.func || '?',\n        in_app: true,\n        lineno: frame.line === null ? undefined : frame.line,\n      }),\n    )\n    .slice(0, STACKTRACE_LIMIT)\n    .reverse();\n}\n","import { Event } from '@sentry/types';\nimport {\n  addExceptionMechanism,\n  addExceptionTypeValue,\n  isDOMError,\n  isDOMException,\n  isError,\n  isErrorEvent,\n  isEvent,\n  isPlainObject,\n} from '@sentry/utils';\n\nimport { eventFromPlainObject, eventFromStacktrace, prepareFramesForEvent } from './parsers';\nimport { computeStackTrace } from './tracekit';\n\n/** JSDoc */\nexport function eventFromUnknownInput(\n  exception: unknown,\n  syntheticException?: Error,\n  options: {\n    rejection?: boolean;\n    attachStacktrace?: boolean;\n  } = {},\n): Event {\n  let event: Event;\n\n  if (isErrorEvent(exception as ErrorEvent) && (exception as ErrorEvent).error) {\n    // If it is an ErrorEvent with `error` property, extract it to get actual Error\n    const errorEvent = exception as ErrorEvent;\n    exception = errorEvent.error; // tslint:disable-line:no-parameter-reassignment\n    event = eventFromStacktrace(computeStackTrace(exception as Error));\n    return event;\n  }\n  if (isDOMError(exception as DOMError) || isDOMException(exception as DOMException)) {\n    // If it is a DOMError or DOMException (which are legacy APIs, but still supported in some browsers)\n    // then we just extract the name and message, as they don't provide anything else\n    // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n    // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n    const domException = exception as DOMException;\n    const name = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n    const message = domException.message ? `${name}: ${domException.message}` : name;\n\n    event = eventFromString(message, syntheticException, options);\n    addExceptionTypeValue(event, message);\n    return event;\n  }\n  if (isError(exception as Error)) {\n    // we have a real Error object, do nothing\n    event = eventFromStacktrace(computeStackTrace(exception as Error));\n    return event;\n  }\n  if (isPlainObject(exception) || isEvent(exception)) {\n    // If it is plain Object or Event, serialize it manually and extract options\n    // This will allow us to group events based on top-level keys\n    // which is much better than creating new group when any key/value change\n    const objectException = exception as {};\n    event = eventFromPlainObject(objectException, syntheticException, options.rejection);\n    addExceptionMechanism(event, {\n      synthetic: true,\n    });\n    return event;\n  }\n\n  // If none of previous checks were valid, then it means that it's not:\n  // - an instance of DOMError\n  // - an instance of DOMException\n  // - an instance of Event\n  // - an instance of Error\n  // - a valid ErrorEvent (one with an error property)\n  // - a plain Object\n  //\n  // So bail out and capture it as a simple message:\n  event = eventFromString(exception as string, syntheticException, options);\n  addExceptionTypeValue(event, `${exception}`, undefined);\n  addExceptionMechanism(event, {\n    synthetic: true,\n  });\n\n  return event;\n}\n\n// this._options.attachStacktrace\n/** JSDoc */\nexport function eventFromString(\n  input: string,\n  syntheticException?: Error,\n  options: {\n    attachStacktrace?: boolean;\n  } = {},\n): Event {\n  const event: Event = {\n    message: input,\n  };\n\n  if (options.attachStacktrace && syntheticException) {\n    const stacktrace = computeStackTrace(syntheticException);\n    const frames = prepareFramesForEvent(stacktrace.stack);\n    event.stacktrace = {\n      frames,\n    };\n  }\n\n  return event;\n}\n","import { SentryError } from './error';\nimport { SyncPromise } from './syncpromise';\n\n/** A simple queue that holds promises. */\nexport class PromiseBuffer<T> {\n  public constructor(protected _limit?: number) {}\n\n  /** Internal set of queued Promises */\n  private readonly _buffer: Array<PromiseLike<T>> = [];\n\n  /**\n   * Says if the buffer is ready to take more requests\n   */\n  public isReady(): boolean {\n    return this._limit === undefined || this.length() < this._limit;\n  }\n\n  /**\n   * Add a promise to the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns The original promise.\n   */\n  public add(task: PromiseLike<T>): PromiseLike<T> {\n    if (!this.isReady()) {\n      return SyncPromise.reject(new SentryError('Not adding Promise due to buffer limit reached.'));\n    }\n    if (this._buffer.indexOf(task) === -1) {\n      this._buffer.push(task);\n    }\n    task\n      .then(() => this.remove(task))\n      .then(null, () =>\n        this.remove(task).then(null, () => {\n          // We have to add this catch here otherwise we have an unhandledPromiseRejection\n          // because it's a new Promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Remove a promise to the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  public remove(task: PromiseLike<T>): PromiseLike<T> {\n    const removedTask = this._buffer.splice(this._buffer.indexOf(task), 1)[0];\n    return removedTask;\n  }\n\n  /**\n   * This function returns the number of unresolved promises in the queue.\n   */\n  public length(): number {\n    return this._buffer.length;\n  }\n\n  /**\n   * This will drain the whole queue, returns true if queue is empty or drained.\n   * If timeout is provided and the queue takes longer to drain, the promise still resolves but with false.\n   *\n   * @param timeout Number in ms to wait until it resolves with false.\n   */\n  public drain(timeout?: number): PromiseLike<boolean> {\n    return new SyncPromise<boolean>(resolve => {\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n      SyncPromise.all(this._buffer)\n        .then(() => {\n          clearTimeout(capturedSetTimeout);\n          resolve(true);\n        })\n        .then(null, () => {\n          resolve(true);\n        });\n    });\n  }\n}\n","import { API } from '@sentry/core';\nimport { Event, Response, Transport, TransportOptions } from '@sentry/types';\nimport { PromiseBuffer, SentryError } from '@sentry/utils';\n\n/** Base Transport class implementation */\nexport abstract class BaseTransport implements Transport {\n  /**\n   * @inheritDoc\n   */\n  public url: string;\n\n  /** A simple buffer holding all requests. */\n  protected readonly _buffer: PromiseBuffer<Response> = new PromiseBuffer(30);\n\n  public constructor(public options: TransportOptions) {\n    this.url = new API(this.options.dsn).getStoreEndpointWithUrlEncodedAuth();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(_: Event): PromiseLike<Response> {\n    throw new SentryError('Transport Class has to implement `sendEvent` method');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public close(timeout?: number): PromiseLike<boolean> {\n    return this._buffer.drain(timeout);\n  }\n}\n","import { Event, Response, Status } from '@sentry/types';\nimport { getGlobalObject, logger, parseRetryAfterHeader, supportsReferrerPolicy, SyncPromise } from '@sentry/utils';\n\nimport { BaseTransport } from './base';\n\nconst global = getGlobalObject<Window>();\n\n/** `fetch` based transport */\nexport class FetchTransport extends BaseTransport {\n  /** Locks transport after receiving 429 response */\n  private _disabledUntil: Date = new Date(Date.now());\n\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(event: Event): PromiseLike<Response> {\n    if (new Date(Date.now()) < this._disabledUntil) {\n      return Promise.reject({\n        event,\n        reason: `Transport locked till ${this._disabledUntil} due to too many requests.`,\n        status: 429,\n      });\n    }\n\n    const defaultOptions: RequestInit = {\n      body: JSON.stringify(event),\n      method: 'POST',\n      // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n      // https://caniuse.com/#feat=referrer-policy\n      // It doesn't. And it throw exception instead of ignoring this parameter...\n      // REF: https://github.com/getsentry/raven-js/issues/1233\n      referrerPolicy: (supportsReferrerPolicy() ? 'origin' : '') as ReferrerPolicy,\n    };\n\n    return this._buffer.add(\n      new SyncPromise<Response>((resolve, reject) => {\n        global\n          .fetch(this.url, defaultOptions)\n          .then(response => {\n            const status = Status.fromHttpCode(response.status);\n\n            if (status === Status.Success) {\n              resolve({ status });\n              return;\n            }\n\n            if (status === Status.RateLimit) {\n              const now = Date.now();\n              this._disabledUntil = new Date(now + parseRetryAfterHeader(now, response.headers.get('Retry-After')));\n              logger.warn(`Too many requests, backing off till: ${this._disabledUntil}`);\n            }\n\n            reject(response);\n          })\n          .catch(reject);\n      }),\n    );\n  }\n}\n","import { Event, Response, Status } from '@sentry/types';\nimport { logger, parseRetryAfterHeader, SyncPromise } from '@sentry/utils';\n\nimport { BaseTransport } from './base';\n\n/** `XHR` based transport */\nexport class XHRTransport extends BaseTransport {\n  /** Locks transport after receiving 429 response */\n  private _disabledUntil: Date = new Date(Date.now());\n\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(event: Event): PromiseLike<Response> {\n    if (new Date(Date.now()) < this._disabledUntil) {\n      return Promise.reject({\n        event,\n        reason: `Transport locked till ${this._disabledUntil} due to too many requests.`,\n        status: 429,\n      });\n    }\n\n    return this._buffer.add(\n      new SyncPromise<Response>((resolve, reject) => {\n        const request = new XMLHttpRequest();\n\n        request.onreadystatechange = () => {\n          if (request.readyState !== 4) {\n            return;\n          }\n\n          const status = Status.fromHttpCode(request.status);\n\n          if (status === Status.Success) {\n            resolve({ status });\n            return;\n          }\n\n          if (status === Status.RateLimit) {\n            const now = Date.now();\n            this._disabledUntil = new Date(now + parseRetryAfterHeader(now, request.getResponseHeader('Retry-After')));\n            logger.warn(`Too many requests, backing off till: ${this._disabledUntil}`);\n          }\n\n          reject(request);\n        };\n\n        request.open('POST', this.url);\n        request.send(JSON.stringify(event));\n      }),\n    );\n  }\n}\n","import { BaseBackend } from '@sentry/core';\nimport { Event, EventHint, Options, Severity, Transport } from '@sentry/types';\nimport { addExceptionMechanism, supportsFetch, SyncPromise } from '@sentry/utils';\n\nimport { eventFromString, eventFromUnknownInput } from './eventbuilder';\nimport { FetchTransport, XHRTransport } from './transports';\n\n/**\n * Configuration options for the Sentry Browser SDK.\n * @see BrowserClient for more information.\n */\nexport interface BrowserOptions extends Options {\n  /**\n   * A pattern for error URLs which should not be sent to Sentry.\n   * To whitelist certain errors instead, use {@link Options.whitelistUrls}.\n   * By default, all errors will be sent.\n   */\n  blacklistUrls?: Array<string | RegExp>;\n\n  /**\n   * A pattern for error URLs which should exclusively be sent to Sentry.\n   * This is the opposite of {@link Options.blacklistUrls}.\n   * By default, all errors will be sent.\n   */\n  whitelistUrls?: Array<string | RegExp>;\n}\n\n/**\n * The Sentry Browser SDK Backend.\n * @hidden\n */\nexport class BrowserBackend extends BaseBackend<BrowserOptions> {\n  /**\n   * @inheritDoc\n   */\n  protected _setupTransport(): Transport {\n    if (!this._options.dsn) {\n      // We return the noop transport here in case there is no Dsn.\n      return super._setupTransport();\n    }\n\n    const transportOptions = {\n      ...this._options.transportOptions,\n      dsn: this._options.dsn,\n    };\n\n    if (this._options.transport) {\n      return new this._options.transport(transportOptions);\n    }\n    if (supportsFetch()) {\n      return new FetchTransport(transportOptions);\n    }\n    return new XHRTransport(transportOptions);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromException(exception: any, hint?: EventHint): PromiseLike<Event> {\n    const syntheticException = (hint && hint.syntheticException) || undefined;\n    const event = eventFromUnknownInput(exception, syntheticException, {\n      attachStacktrace: this._options.attachStacktrace,\n    });\n    addExceptionMechanism(event, {\n      handled: true,\n      type: 'generic',\n    });\n    event.level = Severity.Error;\n    if (hint && hint.event_id) {\n      event.event_id = hint.event_id;\n    }\n    return SyncPromise.resolve(event);\n  }\n  /**\n   * @inheritDoc\n   */\n  public eventFromMessage(message: string, level: Severity = Severity.Info, hint?: EventHint): PromiseLike<Event> {\n    const syntheticException = (hint && hint.syntheticException) || undefined;\n    const event = eventFromString(message, syntheticException, {\n      attachStacktrace: this._options.attachStacktrace,\n    });\n    event.level = level;\n    if (hint && hint.event_id) {\n      event.event_id = hint.event_id;\n    }\n    return SyncPromise.resolve(event);\n  }\n}\n","export const SDK_NAME = 'sentry.javascript.browser';\nexport const SDK_VERSION = '5.9.1';\n","import { API, BaseClient, Scope } from '@sentry/core';\nimport { DsnLike, Event, EventHint } from '@sentry/types';\nimport { getGlobalObject, logger } from '@sentry/utils';\n\nimport { BrowserBackend, BrowserOptions } from './backend';\nimport { SDK_NAME, SDK_VERSION } from './version';\n\n/**\n * All properties the report dialog supports\n */\nexport interface ReportDialogOptions {\n  [key: string]: any;\n  eventId?: string;\n  dsn?: DsnLike;\n  user?: {\n    email?: string;\n    name?: string;\n  };\n  lang?: string;\n  title?: string;\n  subtitle?: string;\n  subtitle2?: string;\n  labelName?: string;\n  labelEmail?: string;\n  labelComments?: string;\n  labelClose?: string;\n  labelSubmit?: string;\n  errorGeneric?: string;\n  errorFormEntry?: string;\n  successMessage?: string;\n  /** Callback after reportDialog showed up */\n  onLoad?(): void;\n}\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nexport class BrowserClient extends BaseClient<BrowserBackend, BrowserOptions> {\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n  public constructor(options: BrowserOptions = {}) {\n    super(BrowserBackend, options);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  protected _prepareEvent(event: Event, scope?: Scope, hint?: EventHint): PromiseLike<Event | null> {\n    event.platform = event.platform || 'javascript';\n    event.sdk = {\n      ...event.sdk,\n      name: SDK_NAME,\n      packages: [\n        ...((event.sdk && event.sdk.packages) || []),\n        {\n          name: 'npm:@sentry/browser',\n          version: SDK_VERSION,\n        },\n      ],\n      version: SDK_VERSION,\n    };\n\n    return super._prepareEvent(event, scope, hint);\n  }\n\n  /**\n   * Show a report dialog to the user to send feedback to a specific event.\n   *\n   * @param options Set individual options for the dialog\n   */\n  public showReportDialog(options: ReportDialogOptions = {}): void {\n    // doesn't work without a document (React Native)\n    const document = getGlobalObject<Window>().document;\n    if (!document) {\n      return;\n    }\n\n    if (!this._isEnabled()) {\n      logger.error('Trying to call showReportDialog with Sentry Client is disabled');\n      return;\n    }\n\n    const dsn = options.dsn || this.getDsn();\n\n    if (!options.eventId) {\n      logger.error('Missing `eventId` option in showReportDialog call');\n      return;\n    }\n\n    if (!dsn) {\n      logger.error('Missing `Dsn` option in showReportDialog call');\n      return;\n    }\n\n    const script = document.createElement('script');\n    script.async = true;\n    script.src = new API(dsn).getReportDialogEndpoint(options);\n\n    if (options.onLoad) {\n      script.onload = options.onLoad;\n    }\n\n    (document.head || document.body).appendChild(script);\n  }\n}\n","import { captureException, getCurrentHub, withScope } from '@sentry/core';\nimport { Event as SentryEvent, Mechanism, Scope, WrappedFunction } from '@sentry/types';\nimport { addExceptionMechanism, addExceptionTypeValue, htmlTreeAsString, normalize } from '@sentry/utils';\n\nconst debounceDuration: number = 1000;\nlet keypressTimeout: number | undefined;\nlet lastCapturedEvent: Event | undefined;\nlet ignoreOnError: number = 0;\n\n/**\n * @hidden\n */\nexport function shouldIgnoreOnError(): boolean {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nexport function ignoreNextOnError(): void {\n  // onerror should trigger before setTimeout\n  ignoreOnError += 1;\n  setTimeout(() => {\n    ignoreOnError -= 1;\n  });\n}\n\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap.\n * @returns The wrapped function.\n * @hidden\n */\nexport function wrap(\n  fn: WrappedFunction,\n  options: {\n    mechanism?: Mechanism;\n    capture?: boolean;\n  } = {},\n  before?: WrappedFunction,\n): any {\n  // tslint:disable-next-line:strict-type-predicates\n  if (typeof fn !== 'function') {\n    return fn;\n  }\n\n  try {\n    // We don't wanna wrap it twice\n    if (fn.__sentry__) {\n      return fn;\n    }\n\n    // If this has already been wrapped in the past, return that wrapped function\n    if (fn.__sentry_wrapped__) {\n      return fn.__sentry_wrapped__;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n  const sentryWrapped: WrappedFunction = function(this: any): void {\n    // tslint:disable-next-line:strict-type-predicates\n    if (before && typeof before === 'function') {\n      before.apply(this, arguments);\n    }\n\n    const args = Array.prototype.slice.call(arguments);\n\n    // tslint:disable:no-unsafe-any\n    try {\n      const wrappedArguments = args.map((arg: any) => wrap(arg, options));\n\n      if (fn.handleEvent) {\n        // Attempt to invoke user-land function\n        // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n        //       means the sentry.javascript SDK caught an error invoking your application code. This\n        //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n        return fn.handleEvent.apply(this, wrappedArguments);\n      }\n\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n      // tslint:enable:no-unsafe-any\n    } catch (ex) {\n      ignoreNextOnError();\n\n      withScope((scope: Scope) => {\n        scope.addEventProcessor((event: SentryEvent) => {\n          const processedEvent = { ...event };\n\n          if (options.mechanism) {\n            addExceptionTypeValue(processedEvent, undefined, undefined);\n            addExceptionMechanism(processedEvent, options.mechanism);\n          }\n\n          processedEvent.extra = {\n            ...processedEvent.extra,\n            arguments: normalize(args, 3),\n          };\n\n          return processedEvent;\n        });\n\n        captureException(ex);\n      });\n\n      throw ex;\n    }\n  };\n\n  // Accessing some objects may throw\n  // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  try {\n    for (const property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property] = fn[property];\n      }\n    }\n  } catch (_oO) {} // tslint:disable-line:no-empty\n\n  fn.prototype = fn.prototype || {};\n  sentryWrapped.prototype = fn.prototype;\n\n  Object.defineProperty(fn, '__sentry_wrapped__', {\n    enumerable: false,\n    value: sentryWrapped,\n  });\n\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  Object.defineProperties(sentryWrapped, {\n    __sentry__: {\n      enumerable: false,\n      value: true,\n    },\n    __sentry_original__: {\n      enumerable: false,\n      value: fn,\n    },\n  });\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    const descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name') as PropertyDescriptor;\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get(): string {\n          return fn.name;\n        },\n      });\n    }\n  } catch (_oO) {\n    /*no-empty*/\n  }\n\n  return sentryWrapped;\n}\n\nlet debounceTimer: number = 0;\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n * @param eventName the event name (e.g. \"click\")\n * @returns wrapped breadcrumb events handler\n * @hidden\n */\nexport function breadcrumbEventHandler(eventName: string, debounce: boolean = false): (event: Event) => void {\n  return (event: Event) => {\n    // reset keypress timeout; e.g. triggering a 'click' after\n    // a 'keypress' will reset the keypress debounce so that a new\n    // set of keypresses can be recorded\n    keypressTimeout = undefined;\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors). Ignore if we've\n    // already captured the event.\n    if (!event || lastCapturedEvent === event) {\n      return;\n    }\n\n    lastCapturedEvent = event;\n\n    const captureBreadcrumb = () => {\n      let target;\n\n      // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n      try {\n        target = event.target ? htmlTreeAsString(event.target as Node) : htmlTreeAsString((event as unknown) as Node);\n      } catch (e) {\n        target = '<unknown>';\n      }\n\n      if (target.length === 0) {\n        return;\n      }\n\n      getCurrentHub().addBreadcrumb(\n        {\n          category: `ui.${eventName}`, // e.g. ui.click, ui.input\n          message: target,\n        },\n        {\n          event,\n          name: eventName,\n        },\n      );\n    };\n\n    if (debounceTimer) {\n      clearTimeout(debounceTimer);\n    }\n\n    if (debounce) {\n      debounceTimer = setTimeout(captureBreadcrumb);\n    } else {\n      captureBreadcrumb();\n    }\n  };\n}\n\n/**\n * Wraps addEventListener to capture keypress UI events\n * @returns wrapped keypress events handler\n * @hidden\n */\nexport function keypressEventHandler(): (event: Event) => void {\n  // TODO: if somehow user switches keypress target before\n  //       debounce timeout is triggered, we will only capture\n  //       a single breadcrumb from the FIRST target (acceptable?)\n  return (event: Event) => {\n    let target;\n\n    try {\n      target = event.target;\n    } catch (e) {\n      // just accessing event properties can throw an exception in some rare circumstances\n      // see: https://github.com/getsentry/raven-js/issues/838\n      return;\n    }\n\n    const tagName = target && (target as HTMLElement).tagName;\n\n    // only consider keypress events on actual input elements\n    // this will disregard keypresses targeting body (e.g. tabbing\n    // through elements, hotkeys, etc)\n    if (!tagName || (tagName !== 'INPUT' && tagName !== 'TEXTAREA' && !(target as HTMLElement).isContentEditable)) {\n      return;\n    }\n\n    // record first keypress in a series, but ignore subsequent\n    // keypresses until debounce clears\n    if (!keypressTimeout) {\n      breadcrumbEventHandler('input')(event);\n    }\n    clearTimeout(keypressTimeout);\n\n    keypressTimeout = (setTimeout(() => {\n      keypressTimeout = undefined;\n    }, debounceDuration) as any) as number;\n  };\n}\n","import { Integration, WrappedFunction } from '@sentry/types';\nimport { fill, getGlobalObject } from '@sentry/utils';\n\nimport { wrap } from '../helpers';\n\n/** Wrap timer functions and event targets to catch errors and provide better meta data */\nexport class TryCatch implements Integration {\n  /** JSDoc */\n  private _ignoreOnError: number = 0;\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = TryCatch.id;\n\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'TryCatch';\n\n  /** JSDoc */\n  private _wrapTimeFunction(original: () => void): () => number {\n    return function(this: any, ...args: any[]): number {\n      const originalCallback = args[0];\n      args[0] = wrap(originalCallback, {\n        mechanism: {\n          data: { function: getFunctionName(original) },\n          handled: true,\n          type: 'instrument',\n        },\n      });\n      return original.apply(this, args);\n    };\n  }\n\n  /** JSDoc */\n  private _wrapRAF(original: any): (callback: () => void) => any {\n    return function(this: any, callback: () => void): () => void {\n      return original(\n        wrap(callback, {\n          mechanism: {\n            data: {\n              function: 'requestAnimationFrame',\n              handler: getFunctionName(original),\n            },\n            handled: true,\n            type: 'instrument',\n          },\n        }),\n      );\n    };\n  }\n\n  /** JSDoc */\n  private _wrapEventTarget(target: string): void {\n    const global = getGlobalObject() as { [key: string]: any };\n    const proto = global[target] && global[target].prototype;\n\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function(\n      original: () => void,\n    ): (eventName: string, fn: EventListenerObject, options?: boolean | AddEventListenerOptions) => void {\n      return function(\n        this: any,\n        eventName: string,\n        fn: EventListenerObject,\n        options?: boolean | AddEventListenerOptions,\n      ): (eventName: string, fn: EventListenerObject, capture?: boolean, secure?: boolean) => void {\n        try {\n          // tslint:disable-next-line:no-unbound-method strict-type-predicates\n          if (typeof fn.handleEvent === 'function') {\n            fn.handleEvent = wrap(fn.handleEvent.bind(fn), {\n              mechanism: {\n                data: {\n                  function: 'handleEvent',\n                  handler: getFunctionName(fn),\n                  target,\n                },\n                handled: true,\n                type: 'instrument',\n              },\n            });\n          }\n        } catch (err) {\n          // can sometimes get 'Permission denied to access property \"handle Event'\n        }\n\n        return original.call(\n          this,\n          eventName,\n          wrap((fn as any) as WrappedFunction, {\n            mechanism: {\n              data: {\n                function: 'addEventListener',\n                handler: getFunctionName(fn),\n                target,\n              },\n              handled: true,\n              type: 'instrument',\n            },\n          }),\n          options,\n        );\n      };\n    });\n\n    fill(proto, 'removeEventListener', function(\n      original: () => void,\n    ): (this: any, eventName: string, fn: EventListenerObject, options?: boolean | EventListenerOptions) => () => void {\n      return function(\n        this: any,\n        eventName: string,\n        fn: EventListenerObject,\n        options?: boolean | EventListenerOptions,\n      ): () => void {\n        let callback = (fn as any) as WrappedFunction;\n        try {\n          callback = callback && (callback.__sentry_wrapped__ || callback);\n        } catch (e) {\n          // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n        }\n        return original.call(this, eventName, callback, options);\n      };\n    });\n  }\n\n  /**\n   * Wrap timer functions and event targets to catch errors\n   * and provide better metadata.\n   */\n  public setupOnce(): void {\n    this._ignoreOnError = this._ignoreOnError;\n\n    const global = getGlobalObject();\n\n    fill(global, 'setTimeout', this._wrapTimeFunction.bind(this));\n    fill(global, 'setInterval', this._wrapTimeFunction.bind(this));\n    fill(global, 'requestAnimationFrame', this._wrapRAF.bind(this));\n\n    [\n      'EventTarget',\n      'Window',\n      'Node',\n      'ApplicationCache',\n      'AudioTrackList',\n      'ChannelMergerNode',\n      'CryptoOperation',\n      'EventSource',\n      'FileReader',\n      'HTMLUnknownElement',\n      'IDBDatabase',\n      'IDBRequest',\n      'IDBTransaction',\n      'KeyOperation',\n      'MediaController',\n      'MessagePort',\n      'ModalWindow',\n      'Notification',\n      'SVGElementInstance',\n      'Screen',\n      'TextTrack',\n      'TextTrackCue',\n      'TextTrackList',\n      'WebSocket',\n      'WebSocketWorker',\n      'Worker',\n      'XMLHttpRequest',\n      'XMLHttpRequestEventTarget',\n      'XMLHttpRequestUpload',\n    ].forEach(this._wrapEventTarget.bind(this));\n  }\n}\n\n/**\n * Safely extract function name from itself\n */\nfunction getFunctionName(fn: any): string {\n  try {\n    return (fn && fn.name) || '<anonymous>';\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return '<anonymous>';\n  }\n}\n","import { API, getCurrentHub } from '@sentry/core';\nimport { Breadcrumb, BreadcrumbHint, Integration, Severity, WrappedFunction } from '@sentry/types';\nimport {\n  fill,\n  getEventDescription,\n  getGlobalObject,\n  isString,\n  logger,\n  normalize,\n  parseUrl,\n  safeJoin,\n  supportsHistory,\n  supportsNativeFetch,\n} from '@sentry/utils';\n\nimport { BrowserClient } from '../client';\nimport { breadcrumbEventHandler, keypressEventHandler, wrap } from '../helpers';\n\nconst global = getGlobalObject<Window>();\nlet lastHref: string | undefined;\n/**\n * @hidden\n */\nexport interface SentryWrappedXMLHttpRequest extends XMLHttpRequest {\n  [key: string]: any;\n  __sentry_xhr__?: {\n    method?: string;\n    url?: string;\n    status_code?: number;\n  };\n}\n\n/** JSDoc */\ninterface BreadcrumbIntegrations {\n  console?: boolean;\n  dom?: boolean;\n  fetch?: boolean;\n  history?: boolean;\n  sentry?: boolean;\n  xhr?: boolean;\n}\n\ntype XMLHttpRequestProp = 'onload' | 'onerror' | 'onprogress';\n\n/** Default Breadcrumbs instrumentations */\nexport class Breadcrumbs implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public name: string = Breadcrumbs.id;\n\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Breadcrumbs';\n\n  /** JSDoc */\n  private readonly _options: BreadcrumbIntegrations;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options?: BreadcrumbIntegrations) {\n    this._options = {\n      console: true,\n      dom: true,\n      fetch: true,\n      history: true,\n      sentry: true,\n      xhr: true,\n      ...options,\n    };\n  }\n\n  /** JSDoc */\n  private _instrumentConsole(): void {\n    if (!('console' in global)) {\n      return;\n    }\n    ['debug', 'info', 'warn', 'error', 'log', 'assert'].forEach(function(level: string): void {\n      if (!(level in global.console)) {\n        return;\n      }\n\n      fill(global.console, level, function(originalConsoleLevel: () => any): Function {\n        return function(...args: any[]): void {\n          const breadcrumbData = {\n            category: 'console',\n            data: {\n              extra: {\n                arguments: normalize(args, 3),\n              },\n              logger: 'console',\n            },\n            level: Severity.fromString(level),\n            message: safeJoin(args, ' '),\n          };\n\n          if (level === 'assert') {\n            if (args[0] === false) {\n              breadcrumbData.message = `Assertion failed: ${safeJoin(args.slice(1), ' ') || 'console.assert'}`;\n              breadcrumbData.data.extra.arguments = normalize(args.slice(1), 3);\n              Breadcrumbs.addBreadcrumb(breadcrumbData, {\n                input: args,\n                level,\n              });\n            }\n          } else {\n            Breadcrumbs.addBreadcrumb(breadcrumbData, {\n              input: args,\n              level,\n            });\n          }\n\n          // this fails for some browsers. :(\n          if (originalConsoleLevel) {\n            Function.prototype.apply.call(originalConsoleLevel, global.console, args);\n          }\n        };\n      });\n    });\n  }\n\n  /** JSDoc */\n  private _instrumentDOM(): void {\n    if (!('document' in global)) {\n      return;\n    }\n\n    // Capture breadcrumbs from any click that is unhandled / bubbled up all the way\n    // to the document. Do this before we instrument addEventListener.\n    global.document.addEventListener('click', breadcrumbEventHandler('click'), false);\n    global.document.addEventListener('keypress', keypressEventHandler(), false);\n\n    // After hooking into document bubbled up click and keypresses events, we also hook into user handled click & keypresses.\n    ['EventTarget', 'Node'].forEach((target: string) => {\n      const proto = (global as any)[target] && (global as any)[target].prototype;\n\n      if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n        return;\n      }\n\n      fill(proto, 'addEventListener', function(\n        original: () => void,\n      ): (\n        eventName: string,\n        fn: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions,\n      ) => void {\n        return function(\n          this: any,\n          eventName: string,\n          fn: EventListenerOrEventListenerObject,\n          options?: boolean | AddEventListenerOptions,\n        ): (eventName: string, fn: EventListenerOrEventListenerObject, capture?: boolean, secure?: boolean) => void {\n          if (fn && (fn as EventListenerObject).handleEvent) {\n            if (eventName === 'click') {\n              fill(fn, 'handleEvent', function(innerOriginal: () => void): (caughtEvent: Event) => void {\n                return function(this: any, event: Event): (event: Event) => void {\n                  breadcrumbEventHandler('click')(event);\n                  return innerOriginal.call(this, event);\n                };\n              });\n            }\n            if (eventName === 'keypress') {\n              fill(fn, 'handleEvent', function(innerOriginal: () => void): (caughtEvent: Event) => void {\n                return function(this: any, event: Event): (event: Event) => void {\n                  keypressEventHandler()(event);\n                  return innerOriginal.call(this, event);\n                };\n              });\n            }\n          } else {\n            if (eventName === 'click') {\n              breadcrumbEventHandler('click', true)(this);\n            }\n            if (eventName === 'keypress') {\n              keypressEventHandler()(this);\n            }\n          }\n\n          return original.call(this, eventName, fn, options);\n        };\n      });\n\n      fill(proto, 'removeEventListener', function(\n        original: () => void,\n      ): (\n        this: any,\n        eventName: string,\n        fn: EventListenerOrEventListenerObject,\n        options?: boolean | EventListenerOptions,\n      ) => () => void {\n        return function(\n          this: any,\n          eventName: string,\n          fn: EventListenerOrEventListenerObject,\n          options?: boolean | EventListenerOptions,\n        ): () => void {\n          let callback = fn as WrappedFunction;\n          try {\n            callback = callback && (callback.__sentry_wrapped__ || callback);\n          } catch (e) {\n            // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n          }\n          return original.call(this, eventName, callback, options);\n        };\n      });\n    });\n  }\n\n  /** JSDoc */\n  private _instrumentFetch(): void {\n    if (!supportsNativeFetch()) {\n      return;\n    }\n\n    fill(global, 'fetch', function(originalFetch: () => void): () => void {\n      return function(...args: any[]): void {\n        const fetchInput = args[0];\n        let method = 'GET';\n        let url;\n\n        if (typeof fetchInput === 'string') {\n          url = fetchInput;\n        } else if ('Request' in global && fetchInput instanceof Request) {\n          url = fetchInput.url;\n          if (fetchInput.method) {\n            method = fetchInput.method;\n          }\n        } else {\n          url = String(fetchInput);\n        }\n\n        if (args[1] && args[1].method) {\n          method = args[1].method;\n        }\n\n        const client = getCurrentHub().getClient<BrowserClient>();\n        const dsn = client && client.getDsn();\n        if (dsn) {\n          const filterUrl = new API(dsn).getStoreEndpoint();\n          // if Sentry key appears in URL, don't capture it as a request\n          // but rather as our own 'sentry' type breadcrumb\n          if (filterUrl && url.indexOf(filterUrl) !== -1) {\n            if (method === 'POST' && args[1] && args[1].body) {\n              addSentryBreadcrumb(args[1].body);\n            }\n            return originalFetch.apply(global, args);\n          }\n        }\n\n        const fetchData: {\n          method: string;\n          url: string;\n          status_code?: number;\n        } = {\n          method: isString(method) ? method.toUpperCase() : method,\n          url,\n        };\n\n        return originalFetch\n          .apply(global, args)\n          .then((response: Response) => {\n            fetchData.status_code = response.status;\n            Breadcrumbs.addBreadcrumb(\n              {\n                category: 'fetch',\n                data: fetchData,\n                type: 'http',\n              },\n              {\n                input: args,\n                response,\n              },\n            );\n            return response;\n          })\n          .then(null, (error: Error) => {\n            Breadcrumbs.addBreadcrumb(\n              {\n                category: 'fetch',\n                data: fetchData,\n                level: Severity.Error,\n                type: 'http',\n              },\n              {\n                error,\n                input: args,\n              },\n            );\n\n            throw error;\n          });\n      };\n    });\n  }\n\n  /** JSDoc */\n  private _instrumentHistory(): void {\n    if (!supportsHistory()) {\n      return;\n    }\n\n    const captureUrlChange = (from: string | undefined, to: string | undefined): void => {\n      const parsedLoc = parseUrl(global.location.href);\n      const parsedTo = parseUrl(to as string);\n      let parsedFrom = parseUrl(from as string);\n\n      // Initial pushState doesn't provide `from` information\n      if (!parsedFrom.path) {\n        parsedFrom = parsedLoc;\n      }\n\n      // because onpopstate only tells you the \"new\" (to) value of location.href, and\n      // not the previous (from) value, we need to track the value of the current URL\n      // state ourselves\n      lastHref = to;\n\n      // Use only the path component of the URL if the URL matches the current\n      // document (almost all the time when using pushState)\n      if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n        // tslint:disable-next-line:no-parameter-reassignment\n        to = parsedTo.relative;\n      }\n      if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n        // tslint:disable-next-line:no-parameter-reassignment\n        from = parsedFrom.relative;\n      }\n\n      Breadcrumbs.addBreadcrumb({\n        category: 'navigation',\n        data: {\n          from,\n          to,\n        },\n      });\n    };\n\n    // record navigation (URL) changes\n    const oldOnPopState = global.onpopstate;\n    global.onpopstate = (...args: any[]) => {\n      const currentHref = global.location.href;\n      captureUrlChange(lastHref, currentHref);\n      if (oldOnPopState) {\n        return oldOnPopState.apply(this, args);\n      }\n    };\n\n    /**\n     * @hidden\n     */\n    function historyReplacementFunction(originalHistoryFunction: () => void): () => void {\n      // note history.pushState.length is 0; intentionally not declaring\n      // params to preserve 0 arity\n      return function(this: History, ...args: any[]): void {\n        const url = args.length > 2 ? args[2] : undefined;\n        // url argument is optional\n        if (url) {\n          // coerce to string (this is what pushState does)\n          captureUrlChange(lastHref, String(url));\n        }\n        return originalHistoryFunction.apply(this, args);\n      };\n    }\n\n    fill(global.history, 'pushState', historyReplacementFunction);\n    fill(global.history, 'replaceState', historyReplacementFunction);\n  }\n\n  /** JSDoc */\n  private _instrumentXHR(): void {\n    if (!('XMLHttpRequest' in global)) {\n      return;\n    }\n\n    /**\n     * @hidden\n     */\n    function wrapProp(prop: XMLHttpRequestProp, xhr: XMLHttpRequest): void {\n      if (prop in xhr && typeof xhr[prop] === 'function') {\n        fill(xhr, prop, original =>\n          wrap(original, {\n            mechanism: {\n              data: {\n                function: prop,\n                handler: (original && original.name) || '<anonymous>',\n              },\n              handled: true,\n              type: 'instrument',\n            },\n          }),\n        );\n      }\n    }\n\n    const xhrproto = XMLHttpRequest.prototype;\n    fill(\n      xhrproto,\n      'open',\n      originalOpen =>\n        function(this: SentryWrappedXMLHttpRequest, ...args: any[]): void {\n          const url = args[1];\n          this.__sentry_xhr__ = {\n            method: isString(args[0]) ? args[0].toUpperCase() : args[0],\n            url: args[1],\n          };\n\n          const client = getCurrentHub().getClient<BrowserClient>();\n          const dsn = client && client.getDsn();\n          if (dsn) {\n            const filterUrl = new API(dsn).getStoreEndpoint();\n            // if Sentry key appears in URL, don't capture it as a request\n            // but rather as our own 'sentry' type breadcrumb\n            if (isString(url) && (filterUrl && url.indexOf(filterUrl) !== -1)) {\n              this.__sentry_own_request__ = true;\n            }\n          }\n\n          return originalOpen.apply(this, args);\n        },\n    );\n\n    fill(\n      xhrproto,\n      'send',\n      originalSend =>\n        function(this: SentryWrappedXMLHttpRequest, ...args: any[]): void {\n          const xhr = this; // tslint:disable-line:no-this-assignment\n\n          if (xhr.__sentry_own_request__) {\n            addSentryBreadcrumb(args[0]);\n          }\n\n          /**\n           * @hidden\n           */\n          function onreadystatechangeHandler(): void {\n            if (xhr.readyState === 4) {\n              if (xhr.__sentry_own_request__) {\n                return;\n              }\n              try {\n                // touching statusCode in some platforms throws\n                // an exception\n                if (xhr.__sentry_xhr__) {\n                  xhr.__sentry_xhr__.status_code = xhr.status;\n                }\n              } catch (e) {\n                /* do nothing */\n              }\n              Breadcrumbs.addBreadcrumb(\n                {\n                  category: 'xhr',\n                  data: xhr.__sentry_xhr__,\n                  type: 'http',\n                },\n                {\n                  xhr,\n                },\n              );\n            }\n          }\n\n          const xmlHttpRequestProps: XMLHttpRequestProp[] = ['onload', 'onerror', 'onprogress'];\n          xmlHttpRequestProps.forEach(prop => {\n            wrapProp(prop, xhr);\n          });\n\n          if ('onreadystatechange' in xhr && typeof xhr.onreadystatechange === 'function') {\n            fill(xhr, 'onreadystatechange', function(original: () => void): Function {\n              return wrap(\n                original,\n                {\n                  mechanism: {\n                    data: {\n                      function: 'onreadystatechange',\n                      handler: (original && original.name) || '<anonymous>',\n                    },\n                    handled: true,\n                    type: 'instrument',\n                  },\n                },\n                onreadystatechangeHandler,\n              );\n            });\n          } else {\n            // if onreadystatechange wasn't actually set by the page on this xhr, we\n            // are free to set our own and capture the breadcrumb\n            xhr.onreadystatechange = onreadystatechangeHandler;\n          }\n          return originalSend.apply(this, args);\n        },\n    );\n  }\n\n  /**\n   * Helper that checks if integration is enabled on the client.\n   * @param breadcrumb Breadcrumb\n   * @param hint BreadcrumbHint\n   */\n  public static addBreadcrumb(breadcrumb: Breadcrumb, hint?: BreadcrumbHint): void {\n    if (getCurrentHub().getIntegration(Breadcrumbs)) {\n      getCurrentHub().addBreadcrumb(breadcrumb, hint);\n    }\n  }\n\n  /**\n   * Instrument browser built-ins w/ breadcrumb capturing\n   *  - Console API\n   *  - DOM API (click/typing)\n   *  - XMLHttpRequest API\n   *  - Fetch API\n   *  - History API\n   */\n  public setupOnce(): void {\n    if (this._options.console) {\n      this._instrumentConsole();\n    }\n    if (this._options.dom) {\n      this._instrumentDOM();\n    }\n    if (this._options.xhr) {\n      this._instrumentXHR();\n    }\n    if (this._options.fetch) {\n      this._instrumentFetch();\n    }\n    if (this._options.history) {\n      this._instrumentHistory();\n    }\n  }\n}\n\n/** JSDoc */\nfunction addSentryBreadcrumb(serializedData: string): void {\n  // There's always something that can go wrong with deserialization...\n  try {\n    const event = JSON.parse(serializedData);\n    Breadcrumbs.addBreadcrumb(\n      {\n        category: 'sentry',\n        event_id: event.event_id,\n        level: event.level || Severity.fromString('error'),\n        message: getEventDescription(event),\n      },\n      {\n        event,\n      },\n    );\n  } catch (_oO) {\n    logger.error('Error while adding sentry type breadcrumb');\n  }\n}\n","import { getCurrentHub } from '@sentry/core';\nimport { Event, Integration, Severity } from '@sentry/types';\nimport {\n  addExceptionMechanism,\n  getGlobalObject,\n  getLocationHref,\n  isErrorEvent,\n  isPrimitive,\n  isString,\n  logger,\n} from '@sentry/utils';\n\nimport { eventFromUnknownInput } from '../eventbuilder';\nimport { shouldIgnoreOnError } from '../helpers';\n\n/** JSDoc */\ninterface GlobalHandlersIntegrations {\n  onerror: boolean;\n  onunhandledrejection: boolean;\n}\n\n/** Global handlers */\nexport class GlobalHandlers implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public name: string = GlobalHandlers.id;\n\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'GlobalHandlers';\n\n  /** JSDoc */\n  private readonly _options: GlobalHandlersIntegrations;\n\n  /** JSDoc */\n  private readonly _global: Window = getGlobalObject();\n\n  /** JSDoc */\n  private _oldOnErrorHandler: OnErrorEventHandler = null;\n\n  /** JSDoc */\n  private _oldOnUnhandledRejectionHandler: ((e: any) => void) | null = null;\n\n  /** JSDoc */\n  private _onErrorHandlerInstalled: boolean = false;\n\n  /** JSDoc */\n  private _onUnhandledRejectionHandlerInstalled: boolean = false;\n\n  /** JSDoc */\n  public constructor(options?: GlobalHandlersIntegrations) {\n    this._options = {\n      onerror: true,\n      onunhandledrejection: true,\n      ...options,\n    };\n  }\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    Error.stackTraceLimit = 50;\n\n    if (this._options.onerror) {\n      logger.log('Global Handler attached: onerror');\n      this._installGlobalOnErrorHandler();\n    }\n\n    if (this._options.onunhandledrejection) {\n      logger.log('Global Handler attached: onunhandledrejection');\n      this._installGlobalOnUnhandledRejectionHandler();\n    }\n  }\n\n  /** JSDoc */\n  private _installGlobalOnErrorHandler(): void {\n    if (this._onErrorHandlerInstalled) {\n      return;\n    }\n\n    const self = this; // tslint:disable-line:no-this-assignment\n    this._oldOnErrorHandler = this._global.onerror;\n\n    this._global.onerror = function(msg: any, url: any, line: any, column: any, error: any): boolean {\n      const currentHub = getCurrentHub();\n      const hasIntegration = currentHub.getIntegration(GlobalHandlers);\n      const isFailedOwnDelivery = error && error.__sentry_own_request__ === true;\n\n      if (!hasIntegration || shouldIgnoreOnError() || isFailedOwnDelivery) {\n        if (self._oldOnErrorHandler) {\n          return self._oldOnErrorHandler.apply(this, arguments);\n        }\n        return true;\n      }\n\n      const client = currentHub.getClient();\n      const event = isPrimitive(error)\n        ? self._eventFromIncompleteOnError(msg, url, line, column)\n        : self._enhanceEventWithInitialFrame(\n            eventFromUnknownInput(error, undefined, {\n              attachStacktrace: client && client.getOptions().attachStacktrace,\n              rejection: false,\n            }),\n            url,\n            line,\n            column,\n          );\n\n      addExceptionMechanism(event, {\n        handled: false,\n        type: 'onerror',\n      });\n\n      currentHub.captureEvent(event, {\n        originalException: error,\n      });\n\n      if (self._oldOnErrorHandler) {\n        return self._oldOnErrorHandler.apply(this, arguments);\n      }\n\n      return true;\n    };\n\n    this._onErrorHandlerInstalled = true;\n  }\n\n  /** JSDoc */\n  private _installGlobalOnUnhandledRejectionHandler(): void {\n    if (this._onUnhandledRejectionHandlerInstalled) {\n      return;\n    }\n\n    const self = this; // tslint:disable-line:no-this-assignment\n    this._oldOnUnhandledRejectionHandler = this._global.onunhandledrejection;\n\n    this._global.onunhandledrejection = function(e: any): boolean {\n      let error = e;\n      try {\n        error = e && 'reason' in e ? e.reason : e;\n      } catch (_oO) {\n        // no-empty\n      }\n\n      const currentHub = getCurrentHub();\n      const hasIntegration = currentHub.getIntegration(GlobalHandlers);\n      const isFailedOwnDelivery = error && error.__sentry_own_request__ === true;\n\n      if (!hasIntegration || shouldIgnoreOnError() || isFailedOwnDelivery) {\n        if (self._oldOnUnhandledRejectionHandler) {\n          return self._oldOnUnhandledRejectionHandler.apply(this, arguments);\n        }\n        return true;\n      }\n\n      const client = currentHub.getClient();\n      const event = isPrimitive(error)\n        ? self._eventFromIncompleteRejection(error)\n        : eventFromUnknownInput(error, undefined, {\n            attachStacktrace: client && client.getOptions().attachStacktrace,\n            rejection: true,\n          });\n\n      event.level = Severity.Error;\n\n      addExceptionMechanism(event, {\n        handled: false,\n        type: 'onunhandledrejection',\n      });\n\n      currentHub.captureEvent(event, {\n        originalException: error,\n      });\n\n      if (self._oldOnUnhandledRejectionHandler) {\n        return self._oldOnUnhandledRejectionHandler.apply(this, arguments);\n      }\n\n      return true;\n    };\n\n    this._onUnhandledRejectionHandlerInstalled = true;\n  }\n\n  /**\n   * This function creates a stack from an old, error-less onerror handler.\n   */\n  private _eventFromIncompleteOnError(msg: any, url: any, line: any, column: any): Event {\n    const ERROR_TYPES_RE = /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n\n    // If 'message' is ErrorEvent, get real message from inside\n    let message = isErrorEvent(msg) ? msg.message : msg;\n    let name;\n\n    if (isString(message)) {\n      const groups = message.match(ERROR_TYPES_RE);\n      if (groups) {\n        name = groups[1];\n        message = groups[2];\n      }\n    }\n\n    const event = {\n      exception: {\n        values: [\n          {\n            type: name || 'Error',\n            value: message,\n          },\n        ],\n      },\n    };\n\n    return this._enhanceEventWithInitialFrame(event, url, line, column);\n  }\n\n  /**\n   * This function creates an Event from an TraceKitStackTrace that has part of it missing.\n   */\n  private _eventFromIncompleteRejection(error: any): Event {\n    return {\n      exception: {\n        values: [\n          {\n            type: 'UnhandledRejection',\n            value: `Non-Error promise rejection captured with value: ${error}`,\n          },\n        ],\n      },\n    };\n  }\n\n  /** JSDoc */\n  private _enhanceEventWithInitialFrame(event: Event, url: any, line: any, column: any): Event {\n    event.exception = event.exception || {};\n    event.exception.values = event.exception.values || [];\n    event.exception.values[0] = event.exception.values[0] || {};\n    event.exception.values[0].stacktrace = event.exception.values[0].stacktrace || {};\n    event.exception.values[0].stacktrace.frames = event.exception.values[0].stacktrace.frames || [];\n\n    const colno = isNaN(parseInt(column, 10)) ? undefined : column;\n    const lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n    const filename = isString(url) && url.length > 0 ? url : getLocationHref();\n\n    if (event.exception.values[0].stacktrace.frames.length === 0) {\n      event.exception.values[0].stacktrace.frames.push({\n        colno,\n        filename,\n        function: '?',\n        in_app: true,\n        lineno,\n      });\n    }\n\n    return event;\n  }\n}\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { Event, EventHint, Exception, ExtendedError, Integration } from '@sentry/types';\n\nimport { exceptionFromStacktrace } from '../parsers';\nimport { computeStackTrace } from '../tracekit';\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\n/** Adds SDK info to an event. */\nexport class LinkedErrors implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public readonly name: string = LinkedErrors.id;\n\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'LinkedErrors';\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _key: string;\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _limit: number;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: { key?: string; limit?: number } = {}) {\n    this._key = options.key || DEFAULT_KEY;\n    this._limit = options.limit || DEFAULT_LIMIT;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    addGlobalEventProcessor((event: Event, hint?: EventHint) => {\n      const self = getCurrentHub().getIntegration(LinkedErrors);\n      if (self) {\n        return self._handler(event, hint);\n      }\n      return event;\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  private _handler(event: Event, hint?: EventHint): Event | null {\n    if (!event.exception || !event.exception.values || !hint || !(hint.originalException instanceof Error)) {\n      return event;\n    }\n    const linkedErrors = this._walkErrorTree(hint.originalException, this._key);\n    event.exception.values = [...linkedErrors, ...event.exception.values];\n    return event;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  private _walkErrorTree(error: ExtendedError, key: string, stack: Exception[] = []): Exception[] {\n    if (!(error[key] instanceof Error) || stack.length + 1 >= this._limit) {\n      return stack;\n    }\n    const stacktrace = computeStackTrace(error[key]);\n    const exception = exceptionFromStacktrace(stacktrace);\n    return this._walkErrorTree(error[key], key, [exception, ...stack]);\n  }\n}\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { Event, Integration } from '@sentry/types';\nimport { getGlobalObject } from '@sentry/utils';\n\nconst global = getGlobalObject<Window>();\n\n/** UserAgent */\nexport class UserAgent implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public name: string = UserAgent.id;\n\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'UserAgent';\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    addGlobalEventProcessor((event: Event) => {\n      if (getCurrentHub().getIntegration(UserAgent)) {\n        if (!global.navigator || !global.location) {\n          return event;\n        }\n\n        // Request Interface: https://docs.sentry.io/development/sdk-dev/event-payloads/request/\n        const request = event.request || {};\n        request.url = request.url || global.location.href;\n        request.headers = request.headers || {};\n        request.headers['User-Agent'] = global.navigator.userAgent;\n\n        return {\n          ...event,\n          request,\n        };\n      }\n      return event;\n    });\n  }\n}\n","import { getCurrentHub, initAndBind, Integrations as CoreIntegrations } from '@sentry/core';\nimport { getGlobalObject, SyncPromise } from '@sentry/utils';\n\nimport { BrowserOptions } from './backend';\nimport { BrowserClient, ReportDialogOptions } from './client';\nimport { wrap as internalWrap } from './helpers';\nimport { Breadcrumbs, GlobalHandlers, LinkedErrors, TryCatch, UserAgent } from './integrations';\n\nexport const defaultIntegrations = [\n  new CoreIntegrations.InboundFilters(),\n  new CoreIntegrations.FunctionToString(),\n  new TryCatch(),\n  new Breadcrumbs(),\n  new GlobalHandlers(),\n  new LinkedErrors(),\n  new UserAgent(),\n];\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nexport function init(options: BrowserOptions = {}): void {\n  if (options.defaultIntegrations === undefined) {\n    options.defaultIntegrations = defaultIntegrations;\n  }\n  if (options.release === undefined) {\n    const window = getGlobalObject<Window>();\n    // This supports the variable that sentry-webpack-plugin injects\n    if (window.SENTRY_RELEASE && window.SENTRY_RELEASE.id) {\n      options.release = window.SENTRY_RELEASE.id;\n    }\n  }\n  initAndBind(BrowserClient, options);\n}\n\n/**\n * Present the user with a report dialog.\n *\n * @param options Everything is optional, we try to fetch all info need from the global scope.\n */\nexport function showReportDialog(options: ReportDialogOptions = {}): void {\n  if (!options.eventId) {\n    options.eventId = getCurrentHub().lastEventId();\n  }\n  const client = getCurrentHub().getClient<BrowserClient>();\n  if (client) {\n    client.showReportDialog(options);\n  }\n}\n\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nexport function lastEventId(): string | undefined {\n  return getCurrentHub().lastEventId();\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function forceLoad(): void {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function onLoad(callback: () => void): void {\n  callback();\n}\n\n/**\n * A promise that resolves when all current events have been sent.\n * If you provide a timeout and the queue takes longer to drain the promise returns false.\n *\n * @param timeout Maximum time in ms the client should wait.\n */\nexport function flush(timeout?: number): PromiseLike<boolean> {\n  const client = getCurrentHub().getClient<BrowserClient>();\n  if (client) {\n    return client.flush(timeout);\n  }\n  return SyncPromise.reject(false);\n}\n\n/**\n * A promise that resolves when all current events have been sent.\n * If you provide a timeout and the queue takes longer to drain the promise returns false.\n *\n * @param timeout Maximum time in ms the client should wait.\n */\nexport function close(timeout?: number): PromiseLike<boolean> {\n  const client = getCurrentHub().getClient<BrowserClient>();\n  if (client) {\n    return client.close(timeout);\n  }\n  return SyncPromise.reject(false);\n}\n\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @param fn A function to wrap.\n *\n * @returns The result of wrapped function call.\n */\nexport function wrap(fn: Function): any {\n  return internalWrap(fn)(); // tslint:disable-line:no-unsafe-any\n}\n","import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es6.object.set-prototype-of\";\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\nvar _extendStatics = function extendStatics(d, b) {\n  _extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return _extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  _extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nvar _assign = function __assign() {\n  _assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return _assign.apply(this, arguments);\n};\n\nexport { _assign as __assign };\nexport function __rest(s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\nexport function __param(paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n}\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\nexport function __generator(thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n}\nexport function __exportStar(m, exports) {\n  for (var p in m) {\n    if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n  }\n}\nexport function __values(o) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator],\n      i = 0;\n  if (m) return m.call(o);\n  return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n}\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n}\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++) {\n    ar = ar.concat(__read(arguments[i]));\n  }\n\n  return ar;\n}\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []),\n      i,\n      q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () {\n    return this;\n  }, i;\n\n  function verb(n) {\n    if (g[n]) i[n] = function (v) {\n      return new Promise(function (a, b) {\n        q.push([n, v, a, b]) > 1 || resume(n, v);\n      });\n    };\n  }\n\n  function resume(n, v) {\n    try {\n      step(g[n](v));\n    } catch (e) {\n      settle(q[0][3], e);\n    }\n  }\n\n  function step(r) {\n    r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n  }\n\n  function fulfill(value) {\n    resume(\"next\", value);\n  }\n\n  function reject(value) {\n    resume(\"throw\", value);\n  }\n\n  function settle(f, v) {\n    if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n  }\n}\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) {\n    throw e;\n  }), verb(\"return\"), i[Symbol.iterator] = function () {\n    return this;\n  }, i;\n\n  function verb(n, f) {\n    i[n] = o[n] ? function (v) {\n      return (p = !p) ? {\n        value: __await(o[n](v)),\n        done: n === \"return\"\n      } : f ? f(v) : v;\n    } : f;\n  }\n}\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator],\n      i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () {\n    return this;\n  }, i);\n\n  function verb(n) {\n    i[n] = o[n] && function (v) {\n      return new Promise(function (resolve, reject) {\n        v = o[n](v), settle(resolve, reject, v.done, v.value);\n      });\n    };\n  }\n\n  function settle(resolve, reject, d, v) {\n    Promise.resolve(v).then(function (v) {\n      resolve({\n        value: v,\n        done: d\n      });\n    }, reject);\n  }\n}\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) {\n    Object.defineProperty(cooked, \"raw\", {\n      value: raw\n    });\n  } else {\n    cooked.raw = raw;\n  }\n\n  return cooked;\n}\n;\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result.default = mod;\n  return result;\n}\nexport function __importDefault(mod) {\n  return mod && mod.__esModule ? mod : {\n    default: mod\n  };\n}","import {\n  Breadcrumb,\n  BreadcrumbHint,\n  Client,\n  Event,\n  EventHint,\n  Hub as HubInterface,\n  Integration,\n  IntegrationClass,\n  Severity,\n  User,\n} from '@sentry/types';\nimport { consoleSandbox, dynamicRequire, getGlobalObject, isNodeEnv, logger, uuid4 } from '@sentry/utils';\n\nimport { Carrier, Layer } from './interfaces';\nimport { Scope } from './scope';\n\ndeclare module 'domain' {\n  export let active: Domain;\n  /**\n   * Extension for domain interface\n   */\n  export interface Domain {\n    __SENTRY__?: Carrier;\n  }\n}\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be incresed when the global interface\n * changes a and new methods are introduced.\n *\n * @hidden\n */\nexport const API_VERSION = 3;\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 30;\n\n/**\n * Absolute maximum number of breadcrumbs added to an event. The\n * `maxBreadcrumbs` option cannot be higher than this value.\n */\nconst MAX_BREADCRUMBS = 100;\n\n/**\n * @inheritDoc\n */\nexport class Hub implements HubInterface {\n  /** Is a {@link Layer}[] containing the client and scope */\n  private readonly _stack: Layer[] = [];\n\n  /** Contains the last event id of a captured event.  */\n  private _lastEventId?: string;\n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   */\n  public constructor(client?: Client, scope: Scope = new Scope(), private readonly _version: number = API_VERSION) {\n    this._stack.push({ client, scope });\n  }\n\n  /**\n   * Internal helper function to call a method on the top client if it exists.\n   *\n   * @param method The method to call on the client.\n   * @param args Arguments to pass to the client function.\n   */\n  private _invokeClient<M extends keyof Client>(method: M, ...args: any[]): void {\n    const top = this.getStackTop();\n    if (top && top.client && top.client[method]) {\n      (top.client as any)[method](...args, top.scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public isOlderThan(version: number): boolean {\n    return this._version < version;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public bindClient(client?: Client): void {\n    const top = this.getStackTop();\n    top.client = client;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public pushScope(): Scope {\n    // We want to clone the content of prev scope\n    const stack = this.getStack();\n    const parentScope = stack.length > 0 ? stack[stack.length - 1].scope : undefined;\n    const scope = Scope.clone(parentScope);\n    this.getStack().push({\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public popScope(): boolean {\n    return this.getStack().pop() !== undefined;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public withScope(callback: (scope: Scope) => void): void {\n    const scope = this.pushScope();\n    try {\n      callback(scope);\n    } finally {\n      this.popScope();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getClient<C extends Client>(): C | undefined {\n    return this.getStackTop().client as C;\n  }\n\n  /** Returns the scope of the top stack. */\n  public getScope(): Scope | undefined {\n    return this.getStackTop().scope;\n  }\n\n  /** Returns the scope stack for domains or the process. */\n  public getStack(): Layer[] {\n    return this._stack;\n  }\n\n  /** Returns the topmost scope layer in the order domain > local > process. */\n  public getStackTop(): Layer {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureException(exception: any, hint?: EventHint): string {\n    const eventId = (this._lastEventId = uuid4());\n    let finalHint = hint;\n\n    // If there's no explicit hint provided, mimick the same thing that would happen\n    // in the minimal itself to create a consistent behavior.\n    // We don't do this in the client, as it's the lowest level API, and doing this,\n    // would prevent user from having full control over direct calls.\n    if (!hint) {\n      let syntheticException: Error;\n      try {\n        throw new Error('Sentry syntheticException');\n      } catch (exception) {\n        syntheticException = exception as Error;\n      }\n      finalHint = {\n        originalException: exception,\n        syntheticException,\n      };\n    }\n\n    this._invokeClient('captureException', exception, {\n      ...finalHint,\n      event_id: eventId,\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureMessage(message: string, level?: Severity, hint?: EventHint): string {\n    const eventId = (this._lastEventId = uuid4());\n    let finalHint = hint;\n\n    // If there's no explicit hint provided, mimick the same thing that would happen\n    // in the minimal itself to create a consistent behavior.\n    // We don't do this in the client, as it's the lowest level API, and doing this,\n    // would prevent user from having full control over direct calls.\n    if (!hint) {\n      let syntheticException: Error;\n      try {\n        throw new Error(message);\n      } catch (exception) {\n        syntheticException = exception as Error;\n      }\n      finalHint = {\n        originalException: message,\n        syntheticException,\n      };\n    }\n\n    this._invokeClient('captureMessage', message, level, {\n      ...finalHint,\n      event_id: eventId,\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureEvent(event: Event, hint?: EventHint): string {\n    const eventId = (this._lastEventId = uuid4());\n    this._invokeClient('captureEvent', event, {\n      ...hint,\n      event_id: eventId,\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public lastEventId(): string | undefined {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, hint?: BreadcrumbHint): void {\n    const top = this.getStackTop();\n\n    if (!top.scope || !top.client) {\n      return;\n    }\n\n    const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (top.client.getOptions && top.client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) {\n      return;\n    }\n\n    const timestamp = new Date().getTime() / 1000;\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n    const finalBreadcrumb = beforeBreadcrumb\n      ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) as Breadcrumb | null)\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) {\n      return;\n    }\n\n    top.scope.addBreadcrumb(finalBreadcrumb, Math.min(maxBreadcrumbs, MAX_BREADCRUMBS));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setUser(user: User | null): void {\n    const top = this.getStackTop();\n    if (!top.scope) {\n      return;\n    }\n    top.scope.setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTags(tags: { [key: string]: string }): void {\n    const top = this.getStackTop();\n    if (!top.scope) {\n      return;\n    }\n    top.scope.setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtras(extras: { [key: string]: any }): void {\n    const top = this.getStackTop();\n    if (!top.scope) {\n      return;\n    }\n    top.scope.setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTag(key: string, value: string): void {\n    const top = this.getStackTop();\n    if (!top.scope) {\n      return;\n    }\n    top.scope.setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtra(key: string, extra: any): void {\n    const top = this.getStackTop();\n    if (!top.scope) {\n      return;\n    }\n    top.scope.setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setContext(name: string, context: { [key: string]: any } | null): void {\n    const top = this.getStackTop();\n    if (!top.scope) {\n      return;\n    }\n    top.scope.setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public configureScope(callback: (scope: Scope) => void): void {\n    const top = this.getStackTop();\n    if (top.scope && top.client) {\n      callback(top.scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public run(callback: (hub: Hub) => void): void {\n    const oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null {\n    const client = this.getClient();\n    if (!client) {\n      return null;\n    }\n    try {\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public traceHeaders(): { [key: string]: string } {\n    const top = this.getStackTop();\n    if (top.scope && top.client) {\n      const span = top.scope.getSpan();\n      if (span) {\n        return {\n          'sentry-trace': span.toTraceparent(),\n        };\n      }\n    }\n    return {};\n  }\n}\n\n/** Returns the global shim registry. */\nexport function getMainCarrier(): Carrier {\n  const carrier = getGlobalObject();\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {\n    hub: undefined,\n  };\n  return carrier;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nexport function makeMain(hub: Hub): Hub {\n  const registry = getMainCarrier();\n  const oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nexport function getCurrentHub(): Hub {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n\n  // If there's no hub, or its an old API, assign a new one\n  if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Prefer domains over global if they are there (applicable only to Node environment)\n  if (isNodeEnv()) {\n    return getHubFromActiveDomain(registry);\n  }\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * Try to read the hub from an active domain, fallback to the registry if one doesnt exist\n * @returns discovered hub\n */\nfunction getHubFromActiveDomain(registry: Carrier): Hub {\n  try {\n    // We need to use `dynamicRequire` because `require` on it's own will be optimized by webpack.\n    // We do not want this to happen, we need to try to `require` the domain node module and fail if we are in browser\n    // for example so we do not have to shim it and use `getCurrentHub` universally.\n    const domain = dynamicRequire(module, 'domain');\n    const activeDomain = domain.active;\n\n    // If there no active domain, just return global hub\n    if (!activeDomain) {\n      return getHubFromCarrier(registry);\n    }\n\n    // If there's no hub on current domain, or its an old API, assign a new one\n    if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {\n      const registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n      setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, Scope.clone(registryHubTopStack.scope)));\n    }\n\n    // Return hub that lives on a domain\n    return getHubFromCarrier(activeDomain);\n  } catch (_Oo) {\n    // Return hub that lives on a global object\n    return getHubFromCarrier(registry);\n  }\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier: Carrier): boolean {\n  if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nexport function getHubFromCarrier(carrier: Carrier): Hub {\n  if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) {\n    return carrier.__SENTRY__.hub;\n  }\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n  carrier.__SENTRY__.hub = new Hub();\n  return carrier.__SENTRY__.hub;\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n */\nexport function setHubOnCarrier(carrier: Carrier, hub: Hub): boolean {\n  if (!carrier) {\n    return false;\n  }\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n  carrier.__SENTRY__.hub = hub;\n  return true;\n}\n","import { Breadcrumb, Event, EventHint, EventProcessor, Scope as ScopeInterface, Severity, User } from '@sentry/types';\nimport { getGlobalObject, isThenable, normalize, SyncPromise } from '@sentry/utils';\n\nimport { Span } from './span';\n\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nexport class Scope implements ScopeInterface {\n  /** Flag if notifiying is happening. */\n  protected _notifyingListeners: boolean = false;\n\n  /** Callback for client to receive scope changes. */\n  protected _scopeListeners: Array<(scope: Scope) => void> = [];\n\n  /** Callback list that will be called after {@link applyToEvent}. */\n  protected _eventProcessors: EventProcessor[] = [];\n\n  /** Array of breadcrumbs. */\n  protected _breadcrumbs: Breadcrumb[] = [];\n\n  /** User */\n  protected _user: User = {};\n\n  /** Tags */\n  protected _tags: { [key: string]: string } = {};\n\n  /** Extra */\n  protected _extra: { [key: string]: any } = {};\n\n  /** Contexts */\n  protected _context: { [key: string]: any } = {};\n\n  /** Fingerprint */\n  protected _fingerprint?: string[];\n\n  /** Severity */\n  protected _level?: Severity;\n\n  /** Transaction */\n  protected _transaction?: string;\n\n  /** Span */\n  protected _span?: Span;\n\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n  public addScopeListener(callback: (scope: Scope) => void): void {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addEventProcessor(callback: EventProcessor): this {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n  protected _notifyScopeListeners(): void {\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      setTimeout(() => {\n        this._scopeListeners.forEach(callback => {\n          callback(this);\n        });\n        this._notifyingListeners = false;\n      });\n    }\n  }\n\n  /**\n   * This will be called after {@link applyToEvent} is finished.\n   */\n  protected _notifyEventProcessors(\n    processors: EventProcessor[],\n    event: Event | null,\n    hint?: EventHint,\n    index: number = 0,\n  ): PromiseLike<Event | null> {\n    return new SyncPromise<Event | null>((resolve, reject) => {\n      const processor = processors[index];\n      // tslint:disable-next-line:strict-type-predicates\n      if (event === null || typeof processor !== 'function') {\n        resolve(event);\n      } else {\n        const result = processor({ ...event }, hint) as Event | null;\n        if (isThenable(result)) {\n          (result as PromiseLike<Event | null>)\n            .then(final => this._notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n            .then(null, reject);\n        } else {\n          this._notifyEventProcessors(processors, result, hint, index + 1)\n            .then(resolve)\n            .then(null, reject);\n        }\n      }\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setUser(user: User | null): this {\n    this._user = normalize(user);\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTags(tags: { [key: string]: string }): this {\n    this._tags = {\n      ...this._tags,\n      ...normalize(tags),\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTag(key: string, value: string): this {\n    this._tags = { ...this._tags, [key]: normalize(value) };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtras(extra: { [key: string]: any }): this {\n    this._extra = {\n      ...this._extra,\n      ...normalize(extra),\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtra(key: string, extra: any): this {\n    this._extra = { ...this._extra, [key]: normalize(extra) };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setFingerprint(fingerprint: string[]): this {\n    this._fingerprint = normalize(fingerprint);\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setLevel(level: Severity): this {\n    this._level = normalize(level);\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTransaction(transaction?: string): this {\n    this._transaction = transaction;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setContext(name: string, context: { [key: string]: any } | null): this {\n    this._context[name] = context ? normalize(context) : undefined;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setSpan(span?: Span): this {\n    this._span = span;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public startSpan(parentSpan?: Span): Span {\n    const span = new Span();\n    span.setParent(parentSpan);\n    this.setSpan(span);\n    return span;\n  }\n\n  /**\n   * Internal getter for Span, used in Hub.\n   * @hidden\n   */\n  public getSpan(): Span | undefined {\n    return this._span;\n  }\n\n  /**\n   * Inherit values from the parent scope.\n   * @param scope to clone.\n   */\n  public static clone(scope?: Scope): Scope {\n    const newScope = new Scope();\n    if (scope) {\n      newScope._breadcrumbs = [...scope._breadcrumbs];\n      newScope._tags = { ...scope._tags };\n      newScope._extra = { ...scope._extra };\n      newScope._context = { ...scope._context };\n      newScope._user = scope._user;\n      newScope._level = scope._level;\n      newScope._span = scope._span;\n      newScope._transaction = scope._transaction;\n      newScope._fingerprint = scope._fingerprint;\n      newScope._eventProcessors = [...scope._eventProcessors];\n    }\n    return newScope;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clear(): this {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._context = {};\n    this._level = undefined;\n    this._transaction = undefined;\n    this._fingerprint = undefined;\n    this._span = undefined;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, maxBreadcrumbs?: number): this {\n    const timestamp = new Date().getTime() / 1000;\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n\n    this._breadcrumbs =\n      maxBreadcrumbs !== undefined && maxBreadcrumbs >= 0\n        ? [...this._breadcrumbs, normalize(mergedBreadcrumb)].slice(-maxBreadcrumbs)\n        : [...this._breadcrumbs, normalize(mergedBreadcrumb)];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clearBreadcrumbs(): this {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Applies fingerprint from the scope to the event if there's one,\n   * uses message if there's one instead or get rid of empty fingerprint\n   */\n  private _applyFingerprint(event: Event): void {\n    // Make sure it's an array first and we actually have something in place\n    event.fingerprint = event.fingerprint\n      ? Array.isArray(event.fingerprint)\n        ? event.fingerprint\n        : [event.fingerprint]\n      : [];\n\n    // If we have something on the scope, then merge it with event\n    if (this._fingerprint) {\n      event.fingerprint = event.fingerprint.concat(this._fingerprint);\n    }\n\n    // If we have no data at all, remove empty array default\n    if (event.fingerprint && !event.fingerprint.length) {\n      delete event.fingerprint;\n    }\n  }\n\n  /**\n   * Applies the current context and fingerprint to the event.\n   * Note that breadcrumbs will be added by the client.\n   * Also if the event has already breadcrumbs on it, we do not merge them.\n   * @param event Event\n   * @param hint May contain additional informartion about the original exception.\n   * @hidden\n   */\n  public applyToEvent(event: Event, hint?: EventHint): PromiseLike<Event | null> {\n    if (this._extra && Object.keys(this._extra).length) {\n      event.extra = { ...this._extra, ...event.extra };\n    }\n    if (this._tags && Object.keys(this._tags).length) {\n      event.tags = { ...this._tags, ...event.tags };\n    }\n    if (this._user && Object.keys(this._user).length) {\n      event.user = { ...this._user, ...event.user };\n    }\n    if (this._context && Object.keys(this._context).length) {\n      event.contexts = { ...this._context, ...event.contexts };\n    }\n    if (this._level) {\n      event.level = this._level;\n    }\n    if (this._transaction) {\n      event.transaction = this._transaction;\n    }\n    if (this._span) {\n      event.contexts = event.contexts || {};\n      event.contexts.trace = this._span;\n    }\n\n    this._applyFingerprint(event);\n\n    event.breadcrumbs = [...(event.breadcrumbs || []), ...this._breadcrumbs];\n    event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : undefined;\n\n    return this._notifyEventProcessors([...getGlobalEventProcessors(), ...this._eventProcessors], event, hint);\n  }\n}\n\n/**\n * Retruns the global event processors.\n */\nfunction getGlobalEventProcessors(): EventProcessor[] {\n  const global = getGlobalObject<Window | NodeJS.Global>();\n  global.__SENTRY__ = global.__SENTRY__ || {};\n  global.__SENTRY__.globalEventProcessors = global.__SENTRY__.globalEventProcessors || [];\n  return global.__SENTRY__.globalEventProcessors;\n}\n\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nexport function addGlobalEventProcessor(callback: EventProcessor): void {\n  getGlobalEventProcessors().push(callback);\n}\n","/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isError(wat: any): boolean {\n  switch (Object.prototype.toString.call(wat)) {\n    case '[object Error]':\n      return true;\n    case '[object Exception]':\n      return true;\n    case '[object DOMException]':\n      return true;\n    default:\n      return wat instanceof Error;\n  }\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isErrorEvent(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object ErrorEvent]';\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMError(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object DOMError]';\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMException(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object DOMException]';\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isString(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object String]';\n}\n\n/**\n * Checks whether given value's is a primitive (undefined, null, number, boolean, string)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPrimitive(wat: any): boolean {\n  return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPlainObject(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object Object]';\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isEvent(wat: any): boolean {\n  // tslint:disable-next-line:strict-type-predicates\n  return typeof Event !== 'undefined' && wat instanceof Event;\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isElement(wat: any): boolean {\n  // tslint:disable-next-line:strict-type-predicates\n  return typeof Element !== 'undefined' && wat instanceof Element;\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isRegExp(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object RegExp]';\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nexport function isThenable(wat: any): boolean {\n  // tslint:disable:no-unsafe-any\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n  // tslint:enable:no-unsafe-any\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isSyntheticEvent(wat: any): boolean {\n  // tslint:disable-next-line:no-unsafe-any\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n","import { Span as SpanInterface } from '@sentry/types';\nimport { uuid4 } from '@sentry/utils';\n\nexport const TRACEPARENT_REGEXP = /^[ \\t]*([0-9a-f]{32})?-?([0-9a-f]{16})?-?([01])?[ \\t]*$/;\n\n/**\n * Span containg all data about a span\n */\nexport class Span implements SpanInterface {\n  public constructor(\n    private readonly _traceId: string = uuid4(),\n    private readonly _spanId: string = uuid4().substring(16),\n    private _sampled?: boolean,\n    private _parent?: Span,\n  ) {}\n\n  /**\n   * Setter for parent\n   */\n  public setParent(parent: Span | undefined): this {\n    this._parent = parent;\n    return this;\n  }\n\n  /**\n   * Setter for sampled\n   */\n  public setSampled(sampled: boolean | undefined): this {\n    this._sampled = sampled;\n    return this;\n  }\n\n  /**\n   * Continues a trace\n   * @param traceparent Traceparent string\n   */\n  public static fromTraceparent(traceparent: string): Span | undefined {\n    const matches = traceparent.match(TRACEPARENT_REGEXP);\n    if (matches) {\n      let sampled;\n      if (matches[3] === '1') {\n        sampled = true;\n      } else if (matches[3] === '0') {\n        sampled = false;\n      }\n      const parent = new Span(matches[1], matches[2], sampled);\n      return new Span(matches[1], undefined, sampled, parent);\n    }\n    return undefined;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public toTraceparent(): string {\n    let sampled = '';\n    if (this._sampled === true) {\n      sampled = '-1';\n    } else if (this._sampled === false) {\n      sampled = '-0';\n    }\n\n    return `${this._traceId}-${this._spanId}${sampled}`;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public toJSON(): object {\n    return {\n      parent: (this._parent && this._parent.toJSON()) || undefined,\n      sampled: this._sampled,\n      span_id: this._spanId,\n      trace_id: this._traceId,\n    };\n  }\n}\n","import { Event, Integration, WrappedFunction } from '@sentry/types';\n\nimport { isString } from './is';\n\n/** Internal */\ninterface SentryGlobal {\n  Sentry?: {\n    Integrations?: Integration[];\n  };\n  SENTRY_ENVIRONMENT?: string;\n  SENTRY_DSN?: string;\n  SENTRY_RELEASE?: {\n    id?: string;\n  };\n  __SENTRY__: {\n    globalEventProcessors: any;\n    hub: any;\n    logger: any;\n  };\n}\n\n/**\n * Requires a module which is protected _against bundler minification.\n *\n * @param request The module path to resolve\n */\nexport function dynamicRequire(mod: any, request: string): any {\n  // tslint:disable-next-line: no-unsafe-any\n  return mod.require(request);\n}\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nexport function isNodeEnv(): boolean {\n  // tslint:disable:strict-type-predicates\n  return Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\n}\n\nconst fallbackGlobalObject = {};\n\n/**\n * Safely get global scope object\n *\n * @returns Global scope object\n */\nexport function getGlobalObject<T>(): T & SentryGlobal {\n  return (isNodeEnv()\n    ? global\n    : typeof window !== 'undefined'\n    ? window\n    : typeof self !== 'undefined'\n    ? self\n    : fallbackGlobalObject) as T & SentryGlobal;\n}\n// tslint:enable:strict-type-predicates\n\n/**\n * Extended Window interface that allows for Crypto API usage in IE browsers\n */\ninterface MsCryptoWindow extends Window {\n  msCrypto?: Crypto;\n}\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nexport function uuid4(): string {\n  const global = getGlobalObject() as MsCryptoWindow;\n  const crypto = global.crypto || global.msCrypto;\n\n  if (!(crypto === void 0) && crypto.getRandomValues) {\n    // Use window.crypto API if available\n    const arr = new Uint16Array(8);\n    crypto.getRandomValues(arr);\n\n    // set 4 in byte 7\n    // tslint:disable-next-line:no-bitwise\n    arr[3] = (arr[3] & 0xfff) | 0x4000;\n    // set 2 most significant bits of byte 9 to '10'\n    // tslint:disable-next-line:no-bitwise\n    arr[4] = (arr[4] & 0x3fff) | 0x8000;\n\n    const pad = (num: number): string => {\n      let v = num.toString(16);\n      while (v.length < 4) {\n        v = `0${v}`;\n      }\n      return v;\n    };\n\n    return (\n      pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) + pad(arr[5]) + pad(arr[6]) + pad(arr[7])\n    );\n  }\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    // tslint:disable-next-line:no-bitwise\n    const r = (Math.random() * 16) | 0;\n    // tslint:disable-next-line:no-bitwise\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nexport function parseUrl(\n  url: string,\n): {\n  host?: string;\n  path?: string;\n  protocol?: string;\n  relative?: string;\n} {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nexport function getEventDescription(event: Event): string {\n  if (event.message) {\n    return event.message;\n  }\n  if (event.exception && event.exception.values && event.exception.values[0]) {\n    const exception = event.exception.values[0];\n\n    if (exception.type && exception.value) {\n      return `${exception.type}: ${exception.value}`;\n    }\n    return exception.type || exception.value || event.event_id || '<unknown>';\n  }\n  return event.event_id || '<unknown>';\n}\n\n/** JSDoc */\ninterface ExtensibleConsole extends Console {\n  [key: string]: any;\n}\n\n/** JSDoc */\nexport function consoleSandbox(callback: () => any): any {\n  const global = getGlobalObject<Window>();\n  const levels = ['debug', 'info', 'warn', 'error', 'log', 'assert'];\n\n  if (!('console' in global)) {\n    return callback();\n  }\n\n  const originalConsole = global.console as ExtensibleConsole;\n  const wrappedLevels: { [key: string]: any } = {};\n\n  // Restore all wrapped console methods\n  levels.forEach(level => {\n    if (level in global.console && (originalConsole[level] as WrappedFunction).__sentry__) {\n      wrappedLevels[level] = (originalConsole[level] as WrappedFunction).__sentry_wrapped__;\n      originalConsole[level] = (originalConsole[level] as WrappedFunction).__sentry_original__;\n    }\n  });\n\n  // Perform callback manipulations\n  const result = callback();\n\n  // Revert restoration to wrapped state\n  Object.keys(wrappedLevels).forEach(level => {\n    originalConsole[level] = wrappedLevels[level];\n  });\n\n  return result;\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nexport function addExceptionTypeValue(event: Event, value?: string, type?: string): void {\n  event.exception = event.exception || {};\n  event.exception.values = event.exception.values || [];\n  event.exception.values[0] = event.exception.values[0] || {};\n  event.exception.values[0].value = event.exception.values[0].value || value || '';\n  event.exception.values[0].type = event.exception.values[0].type || type || 'Error';\n}\n\n/**\n * Adds exception mechanism to a given event.\n * @param event The event to modify.\n * @param mechanism Mechanism of the mechanism.\n * @hidden\n */\nexport function addExceptionMechanism(\n  event: Event,\n  mechanism: {\n    [key: string]: any;\n  } = {},\n): void {\n  // TODO: Use real type with `keyof Mechanism` thingy and maybe make it better?\n  try {\n    // @ts-ignore\n    // tslint:disable:no-non-null-assertion\n    event.exception!.values![0].mechanism = event.exception!.values![0].mechanism || {};\n    Object.keys(mechanism).forEach(key => {\n      // @ts-ignore\n      event.exception!.values![0].mechanism[key] = mechanism[key];\n    });\n  } catch (_oO) {\n    // no-empty\n  }\n}\n\n/**\n * A safe form of location.href\n */\nexport function getLocationHref(): string {\n  try {\n    return document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nexport function htmlTreeAsString(elem: unknown): string {\n  type SimpleNode = {\n    parentNode: SimpleNode;\n  } | null;\n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem as SimpleNode;\n    const MAX_TRAVERSE_HEIGHT = 5;\n    const MAX_OUTPUT_LEN = 80;\n    const out = [];\n    let height = 0;\n    let len = 0;\n    const separator = ' > ';\n    const sepLength = separator.length;\n    let nextStr;\n\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds MAX_OUTPUT_LEN\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= MAX_OUTPUT_LEN)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el: unknown): string {\n  const elem = el as {\n    getAttribute(key: string): string; // tslint:disable-line:completed-docs\n    tagName?: string;\n    id?: string;\n    className?: string;\n  };\n\n  const out = [];\n  let className;\n  let classes;\n  let key;\n  let attr;\n  let i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  out.push(elem.tagName.toLowerCase());\n  if (elem.id) {\n    out.push(`#${elem.id}`);\n  }\n\n  className = elem.className;\n  if (className && isString(className)) {\n    classes = className.split(/\\s+/);\n    for (i = 0; i < classes.length; i++) {\n      out.push(`.${classes[i]}`);\n    }\n  }\n  const attrWhitelist = ['type', 'name', 'title', 'alt'];\n  for (i = 0; i < attrWhitelist.length; i++) {\n    key = attrWhitelist[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push(`[${key}=\"${attr}\"]`);\n    }\n  }\n  return out.join('');\n}\n\nconst defaultRetryAfter = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param now current unix timestamp\n * @param header string representation of 'Retry-After' header\n */\nexport function parseRetryAfterHeader(now: number, header?: string | number | null): number {\n  if (!header) {\n    return defaultRetryAfter;\n  }\n\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return defaultRetryAfter;\n}\n","require('./_typed-array')('Uint16', 2, function (init) {\n  return function Uint16Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","module.exports = function (originalModule) {\n  if (!originalModule.webpackPolyfill) {\n    var module = Object.create(originalModule); // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    Object.defineProperty(module, \"exports\", {\n      enumerable: true\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","import { isThenable } from './is';\n\n/** SyncPromise internal states */\nenum States {\n  /** Pending */\n  PENDING = 'PENDING',\n  /** Resolved / OK */\n  RESOLVED = 'RESOLVED',\n  /** Rejected / Error */\n  REJECTED = 'REJECTED',\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise<T> implements PromiseLike<T> {\n  private _state: States = States.PENDING;\n  private _handlers: Array<{\n    onfulfilled?: ((value: T) => T | PromiseLike<T>) | null;\n    onrejected?: ((reason: any) => any) | null;\n  }> = [];\n  private _value: any;\n\n  public constructor(\n    executor: (resolve: (value?: T | PromiseLike<T> | null) => void, reject: (reason?: any) => void) => void,\n  ) {\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n  public toString(): string {\n    return '[object SyncPromise]';\n  }\n\n  /** JSDoc */\n  public static resolve<T>(value: T | PromiseLike<T>): PromiseLike<T> {\n    return new SyncPromise(resolve => {\n      resolve(value);\n    });\n  }\n\n  /** JSDoc */\n  public static reject<T = never>(reason?: any): PromiseLike<T> {\n    return new SyncPromise((_, reject) => {\n      reject(reason);\n    });\n  }\n\n  /** JSDoc */\n  public static all<U = any>(collection: Array<U | PromiseLike<U>>): PromiseLike<U[]> {\n    return new SyncPromise<U[]>((resolve, reject) => {\n      if (!Array.isArray(collection)) {\n        reject(new TypeError(`Promise.all requires an array as input.`));\n        return;\n      }\n\n      if (collection.length === 0) {\n        resolve([]);\n        return;\n      }\n\n      let counter = collection.length;\n      const resolvedCollection: U[] = [];\n\n      collection.forEach((item, index) => {\n        SyncPromise.resolve(item)\n          .then(value => {\n            resolvedCollection[index] = value;\n            counter -= 1;\n\n            if (counter !== 0) {\n              return;\n            }\n            resolve(resolvedCollection);\n          })\n          .then(null, reject);\n      });\n    });\n  }\n\n  /** JSDoc */\n  public then<TResult1 = T, TResult2 = never>(\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null,\n  ): PromiseLike<TResult1 | TResult2> {\n    return new SyncPromise((resolve, reject) => {\n      this._attachHandler({\n        onfulfilled: result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result as any);\n            return;\n          }\n          try {\n            resolve(onfulfilled(result));\n            return;\n          } catch (e) {\n            reject(e);\n            return;\n          }\n        },\n        onrejected: reason => {\n          if (!onrejected) {\n            reject(reason);\n            return;\n          }\n          try {\n            resolve(onrejected(reason));\n            return;\n          } catch (e) {\n            reject(e);\n            return;\n          }\n        },\n      });\n    });\n  }\n\n  /** JSDoc */\n  public catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null,\n  ): PromiseLike<T | TResult> {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n  public finally<TResult>(onfinally?: (() => void) | null): PromiseLike<TResult> {\n    return new SyncPromise<TResult>((resolve, reject) => {\n      let val: TResult | any;\n      let isRejected: boolean;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        // tslint:disable-next-line:no-unsafe-any\n        resolve(val);\n      });\n    });\n  }\n\n  /** JSDoc */\n  private readonly _resolve = (value?: T | PromiseLike<T> | null) => {\n    this._setResult(States.RESOLVED, value);\n  };\n\n  /** JSDoc */\n  private readonly _reject = (reason?: any) => {\n    this._setResult(States.REJECTED, reason);\n  };\n\n  /** JSDoc */\n  private readonly _setResult = (state: States, value?: T | PromiseLike<T> | any) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      (value as PromiseLike<T>).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };\n\n  // TODO: FIXME\n  /** JSDoc */\n  private readonly _attachHandler = (handler: {\n    /** JSDoc */\n    onfulfilled?(value: T): any;\n    /** JSDoc */\n    onrejected?(reason: any): any;\n  }) => {\n    this._handlers = this._handlers.concat(handler);\n    this._executeHandlers();\n  };\n\n  /** JSDoc */\n  private readonly _executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    if (this._state === States.REJECTED) {\n      this._handlers.forEach(handler => {\n        if (handler.onrejected) {\n          handler.onrejected(this._value);\n        }\n      });\n    } else {\n      this._handlers.forEach(handler => {\n        if (handler.onfulfilled) {\n          // tslint:disable-next-line:no-unsafe-any\n          handler.onfulfilled(this._value);\n        }\n      });\n    }\n\n    this._handlers = [];\n  };\n}\n\nexport { SyncPromise };\n","// tslint:disable:no-unsafe-any\n/**\n * Memo class used for decycle json objects. Uses WeakSet if available otherwise array.\n */\nexport class Memo {\n  /** Determines if WeakSet is available */\n  private readonly _hasWeakSet: boolean;\n  /** Either WeakSet or Array */\n  private readonly _inner: any;\n\n  public constructor() {\n    // tslint:disable-next-line\n    this._hasWeakSet = typeof WeakSet === 'function';\n    this._inner = this._hasWeakSet ? new WeakSet() : [];\n  }\n\n  /**\n   * Sets obj to remember.\n   * @param obj Object to remember\n   */\n  public memoize(obj: any): boolean {\n    if (this._hasWeakSet) {\n      if (this._inner.has(obj)) {\n        return true;\n      }\n      this._inner.add(obj);\n      return false;\n    }\n    // tslint:disable-next-line:prefer-for-of\n    for (let i = 0; i < this._inner.length; i++) {\n      const value = this._inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    this._inner.push(obj);\n    return false;\n  }\n\n  /**\n   * Removes object from internal storage.\n   * @param obj Object to forget\n   */\n  public unmemoize(obj: any): void {\n    if (this._hasWeakSet) {\n      this._inner.delete(obj);\n    } else {\n      for (let i = 0; i < this._inner.length; i++) {\n        if (this._inner[i] === obj) {\n          this._inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n}\n","import { isRegExp } from './is';\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nexport function truncate(str: string, max: number = 0): string {\n  // tslint:disable-next-line:strict-type-predicates\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.substr(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\n\nexport function snipLine(line: string, colno: number): string {\n  let newLine = line;\n  const ll = newLine.length;\n  if (ll <= 150) {\n    return newLine;\n  }\n  if (colno > ll) {\n    colno = ll; // tslint:disable-line:no-parameter-reassignment\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, ll);\n  if (end > ll - 5) {\n    end = ll;\n  }\n  if (end === ll) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < ll) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\nexport function safeJoin(input: any[], delimiter?: string): string {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // tslint:disable-next-line:prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      output.push(String(value));\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the value matches a regex or includes the string\n * @param value The string value to be checked against\n * @param pattern Either a regex or a string that must be contained in value\n */\nexport function isMatchingPattern(value: string, pattern: RegExp | string): boolean {\n  if (isRegExp(pattern)) {\n    return (pattern as RegExp).test(value);\n  }\n  if (typeof pattern === 'string') {\n    return value.indexOf(pattern) !== -1;\n  }\n  return false;\n}\n","import { consoleSandbox, getGlobalObject } from './misc';\n\n// TODO: Implement different loggers for different environments\nconst global = getGlobalObject<Window | NodeJS.Global>();\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\n/** JSDoc */\nclass Logger {\n  /** JSDoc */\n  private _enabled: boolean;\n\n  /** JSDoc */\n  public constructor() {\n    this._enabled = false;\n  }\n\n  /** JSDoc */\n  public disable(): void {\n    this._enabled = false;\n  }\n\n  /** JSDoc */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  /** JSDoc */\n  public log(...args: any[]): void {\n    if (!this._enabled) {\n      return;\n    }\n    consoleSandbox(() => {\n      global.console.log(`${PREFIX}[Log]: ${args.join(' ')}`); // tslint:disable-line:no-console\n    });\n  }\n\n  /** JSDoc */\n  public warn(...args: any[]): void {\n    if (!this._enabled) {\n      return;\n    }\n    consoleSandbox(() => {\n      global.console.warn(`${PREFIX}[Warn]: ${args.join(' ')}`); // tslint:disable-line:no-console\n    });\n  }\n\n  /** JSDoc */\n  public error(...args: any[]): void {\n    if (!this._enabled) {\n      return;\n    }\n    consoleSandbox(() => {\n      global.console.error(`${PREFIX}[Error]: ${args.join(' ')}`); // tslint:disable-line:no-console\n    });\n  }\n}\n\n// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\nglobal.__SENTRY__ = global.__SENTRY__ || {};\nconst logger = (global.__SENTRY__.logger as Logger) || (global.__SENTRY__.logger = new Logger());\n\nexport { logger };\n","import { ExtendedError, WrappedFunction } from '@sentry/types';\n\nimport { isElement, isError, isEvent, isPrimitive, isSyntheticEvent } from './is';\nimport { Memo } from './memo';\nimport { htmlTreeAsString } from './misc';\nimport { truncate } from './string';\n\n/**\n * Wrap a given object method with a higher-order function\n *\n * @param source An object that contains a method to be wrapped.\n * @param name A name of method to be wrapped.\n * @param replacement A function that should be used to wrap a given method.\n * @returns void\n */\nexport function fill(source: { [key: string]: any }, name: string, replacement: (...args: any[]) => any): void {\n  if (!(name in source)) {\n    return;\n  }\n\n  const original = source[name] as () => any;\n  const wrapped = replacement(original) as WrappedFunction;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  // tslint:disable-next-line:strict-type-predicates\n  if (typeof wrapped === 'function') {\n    try {\n      wrapped.prototype = wrapped.prototype || {};\n      Object.defineProperties(wrapped, {\n        __sentry__: {\n          enumerable: false,\n          value: true,\n        },\n        __sentry_original__: {\n          enumerable: false,\n          value: original,\n        },\n        __sentry_wrapped__: {\n          enumerable: false,\n          value: wrapped,\n        },\n      });\n    } catch (_Oo) {\n      // This can throw if multiple fill happens on a global object like XMLHttpRequest\n      // Fixes https://github.com/getsentry/sentry-javascript/issues/2043\n    }\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nexport function urlEncode(object: { [key: string]: any }): string {\n  return Object.keys(object)\n    .map(\n      // tslint:disable-next-line:no-unsafe-any\n      key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`,\n    )\n    .join('&');\n}\n\n/**\n * Transforms any object into an object literal with all it's attributes\n * attached to it.\n *\n * @param value Initial source that we have to transform in order to be usable by the serializer\n */\nfunction getWalkSource(\n  value: any,\n): {\n  [key: string]: any;\n} {\n  if (isError(value)) {\n    const error = value as ExtendedError;\n    const err: {\n      stack: string | undefined;\n      message: string;\n      name: string;\n      [key: string]: any;\n    } = {\n      message: error.message,\n      name: error.name,\n      stack: error.stack,\n    };\n\n    for (const i in error) {\n      if (Object.prototype.hasOwnProperty.call(error, i)) {\n        err[i] = error[i];\n      }\n    }\n\n    return err;\n  }\n\n  if (isEvent(value)) {\n    /**\n     * Event-like interface that's usable in browser and node\n     */\n    interface SimpleEvent {\n      [key: string]: unknown;\n      type: string;\n      target?: unknown;\n      currentTarget?: unknown;\n    }\n\n    const event = value as SimpleEvent;\n\n    const source: {\n      [key: string]: any;\n    } = {};\n\n    source.type = event.type;\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      source.target = isElement(event.target)\n        ? htmlTreeAsString(event.target)\n        : Object.prototype.toString.call(event.target);\n    } catch (_oO) {\n      source.target = '<unknown>';\n    }\n\n    try {\n      source.currentTarget = isElement(event.currentTarget)\n        ? htmlTreeAsString(event.currentTarget)\n        : Object.prototype.toString.call(event.currentTarget);\n    } catch (_oO) {\n      source.currentTarget = '<unknown>';\n    }\n\n    // tslint:disable-next-line:strict-type-predicates\n    if (typeof CustomEvent !== 'undefined' && value instanceof CustomEvent) {\n      source.detail = event.detail;\n    }\n\n    for (const i in event) {\n      if (Object.prototype.hasOwnProperty.call(event, i)) {\n        source[i] = event;\n      }\n    }\n\n    return source;\n  }\n\n  return value as {\n    [key: string]: any;\n  };\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value: string): number {\n  // tslint:disable-next-line:no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\nfunction jsonSize(value: any): number {\n  return utf8Length(JSON.stringify(value));\n}\n\n/** JSDoc */\nexport function normalizeToSize<T>(\n  object: { [key: string]: any },\n  // Default Node.js REPL depth\n  depth: number = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize: number = 100 * 1024,\n): T {\n  const serialized = normalize(object, depth);\n\n  if (jsonSize(serialized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return serialized as T;\n}\n\n/** Transforms any input value into a string form, either primitive value or a type of the input */\nfunction serializeValue(value: any): any {\n  const type = Object.prototype.toString.call(value);\n\n  // Node.js REPL notation\n  if (typeof value === 'string') {\n    return value;\n  }\n  if (type === '[object Object]') {\n    return '[Object]';\n  }\n  if (type === '[object Array]') {\n    return '[Array]';\n  }\n\n  const normalized = normalizeValue(value);\n  return isPrimitive(normalized) ? normalized : type;\n}\n\n/**\n * normalizeValue()\n *\n * Takes unserializable input and make it serializable friendly\n *\n * - translates undefined/NaN values to \"[undefined]\"/\"[NaN]\" respectively,\n * - serializes Error objects\n * - filter global objects\n */\n// tslint:disable-next-line:cyclomatic-complexity\nfunction normalizeValue<T>(value: T, key?: any): T | string {\n  if (key === 'domain' && value && typeof value === 'object' && ((value as unknown) as { _events: any })._events) {\n    return '[Domain]';\n  }\n\n  if (key === 'domainEmitter') {\n    return '[DomainEmitter]';\n  }\n\n  if (typeof (global as any) !== 'undefined' && (value as unknown) === global) {\n    return '[Global]';\n  }\n\n  if (typeof (window as any) !== 'undefined' && (value as unknown) === window) {\n    return '[Window]';\n  }\n\n  if (typeof (document as any) !== 'undefined' && (value as unknown) === document) {\n    return '[Document]';\n  }\n\n  // React's SyntheticEvent thingy\n  if (isSyntheticEvent(value)) {\n    return '[SyntheticEvent]';\n  }\n\n  // tslint:disable-next-line:no-tautology-expression\n  if (typeof value === 'number' && value !== value) {\n    return '[NaN]';\n  }\n\n  if (value === void 0) {\n    return '[undefined]';\n  }\n\n  if (typeof value === 'function') {\n    return `[Function: ${value.name || '<unknown-function-name>'}]`;\n  }\n\n  return value;\n}\n\n/**\n * Walks an object to perform a normalization on it\n *\n * @param key of object that's walked in current iteration\n * @param value object to be walked\n * @param depth Optional number indicating how deep should walking be performed\n * @param memo Optional Memo class handling decycling\n */\nexport function walk(key: string, value: any, depth: number = +Infinity, memo: Memo = new Memo()): any {\n  // If we reach the maximum depth, serialize whatever has left\n  if (depth === 0) {\n    return serializeValue(value);\n  }\n\n  // If value implements `toJSON` method, call it and return early\n  // tslint:disable:no-unsafe-any\n  if (value !== null && value !== undefined && typeof value.toJSON === 'function') {\n    return value.toJSON();\n  }\n  // tslint:enable:no-unsafe-any\n\n  // If normalized value is a primitive, there are no branches left to walk, so we can just bail out, as theres no point in going down that branch any further\n  const normalized = normalizeValue(value, key);\n  if (isPrimitive(normalized)) {\n    return normalized;\n  }\n\n  // Create source that we will use for next itterations, either objectified error object (Error type with extracted keys:value pairs) or the input itself\n  const source = getWalkSource(value);\n\n  // Create an accumulator that will act as a parent for all future itterations of that branch\n  const acc = Array.isArray(value) ? [] : {};\n\n  // If we already walked that branch, bail out, as it's circular reference\n  if (memo.memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // Walk all keys of the source\n  for (const innerKey in source) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(source, innerKey)) {\n      continue;\n    }\n    // Recursively walk through all the child nodes\n    (acc as { [key: string]: any })[innerKey] = walk(innerKey, source[innerKey], depth - 1, memo);\n  }\n\n  // Once walked through all the branches, remove the parent from memo storage\n  memo.unmemoize(value);\n\n  // Return accumulated values\n  return acc;\n}\n\n/**\n * normalize()\n *\n * - Creates a copy to prevent original input mutation\n * - Skip non-enumerablers\n * - Calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializeable values (undefined/NaN/Functions) to serializable format\n * - Translates known global objects/Classes to a string representations\n * - Takes care of Error objects serialization\n * - Optionally limit depth of final output\n */\nexport function normalize(input: any, depth?: number): any {\n  try {\n    // tslint:disable-next-line:no-unsafe-any\n    return JSON.parse(JSON.stringify(input, (key: string, value: any) => walk(key, value, depth)));\n  } catch (_oO) {\n    return '**non-serializable**';\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nexport function extractExceptionKeysForMessage(exception: any, maxLength: number = 40): string {\n  // tslint:disable:strict-type-predicates\n  const keys = Object.keys(getWalkSource(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return truncate(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n"],"sourceRoot":""}