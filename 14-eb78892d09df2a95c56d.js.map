{"version":3,"sources":["webpack:///(webpack)/buildin/harmony-module.js","webpack:///../src/misc.ts","webpack:///../src/hub.ts","webpack:///../src/string.ts","webpack:///../src/severity.ts","webpack:///../src/status.ts","webpack:///../src/index.ts","webpack:///../src/polyfill.ts","webpack:///../src/error.ts","webpack:///../src/dsn.ts","webpack:///../src/api.ts","webpack:///../src/integration.ts","webpack:///../src/baseclient.ts","webpack:///../../src/transports/noop.ts","webpack:///../src/basebackend.ts","webpack:///../src/supports.ts","webpack:///../src/tracekit.ts","webpack:///../src/parsers.ts","webpack:///../src/eventbuilder.ts","webpack:///../../src/integrations/functiontostring.ts","webpack:///../src/promisebuffer.ts","webpack:///../../src/transports/base.ts","webpack:///../../src/transports/fetch.ts","webpack:///../../src/transports/xhr.ts","webpack:///../src/backend.ts","webpack:///../src/version.ts","webpack:///../src/client.ts","webpack:///../../src/integrations/inboundfilters.ts","webpack:///../src/helpers.ts","webpack:///../../src/integrations/trycatch.ts","webpack:///../../src/integrations/breadcrumbs.ts","webpack:///../../src/integrations/globalhandlers.ts","webpack:///../../src/integrations/linkederrors.ts","webpack:///../../src/integrations/useragent.ts","webpack:///../src/sdk.ts","webpack:///../src/memo.ts","webpack:///../src/syncpromise.ts","webpack:///../src/logger.ts","webpack:///../src/is.ts","webpack:///../src/object.ts","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.typed.uint16-array.js","webpack:///../src/span.ts","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///../src/scope.ts"],"names":["module","exports","originalModule","webpackPolyfill","Object","create","children","defineProperty","enumerable","get","l","i","dynamicRequire","mod","request","require","isNodeEnv","prototype","toString","call","process","fallbackGlobalObject","getGlobalObject","global","window","self","uuid4","crypto","msCrypto","getRandomValues","arr","Uint16Array","pad","num","v","length","replace","c","r","Math","random","parseUrl","url","match","query","fragment","host","path","protocol","relative","getEventDescription","event","message","exception","values","type","value","event_id","consoleSandbox","callback","originalConsole","console","wrappedLevels","forEach","level","__sentry__","__sentry_wrapped__","__sentry_original__","result","keys","addExceptionTypeValue","addExceptionMechanism","mechanism","key","_oO","getLocationHref","document","location","href","oO","htmlTreeAsString","elem","currentElem","out","height","len","sepLength","nextStr","_htmlElementAsString","push","parentNode","reverse","join","el","className","classes","attr","tagName","toLowerCase","id","split","attrWhitelist","getAttribute","defaultRetryAfter","parseRetryAfterHeader","now","header","headerDelay","parseInt","isNaN","headerDate","Date","parse","API_VERSION","client","scope","_version","_stack","this","_invokeClient","method","top","getStackTop","args","isOlderThan","version","bindClient","pushScope","stack","getStack","parentScope","undefined","clone","getClient","popScope","pop","withScope","getScope","captureException","hint","eventId","_lastEventId","finalHint","syntheticException","Error","originalException","captureMessage","captureEvent","lastEventId","addBreadcrumb","breadcrumb","beforeBreadcrumb","maxBreadcrumbs","timestamp","getTime","mergedBreadcrumb","finalBreadcrumb","min","setUser","user","setTags","tags","setExtras","extras","setTag","setExtra","extra","setContext","name","context","configureScope","run","oldHub","makeMain","getIntegration","integration","warn","traceHeaders","span","getSpan","toTraceparent","getMainCarrier","carrier","__SENTRY__","hub","registry","getHubFromCarrier","setHubOnCarrier","getCurrentHub","hasHubOnCarrier","Hub","activeDomain","active","registryHubTopStack","_Oo","getHubFromActiveDomain","truncate","str","max","substr","safeJoin","input","delimiter","Array","isArray","output","String","e","isMatchingPattern","pattern","test","indexOf","Severity","Status","fromString","Debug","Info","Warning","Fatal","Critical","Log","fromHttpCode","code","Success","RateLimit","Invalid","Failed","Unknown","setPrototypeOf","__proto__","obj","proto","prop","hasOwnProperty","constructor","DSN_REGEX","from","_fromString","_fromComponents","_validate","withPassword","pass","port","projectId","exec","slice","components","component","dsn","_dsnObject","getDsn","getStoreEndpoint","_getBaseUrl","getStoreEndpointPath","getStoreEndpointWithUrlEncodedAuth","auth","sentry_key","sentry_version","getRequestHeaders","clientName","clientVersion","getReportDialogEndpoint","dialogOptions","endpoint","encodedOptions","encodeURIComponent","email","installedIntegrations","setupIntegrations","options","integrations","defaultIntegrations","userIntegrations","map","defaultIntegration","userIntegration","integrationsNames","splice","getIntegrationsToSetup","setupOnce","logger","log","setupIntegration","backendClass","_integrations","_processing","_backend","_options","_dsn","_isEnabled","_getBackend","eventFromException","then","_processEvent","finalEvent","reason","error","is","eventFromMessage","getOptions","flush","timeout","_isClientProcessing","status","clearInterval","interval","getTransport","close","transportFlushed","ready","enabled","getIntegrations","resolve","ticked","setInterval","_prepareEvent","environment","release","dist","maxValueLength","prepared","_addIntegrations","sdk","applyToEvent","sdkInfo","integrationsArray","beforeSend","sampleRate","reject","data","sendEvent","beforeSendResult","_handleAsyncBeforeSend","processedEvent","_","Skipped","_transport","_setupTransport","_exception","_hint","_message","_level","supportsFetch","Headers","Request","Response","supportsReferrerPolicy","referrerPolicy","UNKNOWN_FUNCTION","gecko","winjs","geckoEval","chromeEval","computeStackTrace","ex","popSize","framesToPop","stacktrace","parts","opera10Regex","opera11Regex","lines","line","element","func","column","extractMessage","computeStackTraceFromStacktraceProp","popFrames","submatch","isNative","columnNumber","computeStackTraceFromStackProp","failed","STACKTRACE_LIMIT","exceptionFromStacktrace","frames","prepareFramesForEvent","eventFromStacktrace","localStack","firstFrameFunction","lastFrameFunction","frame","colno","filename","function","in_app","lineno","eventFromUnknownInput","domException","eventFromString","rejection","__serialized__","eventFromPlainObject","synthetic","attachStacktrace","originalFunctionToString","_limit","_buffer","isReady","add","task","remove","drain","capturedSetTimeout","setTimeout","all","clearTimeout","_disabledUntil","Promise","defaultOptions","body","JSON","stringify","fetch","response","headers","catch","XMLHttpRequest","onreadystatechange","readyState","getResponseHeader","open","send","transportOptions","transport","handled","SDK_NAME","platform","packages","showReportDialog","script","createElement","async","src","onLoad","onload","head","appendChild","FunctionToString","Function","apply","DEFAULT_IGNORE_ERRORS","InboundFilters","clientOptions","_mergeOptions","_shouldDropEvent","_isSentryError","_isIgnoredError","_isBlacklistedUrl","_getEventFilterUrl","_isWhitelistedUrl","ignoreInternal","ignoreErrors","_getPossibleEventMessages","some","blacklistUrls","whitelistUrls","keypressTimeout","lastCapturedEvent","debounceDuration","ignoreOnError","shouldIgnoreOnError","ignoreNextOnError","wrap","fn","before","sentryWrapped","arguments","wrappedArguments","arg","handleEvent","addEventProcessor","property","defineProperties","getOwnPropertyDescriptor","configurable","debounceTimer","breadcrumbEventHandler","eventName","debounce","captureBreadcrumb","target","category","keypressEventHandler","isContentEditable","_ignoreOnError","TryCatch","_wrapTimeFunction","original","originalCallback","getFunctionName","_wrapRAF","handler","_wrapEventTarget","bind","err","lastHref","Breadcrumbs","dom","history","sentry","xhr","_instrumentConsole","originalConsoleLevel","breadcrumbData","_instrumentDOM","addEventListener","innerOriginal","_instrumentFetch","isNativeFunc","doc","sandbox","hidden","contentWindow","removeChild","supportsNativeFetch","originalFetch","fetchInput","filterUrl","addSentryBreadcrumb","fetchData","toUpperCase","status_code","_instrumentHistory","chrome","isChromePackagedApp","app","runtime","hasHistoryApi","pushState","replaceState","captureUrlChange","to","parsedLoc","parsedTo","parsedFrom","oldOnPopState","onpopstate","currentHref","historyReplacementFunction","originalHistoryFunction","_instrumentXHR","xhrproto","originalOpen","__sentry_xhr__","__sentry_own_request__","originalSend","onreadystatechangeHandler","xmlHttpRequestProps","wrapProp","serializedData","GlobalHandlers","_global","_oldOnErrorHandler","_oldOnUnhandledRejectionHandler","_onErrorHandlerInstalled","_onUnhandledRejectionHandlerInstalled","onerror","onunhandledrejection","stackTraceLimit","_installGlobalOnErrorHandler","_installGlobalOnUnhandledRejectionHandler","msg","currentHub","hasIntegration","isFailedOwnDelivery","_eventFromIncompleteOnError","_enhanceEventWithInitialFrame","_eventFromIncompleteRejection","groups","DEFAULT_KEY","DEFAULT_LIMIT","LinkedErrors","_key","limit","_handler","linkedErrors","_walkErrorTree","UserAgent","navigator","userAgent","init","SENTRY_RELEASE","initAndBind","forceLoad","windowIntegrations","_window","Sentry","Integrations","INTEGRATIONS","_hasWeakSet","WeakSet","_inner","memoize","has","unmemoize","delete","States","executor","_state","PENDING","_handlers","_resolve","_setResult","RESOLVED","_reject","REJECTED","state","_value","_executeHandlers","_attachHandler","concat","onrejected","onfulfilled","SyncPromise","collection","counter","resolvedCollection","item","index","TypeError","val","finally","onfinally","isRejected","PREFIX","_enabled","disable","enable","Logger","isError","wat","isErrorEvent","isDOMError","isDOMException","isString","isPrimitive","isPlainObject","isEvent","Event","isElement","Element","isRegExp","isThenable","Boolean","isSyntheticEvent","fill","source","replacement","wrapped","urlEncode","object","getWalkSource","currentTarget","CustomEvent","detail","jsonSize","encodeURI","utf8Length","normalizeToSize","depth","maxSize","serialized","normalize","normalizeValue","_events","walk","memo","Infinity","normalized","serializeValue","toJSON","acc","innerKey","extractExceptionKeysForMessage","maxLength","sort","includedKeys","byteOffset","TRACEPARENT_REGEXP","_traceId","_spanId","_sampled","_parent","substring","setParent","parent","setSampled","sampled","fromTraceparent","traceparent","matches","Span","span_id","trace_id","_extendStatics","d","b","p","__extends","__","_assign","assign","t","s","n","__read","o","m","Symbol","iterator","ar","next","done","__spread","_notifyingListeners","_scopeListeners","_eventProcessors","_breadcrumbs","_user","_tags","_extra","_context","addScopeListener","_notifyScopeListeners","_notifyEventProcessors","processors","processor","final","setFingerprint","fingerprint","_fingerprint","setLevel","setTransaction","transaction","_transaction","setSpan","_span","startSpan","parentSpan","newScope","Scope","clear","clearBreadcrumbs","_applyFingerprint","contexts","trace","breadcrumbs","getGlobalEventProcessors","globalEventProcessors","addGlobalEventProcessor"],"mappings":"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","file":"14-eb78892d09df2a95c56d.js","sourcesContent":["module.exports = function (originalModule) {\n  if (!originalModule.webpackPolyfill) {\n    var module = Object.create(originalModule); // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    Object.defineProperty(module, \"exports\", {\n      enumerable: true\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","import { Event, Integration, WrappedFunction } from '@sentry/types';\n\nimport { isString } from './is';\n\n/** Internal */\ninterface SentryGlobal {\n  Sentry?: {\n    Integrations?: Integration[];\n  };\n  SENTRY_ENVIRONMENT?: string;\n  SENTRY_DSN?: string;\n  SENTRY_RELEASE?: {\n    id?: string;\n  };\n  __SENTRY__: {\n    globalEventProcessors: any;\n    hub: any;\n    logger: any;\n  };\n}\n\n/**\n * Requires a module which is protected _against bundler minification.\n *\n * @param request The module path to resolve\n */\nexport function dynamicRequire(mod: any, request: string): any {\n  // tslint:disable-next-line: no-unsafe-any\n  return mod.require(request);\n}\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nexport function isNodeEnv(): boolean {\n  // tslint:disable:strict-type-predicates\n  return Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\n}\n\nconst fallbackGlobalObject = {};\n\n/**\n * Safely get global scope object\n *\n * @returns Global scope object\n */\nexport function getGlobalObject<T>(): T & SentryGlobal {\n  return (isNodeEnv()\n    ? global\n    : typeof window !== 'undefined'\n    ? window\n    : typeof self !== 'undefined'\n    ? self\n    : fallbackGlobalObject) as T & SentryGlobal;\n}\n// tslint:enable:strict-type-predicates\n\n/**\n * Extended Window interface that allows for Crypto API usage in IE browsers\n */\ninterface MsCryptoWindow extends Window {\n  msCrypto?: Crypto;\n}\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nexport function uuid4(): string {\n  const global = getGlobalObject() as MsCryptoWindow;\n  const crypto = global.crypto || global.msCrypto;\n\n  if (!(crypto === void 0) && crypto.getRandomValues) {\n    // Use window.crypto API if available\n    const arr = new Uint16Array(8);\n    crypto.getRandomValues(arr);\n\n    // set 4 in byte 7\n    // tslint:disable-next-line:no-bitwise\n    arr[3] = (arr[3] & 0xfff) | 0x4000;\n    // set 2 most significant bits of byte 9 to '10'\n    // tslint:disable-next-line:no-bitwise\n    arr[4] = (arr[4] & 0x3fff) | 0x8000;\n\n    const pad = (num: number): string => {\n      let v = num.toString(16);\n      while (v.length < 4) {\n        v = `0${v}`;\n      }\n      return v;\n    };\n\n    return (\n      pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) + pad(arr[5]) + pad(arr[6]) + pad(arr[7])\n    );\n  }\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    // tslint:disable-next-line:no-bitwise\n    const r = (Math.random() * 16) | 0;\n    // tslint:disable-next-line:no-bitwise\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nexport function parseUrl(\n  url: string,\n): {\n  host?: string;\n  path?: string;\n  protocol?: string;\n  relative?: string;\n} {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nexport function getEventDescription(event: Event): string {\n  if (event.message) {\n    return event.message;\n  }\n  if (event.exception && event.exception.values && event.exception.values[0]) {\n    const exception = event.exception.values[0];\n\n    if (exception.type && exception.value) {\n      return `${exception.type}: ${exception.value}`;\n    }\n    return exception.type || exception.value || event.event_id || '<unknown>';\n  }\n  return event.event_id || '<unknown>';\n}\n\n/** JSDoc */\ninterface ExtensibleConsole extends Console {\n  [key: string]: any;\n}\n\n/** JSDoc */\nexport function consoleSandbox(callback: () => any): any {\n  const global = getGlobalObject<Window>();\n  const levels = ['debug', 'info', 'warn', 'error', 'log', 'assert'];\n\n  if (!('console' in global)) {\n    return callback();\n  }\n\n  const originalConsole = global.console as ExtensibleConsole;\n  const wrappedLevels: { [key: string]: any } = {};\n\n  // Restore all wrapped console methods\n  levels.forEach(level => {\n    if (level in global.console && (originalConsole[level] as WrappedFunction).__sentry__) {\n      wrappedLevels[level] = (originalConsole[level] as WrappedFunction).__sentry_wrapped__;\n      originalConsole[level] = (originalConsole[level] as WrappedFunction).__sentry_original__;\n    }\n  });\n\n  // Perform callback manipulations\n  const result = callback();\n\n  // Revert restoration to wrapped state\n  Object.keys(wrappedLevels).forEach(level => {\n    originalConsole[level] = wrappedLevels[level];\n  });\n\n  return result;\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nexport function addExceptionTypeValue(event: Event, value?: string, type?: string): void {\n  event.exception = event.exception || {};\n  event.exception.values = event.exception.values || [];\n  event.exception.values[0] = event.exception.values[0] || {};\n  event.exception.values[0].value = event.exception.values[0].value || value || '';\n  event.exception.values[0].type = event.exception.values[0].type || type || 'Error';\n}\n\n/**\n * Adds exception mechanism to a given event.\n * @param event The event to modify.\n * @param mechanism Mechanism of the mechanism.\n * @hidden\n */\nexport function addExceptionMechanism(\n  event: Event,\n  mechanism: {\n    [key: string]: any;\n  } = {},\n): void {\n  // TODO: Use real type with `keyof Mechanism` thingy and maybe make it better?\n  try {\n    // @ts-ignore\n    // tslint:disable:no-non-null-assertion\n    event.exception!.values![0].mechanism = event.exception!.values![0].mechanism || {};\n    Object.keys(mechanism).forEach(key => {\n      // @ts-ignore\n      event.exception!.values![0].mechanism[key] = mechanism[key];\n    });\n  } catch (_oO) {\n    // no-empty\n  }\n}\n\n/**\n * A safe form of location.href\n */\nexport function getLocationHref(): string {\n  try {\n    return document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nexport function htmlTreeAsString(elem: unknown): string {\n  type SimpleNode = {\n    parentNode: SimpleNode;\n  } | null;\n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem as SimpleNode;\n    const MAX_TRAVERSE_HEIGHT = 5;\n    const MAX_OUTPUT_LEN = 80;\n    const out = [];\n    let height = 0;\n    let len = 0;\n    const separator = ' > ';\n    const sepLength = separator.length;\n    let nextStr;\n\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds MAX_OUTPUT_LEN\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= MAX_OUTPUT_LEN)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el: unknown): string {\n  const elem = el as {\n    getAttribute(key: string): string; // tslint:disable-line:completed-docs\n    tagName?: string;\n    id?: string;\n    className?: string;\n  };\n\n  const out = [];\n  let className;\n  let classes;\n  let key;\n  let attr;\n  let i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  out.push(elem.tagName.toLowerCase());\n  if (elem.id) {\n    out.push(`#${elem.id}`);\n  }\n\n  className = elem.className;\n  if (className && isString(className)) {\n    classes = className.split(/\\s+/);\n    for (i = 0; i < classes.length; i++) {\n      out.push(`.${classes[i]}`);\n    }\n  }\n  const attrWhitelist = ['type', 'name', 'title', 'alt'];\n  for (i = 0; i < attrWhitelist.length; i++) {\n    key = attrWhitelist[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push(`[${key}=\"${attr}\"]`);\n    }\n  }\n  return out.join('');\n}\n\nconst defaultRetryAfter = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param now current unix timestamp\n * @param header string representation of 'Retry-After' header\n */\nexport function parseRetryAfterHeader(now: number, header?: string | number | null): number {\n  if (!header) {\n    return defaultRetryAfter;\n  }\n\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return defaultRetryAfter;\n}\n","import {\n  Breadcrumb,\n  BreadcrumbHint,\n  Client,\n  Event,\n  EventHint,\n  Hub as HubInterface,\n  Integration,\n  IntegrationClass,\n  Severity,\n  User,\n} from '@sentry/types';\nimport { consoleSandbox, dynamicRequire, getGlobalObject, isNodeEnv, logger, uuid4 } from '@sentry/utils';\n\nimport { Carrier, Layer } from './interfaces';\nimport { Scope } from './scope';\n\ndeclare module 'domain' {\n  export let active: Domain;\n  /**\n   * Extension for domain interface\n   */\n  export interface Domain {\n    __SENTRY__?: Carrier;\n  }\n}\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be incresed when the global interface\n * changes a and new methods are introduced.\n *\n * @hidden\n */\nexport const API_VERSION = 3;\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 30;\n\n/**\n * Absolute maximum number of breadcrumbs added to an event. The\n * `maxBreadcrumbs` option cannot be higher than this value.\n */\nconst MAX_BREADCRUMBS = 100;\n\n/**\n * @inheritDoc\n */\nexport class Hub implements HubInterface {\n  /** Is a {@link Layer}[] containing the client and scope */\n  private readonly _stack: Layer[] = [];\n\n  /** Contains the last event id of a captured event.  */\n  private _lastEventId?: string;\n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   */\n  public constructor(client?: Client, scope: Scope = new Scope(), private readonly _version: number = API_VERSION) {\n    this._stack.push({ client, scope });\n  }\n\n  /**\n   * Internal helper function to call a method on the top client if it exists.\n   *\n   * @param method The method to call on the client.\n   * @param args Arguments to pass to the client function.\n   */\n  private _invokeClient<M extends keyof Client>(method: M, ...args: any[]): void {\n    const top = this.getStackTop();\n    if (top && top.client && top.client[method]) {\n      (top.client as any)[method](...args, top.scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public isOlderThan(version: number): boolean {\n    return this._version < version;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public bindClient(client?: Client): void {\n    const top = this.getStackTop();\n    top.client = client;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public pushScope(): Scope {\n    // We want to clone the content of prev scope\n    const stack = this.getStack();\n    const parentScope = stack.length > 0 ? stack[stack.length - 1].scope : undefined;\n    const scope = Scope.clone(parentScope);\n    this.getStack().push({\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public popScope(): boolean {\n    return this.getStack().pop() !== undefined;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public withScope(callback: (scope: Scope) => void): void {\n    const scope = this.pushScope();\n    try {\n      callback(scope);\n    } finally {\n      this.popScope();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getClient<C extends Client>(): C | undefined {\n    return this.getStackTop().client as C;\n  }\n\n  /** Returns the scope of the top stack. */\n  public getScope(): Scope | undefined {\n    return this.getStackTop().scope;\n  }\n\n  /** Returns the scope stack for domains or the process. */\n  public getStack(): Layer[] {\n    return this._stack;\n  }\n\n  /** Returns the topmost scope layer in the order domain > local > process. */\n  public getStackTop(): Layer {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureException(exception: any, hint?: EventHint): string {\n    const eventId = (this._lastEventId = uuid4());\n    let finalHint = hint;\n\n    // If there's no explicit hint provided, mimick the same thing that would happen\n    // in the minimal itself to create a consistent behavior.\n    // We don't do this in the client, as it's the lowest level API, and doing this,\n    // would prevent user from having full control over direct calls.\n    if (!hint) {\n      let syntheticException: Error;\n      try {\n        throw new Error('Sentry syntheticException');\n      } catch (exception) {\n        syntheticException = exception as Error;\n      }\n      finalHint = {\n        originalException: exception,\n        syntheticException,\n      };\n    }\n\n    this._invokeClient('captureException', exception, {\n      ...finalHint,\n      event_id: eventId,\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureMessage(message: string, level?: Severity, hint?: EventHint): string {\n    const eventId = (this._lastEventId = uuid4());\n    let finalHint = hint;\n\n    // If there's no explicit hint provided, mimick the same thing that would happen\n    // in the minimal itself to create a consistent behavior.\n    // We don't do this in the client, as it's the lowest level API, and doing this,\n    // would prevent user from having full control over direct calls.\n    if (!hint) {\n      let syntheticException: Error;\n      try {\n        throw new Error(message);\n      } catch (exception) {\n        syntheticException = exception as Error;\n      }\n      finalHint = {\n        originalException: message,\n        syntheticException,\n      };\n    }\n\n    this._invokeClient('captureMessage', message, level, {\n      ...finalHint,\n      event_id: eventId,\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureEvent(event: Event, hint?: EventHint): string {\n    const eventId = (this._lastEventId = uuid4());\n    this._invokeClient('captureEvent', event, {\n      ...hint,\n      event_id: eventId,\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public lastEventId(): string | undefined {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, hint?: BreadcrumbHint): void {\n    const top = this.getStackTop();\n\n    if (!top.scope || !top.client) {\n      return;\n    }\n\n    const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (top.client.getOptions && top.client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) {\n      return;\n    }\n\n    const timestamp = new Date().getTime() / 1000;\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n    const finalBreadcrumb = beforeBreadcrumb\n      ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) as Breadcrumb | null)\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) {\n      return;\n    }\n\n    top.scope.addBreadcrumb(finalBreadcrumb, Math.min(maxBreadcrumbs, MAX_BREADCRUMBS));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setUser(user: User | null): void {\n    const top = this.getStackTop();\n    if (!top.scope) {\n      return;\n    }\n    top.scope.setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTags(tags: { [key: string]: string }): void {\n    const top = this.getStackTop();\n    if (!top.scope) {\n      return;\n    }\n    top.scope.setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtras(extras: { [key: string]: any }): void {\n    const top = this.getStackTop();\n    if (!top.scope) {\n      return;\n    }\n    top.scope.setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTag(key: string, value: string): void {\n    const top = this.getStackTop();\n    if (!top.scope) {\n      return;\n    }\n    top.scope.setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtra(key: string, extra: any): void {\n    const top = this.getStackTop();\n    if (!top.scope) {\n      return;\n    }\n    top.scope.setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setContext(name: string, context: { [key: string]: any } | null): void {\n    const top = this.getStackTop();\n    if (!top.scope) {\n      return;\n    }\n    top.scope.setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public configureScope(callback: (scope: Scope) => void): void {\n    const top = this.getStackTop();\n    if (top.scope && top.client) {\n      callback(top.scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public run(callback: (hub: Hub) => void): void {\n    const oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null {\n    const client = this.getClient();\n    if (!client) {\n      return null;\n    }\n    try {\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public traceHeaders(): { [key: string]: string } {\n    const top = this.getStackTop();\n    if (top.scope && top.client) {\n      const span = top.scope.getSpan();\n      if (span) {\n        return {\n          'sentry-trace': span.toTraceparent(),\n        };\n      }\n    }\n    return {};\n  }\n}\n\n/** Returns the global shim registry. */\nexport function getMainCarrier(): Carrier {\n  const carrier = getGlobalObject();\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {\n    hub: undefined,\n  };\n  return carrier;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nexport function makeMain(hub: Hub): Hub {\n  const registry = getMainCarrier();\n  const oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nexport function getCurrentHub(): Hub {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n\n  // If there's no hub, or its an old API, assign a new one\n  if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Prefer domains over global if they are there (applicable only to Node environment)\n  if (isNodeEnv()) {\n    return getHubFromActiveDomain(registry);\n  }\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * Try to read the hub from an active domain, fallback to the registry if one doesnt exist\n * @returns discovered hub\n */\nfunction getHubFromActiveDomain(registry: Carrier): Hub {\n  try {\n    // We need to use `dynamicRequire` because `require` on it's own will be optimized by webpack.\n    // We do not want this to happen, we need to try to `require` the domain node module and fail if we are in browser\n    // for example so we do not have to shim it and use `getCurrentHub` universally.\n    const domain = dynamicRequire(module, 'domain');\n    const activeDomain = domain.active;\n\n    // If there no active domain, just return global hub\n    if (!activeDomain) {\n      return getHubFromCarrier(registry);\n    }\n\n    // If there's no hub on current domain, or its an old API, assign a new one\n    if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {\n      const registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n      setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, Scope.clone(registryHubTopStack.scope)));\n    }\n\n    // Return hub that lives on a domain\n    return getHubFromCarrier(activeDomain);\n  } catch (_Oo) {\n    // Return hub that lives on a global object\n    return getHubFromCarrier(registry);\n  }\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier: Carrier): boolean {\n  if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nexport function getHubFromCarrier(carrier: Carrier): Hub {\n  if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) {\n    return carrier.__SENTRY__.hub;\n  }\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n  carrier.__SENTRY__.hub = new Hub();\n  return carrier.__SENTRY__.hub;\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n */\nexport function setHubOnCarrier(carrier: Carrier, hub: Hub): boolean {\n  if (!carrier) {\n    return false;\n  }\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n  carrier.__SENTRY__.hub = hub;\n  return true;\n}\n","import { isRegExp } from './is';\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nexport function truncate(str: string, max: number = 0): string {\n  // tslint:disable-next-line:strict-type-predicates\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.substr(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\n\nexport function snipLine(line: string, colno: number): string {\n  let newLine = line;\n  const ll = newLine.length;\n  if (ll <= 150) {\n    return newLine;\n  }\n  if (colno > ll) {\n    colno = ll; // tslint:disable-line:no-parameter-reassignment\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, ll);\n  if (end > ll - 5) {\n    end = ll;\n  }\n  if (end === ll) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < ll) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\nexport function safeJoin(input: any[], delimiter?: string): string {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // tslint:disable-next-line:prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      output.push(String(value));\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the value matches a regex or includes the string\n * @param value The string value to be checked against\n * @param pattern Either a regex or a string that must be contained in value\n */\nexport function isMatchingPattern(value: string, pattern: RegExp | string): boolean {\n  if (isRegExp(pattern)) {\n    return (pattern as RegExp).test(value);\n  }\n  if (typeof pattern === 'string') {\n    return value.indexOf(pattern) !== -1;\n  }\n  return false;\n}\n","/** JSDoc */\nexport enum Severity {\n  /** JSDoc */\n  Fatal = 'fatal',\n  /** JSDoc */\n  Error = 'error',\n  /** JSDoc */\n  Warning = 'warning',\n  /** JSDoc */\n  Log = 'log',\n  /** JSDoc */\n  Info = 'info',\n  /** JSDoc */\n  Debug = 'debug',\n  /** JSDoc */\n  Critical = 'critical',\n}\n// tslint:disable:completed-docs\n// tslint:disable:no-unnecessary-qualifier no-namespace\nexport namespace Severity {\n  /**\n   * Converts a string-based level into a {@link Severity}.\n   *\n   * @param level string representation of Severity\n   * @returns Severity\n   */\n  export function fromString(level: string): Severity {\n    switch (level) {\n      case 'debug':\n        return Severity.Debug;\n      case 'info':\n        return Severity.Info;\n      case 'warn':\n      case 'warning':\n        return Severity.Warning;\n      case 'error':\n        return Severity.Error;\n      case 'fatal':\n        return Severity.Fatal;\n      case 'critical':\n        return Severity.Critical;\n      case 'log':\n      default:\n        return Severity.Log;\n    }\n  }\n}\n","/** The status of an event. */\nexport enum Status {\n  /** The status could not be determined. */\n  Unknown = 'unknown',\n  /** The event was skipped due to configuration or callbacks. */\n  Skipped = 'skipped',\n  /** The event was sent to Sentry successfully. */\n  Success = 'success',\n  /** The client is currently rate limited and will try again later. */\n  RateLimit = 'rate_limit',\n  /** The event could not be processed. */\n  Invalid = 'invalid',\n  /** A server-side error ocurred during submission. */\n  Failed = 'failed',\n}\n// tslint:disable:completed-docs\n// tslint:disable:no-unnecessary-qualifier no-namespace\nexport namespace Status {\n  /**\n   * Converts a HTTP status code into a {@link Status}.\n   *\n   * @param code The HTTP response status code.\n   * @returns The send status or {@link Status.Unknown}.\n   */\n  export function fromHttpCode(code: number): Status {\n    if (code >= 200 && code < 300) {\n      return Status.Success;\n    }\n\n    if (code === 429) {\n      return Status.RateLimit;\n    }\n\n    if (code >= 400 && code < 500) {\n      return Status.Invalid;\n    }\n\n    if (code >= 500) {\n      return Status.Failed;\n    }\n\n    return Status.Unknown;\n  }\n}\n","export {\n  Breadcrumb,\n  Request,\n  SdkInfo,\n  Event,\n  Exception,\n  Response,\n  Severity,\n  StackFrame,\n  Stacktrace,\n  Status,\n  Thread,\n  User,\n} from '@sentry/types';\n\nexport {\n  addGlobalEventProcessor,\n  addBreadcrumb,\n  captureException,\n  captureEvent,\n  captureMessage,\n  configureScope,\n  getHubFromCarrier,\n  getCurrentHub,\n  Hub,\n  Scope,\n  setContext,\n  setExtra,\n  setExtras,\n  setTag,\n  setTags,\n  setUser,\n  Span,\n  withScope,\n} from '@sentry/core';\n\nexport { BrowserOptions } from './backend';\nexport { BrowserClient, ReportDialogOptions } from './client';\nexport { defaultIntegrations, forceLoad, init, lastEventId, onLoad, showReportDialog, flush, close, wrap } from './sdk';\nexport { SDK_NAME, SDK_VERSION } from './version';\n\nimport { Integrations as CoreIntegrations } from '@sentry/core';\nimport { getGlobalObject } from '@sentry/utils';\n\nimport * as BrowserIntegrations from './integrations';\nimport * as Transports from './transports';\n\nlet windowIntegrations = {};\n\n// This block is needed to add compatibility with the integrations packages when used with a CDN\n// tslint:disable: no-unsafe-any\nconst _window = getGlobalObject<Window>();\nif (_window.Sentry && _window.Sentry.Integrations) {\n  windowIntegrations = _window.Sentry.Integrations;\n}\n// tslint:enable: no-unsafe-any\n\nconst INTEGRATIONS = {\n  ...windowIntegrations,\n  ...CoreIntegrations,\n  ...BrowserIntegrations,\n};\n\nexport { INTEGRATIONS as Integrations, Transports };\n","export const setPrototypeOf =\n  Object.setPrototypeOf || ({ __proto__: [] } instanceof Array ? setProtoOf : mixinProperties); // tslint:disable-line:no-unbound-method\n\n/**\n * setPrototypeOf polyfill using __proto__\n */\nfunction setProtoOf<TTarget extends object, TProto>(obj: TTarget, proto: TProto): TTarget & TProto {\n  // @ts-ignore\n  obj.__proto__ = proto;\n  return obj as TTarget & TProto;\n}\n\n/**\n * setPrototypeOf polyfill using mixin\n */\nfunction mixinProperties<TTarget extends object, TProto>(obj: TTarget, proto: TProto): TTarget & TProto {\n  for (const prop in proto) {\n    if (!obj.hasOwnProperty(prop)) {\n      // @ts-ignore\n      obj[prop] = proto[prop];\n    }\n  }\n\n  return obj as TTarget & TProto;\n}\n","import { setPrototypeOf } from './polyfill';\n\n/** An error emitted by Sentry SDKs and related utilities. */\nexport class SentryError extends Error {\n  /** Display name of this error instance. */\n  public name: string;\n\n  public constructor(public message: string) {\n    super(message);\n\n    // tslint:disable:no-unsafe-any\n    this.name = new.target.prototype.constructor.name;\n    setPrototypeOf(this, new.target.prototype);\n  }\n}\n","import { DsnComponents, DsnLike, DsnProtocol } from '@sentry/types';\nimport { SentryError } from '@sentry/utils';\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+))?@)([\\w\\.-]+)(?::(\\d+))?\\/(.+)/;\n\n/** Error message */\nconst ERROR_MESSAGE = 'Invalid Dsn';\n\n/** The Sentry Dsn, identifying a Sentry instance and project. */\nexport class Dsn implements DsnComponents {\n  /** Protocol used to connect to Sentry. */\n  public protocol!: DsnProtocol;\n  /** Public authorization key. */\n  public user!: string;\n  /** private _authorization key (deprecated, optional). */\n  public pass!: string;\n  /** Hostname of the Sentry instance. */\n  public host!: string;\n  /** Port of the Sentry instance. */\n  public port!: string;\n  /** Path */\n  public path!: string;\n  /** Project ID */\n  public projectId!: string;\n\n  /** Creates a new Dsn component */\n  public constructor(from: DsnLike) {\n    if (typeof from === 'string') {\n      this._fromString(from);\n    } else {\n      this._fromComponents(from);\n    }\n\n    this._validate();\n  }\n\n  /**\n   * Renders the string representation of this Dsn.\n   *\n   * By default, this will render the public representation without the password\n   * component. To get the deprecated private _representation, set `withPassword`\n   * to true.\n   *\n   * @param withPassword When set to true, the password will be included.\n   */\n  public toString(withPassword: boolean = false): string {\n    // tslint:disable-next-line:no-this-assignment\n    const { host, path, pass, port, projectId, protocol, user } = this;\n    return (\n      `${protocol}://${user}${withPassword && pass ? `:${pass}` : ''}` +\n      `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n    );\n  }\n\n  /** Parses a string into this Dsn. */\n  private _fromString(str: string): void {\n    const match = DSN_REGEX.exec(str);\n\n    if (!match) {\n      throw new SentryError(ERROR_MESSAGE);\n    }\n\n    const [protocol, user, pass = '', host, port = '', lastPath] = match.slice(1);\n    let path = '';\n    let projectId = lastPath;\n\n    const split = projectId.split('/');\n    if (split.length > 1) {\n      path = split.slice(0, -1).join('/');\n      projectId = split.pop() as string;\n    }\n\n    this._fromComponents({ host, pass, path, projectId, port, protocol: protocol as DsnProtocol, user });\n  }\n\n  /** Maps Dsn components into this instance. */\n  private _fromComponents(components: DsnComponents): void {\n    this.protocol = components.protocol;\n    this.user = components.user;\n    this.pass = components.pass || '';\n    this.host = components.host;\n    this.port = components.port || '';\n    this.path = components.path || '';\n    this.projectId = components.projectId;\n  }\n\n  /** Validates this Dsn and throws on error. */\n  private _validate(): void {\n    ['protocol', 'user', 'host', 'projectId'].forEach(component => {\n      if (!this[component as keyof DsnComponents]) {\n        throw new SentryError(ERROR_MESSAGE);\n      }\n    });\n\n    if (this.protocol !== 'http' && this.protocol !== 'https') {\n      throw new SentryError(ERROR_MESSAGE);\n    }\n\n    if (this.port && isNaN(parseInt(this.port, 10))) {\n      throw new SentryError(ERROR_MESSAGE);\n    }\n  }\n}\n","import { DsnLike } from '@sentry/types';\nimport { urlEncode } from '@sentry/utils';\n\nimport { Dsn } from './dsn';\n\nconst SENTRY_API_VERSION = '7';\n\n/** Helper class to provide urls to different Sentry endpoints. */\nexport class API {\n  /** The internally used Dsn object. */\n  private readonly _dsnObject: Dsn;\n  /** Create a new instance of API */\n  public constructor(public dsn: DsnLike) {\n    this._dsnObject = new Dsn(dsn);\n  }\n\n  /** Returns the Dsn object. */\n  public getDsn(): Dsn {\n    return this._dsnObject;\n  }\n\n  /** Returns a string with auth headers in the url to the store endpoint. */\n  public getStoreEndpoint(): string {\n    return `${this._getBaseUrl()}${this.getStoreEndpointPath()}`;\n  }\n\n  /** Returns the store endpoint with auth added in url encoded. */\n  public getStoreEndpointWithUrlEncodedAuth(): string {\n    const dsn = this._dsnObject;\n    const auth = {\n      sentry_key: dsn.user,\n      sentry_version: SENTRY_API_VERSION,\n    };\n    // Auth is intentionally sent as part of query string (NOT as custom HTTP header)\n    // to avoid preflight CORS requests\n    return `${this.getStoreEndpoint()}?${urlEncode(auth)}`;\n  }\n\n  /** Returns the base path of the url including the port. */\n  private _getBaseUrl(): string {\n    const dsn = this._dsnObject;\n    const protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n    const port = dsn.port ? `:${dsn.port}` : '';\n    return `${protocol}//${dsn.host}${port}`;\n  }\n\n  /** Returns only the path component for the store endpoint. */\n  public getStoreEndpointPath(): string {\n    const dsn = this._dsnObject;\n    return `${dsn.path ? `/${dsn.path}` : ''}/api/${dsn.projectId}/store/`;\n  }\n\n  /** Returns an object that can be used in request headers. */\n  public getRequestHeaders(clientName: string, clientVersion: string): { [key: string]: string } {\n    const dsn = this._dsnObject;\n    const header = [`Sentry sentry_version=${SENTRY_API_VERSION}`];\n    header.push(`sentry_timestamp=${new Date().getTime()}`);\n    header.push(`sentry_client=${clientName}/${clientVersion}`);\n    header.push(`sentry_key=${dsn.user}`);\n    if (dsn.pass) {\n      header.push(`sentry_secret=${dsn.pass}`);\n    }\n    return {\n      'Content-Type': 'application/json',\n      'X-Sentry-Auth': header.join(', '),\n    };\n  }\n\n  /** Returns the url to the report dialog endpoint. */\n  public getReportDialogEndpoint(\n    dialogOptions: {\n      [key: string]: any;\n      user?: { name?: string; email?: string };\n    } = {},\n  ): string {\n    const dsn = this._dsnObject;\n    const endpoint = `${this._getBaseUrl()}${dsn.path ? `/${dsn.path}` : ''}/api/embed/error-page/`;\n\n    const encodedOptions = [];\n    encodedOptions.push(`dsn=${dsn.toString()}`);\n    for (const key in dialogOptions) {\n      if (key === 'user') {\n        if (!dialogOptions.user) {\n          continue;\n        }\n        if (dialogOptions.user.name) {\n          encodedOptions.push(`name=${encodeURIComponent(dialogOptions.user.name)}`);\n        }\n        if (dialogOptions.user.email) {\n          encodedOptions.push(`email=${encodeURIComponent(dialogOptions.user.email)}`);\n        }\n      } else {\n        encodedOptions.push(`${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] as string)}`);\n      }\n    }\n    if (encodedOptions.length) {\n      return `${endpoint}?${encodedOptions.join('&')}`;\n    }\n\n    return endpoint;\n  }\n}\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { Integration, Options } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nexport const installedIntegrations: string[] = [];\n\n/** Map of integrations assigned to a client */\nexport interface IntegrationIndex {\n  [key: string]: Integration;\n}\n\n/** Gets integration to install */\nexport function getIntegrationsToSetup(options: Options): Integration[] {\n  const defaultIntegrations = (options.defaultIntegrations && [...options.defaultIntegrations]) || [];\n  const userIntegrations = options.integrations;\n  let integrations: Integration[] = [];\n  if (Array.isArray(userIntegrations)) {\n    const userIntegrationsNames = userIntegrations.map(i => i.name);\n    const pickedIntegrationsNames: string[] = [];\n\n    // Leave only unique default integrations, that were not overridden with provided user integrations\n    defaultIntegrations.forEach(defaultIntegration => {\n      if (\n        userIntegrationsNames.indexOf(defaultIntegration.name) === -1 &&\n        pickedIntegrationsNames.indexOf(defaultIntegration.name) === -1\n      ) {\n        integrations.push(defaultIntegration);\n        pickedIntegrationsNames.push(defaultIntegration.name);\n      }\n    });\n\n    // Don't add same user integration twice\n    userIntegrations.forEach(userIntegration => {\n      if (pickedIntegrationsNames.indexOf(userIntegration.name) === -1) {\n        integrations.push(userIntegration);\n        pickedIntegrationsNames.push(userIntegration.name);\n      }\n    });\n  } else if (typeof userIntegrations === 'function') {\n    integrations = userIntegrations(defaultIntegrations);\n    integrations = Array.isArray(integrations) ? integrations : [integrations];\n  } else {\n    integrations = [...defaultIntegrations];\n  }\n\n  // Make sure that if present, `Debug` integration will always run last\n  const integrationsNames = integrations.map(i => i.name);\n  const alwaysLastToRun = 'Debug';\n  if (integrationsNames.indexOf(alwaysLastToRun) !== -1) {\n    integrations.push(...integrations.splice(integrationsNames.indexOf(alwaysLastToRun), 1));\n  }\n\n  return integrations;\n}\n\n/** Setup given integration */\nexport function setupIntegration(integration: Integration): void {\n  if (installedIntegrations.indexOf(integration.name) !== -1) {\n    return;\n  }\n  integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n  installedIntegrations.push(integration.name);\n  logger.log(`Integration installed: ${integration.name}`);\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nexport function setupIntegrations<O extends Options>(options: O): IntegrationIndex {\n  const integrations: IntegrationIndex = {};\n  getIntegrationsToSetup(options).forEach(integration => {\n    integrations[integration.name] = integration;\n    setupIntegration(integration);\n  });\n  return integrations;\n}\n","import { Scope } from '@sentry/hub';\nimport { Client, Event, EventHint, Integration, IntegrationClass, Options, SdkInfo, Severity } from '@sentry/types';\nimport { isPrimitive, isThenable, logger, SyncPromise, truncate, uuid4 } from '@sentry/utils';\n\nimport { Backend, BackendClass } from './basebackend';\nimport { Dsn } from './dsn';\nimport { IntegrationIndex, setupIntegrations } from './integration';\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding backend constructor and options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}. Also, the Backend instance is available via\n * {@link Client.getBackend}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event via the backend, it is passed through\n * {@link BaseClient.prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeBackend, NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(NodeBackend, options);\n *   }\n *\n *   // ...\n * }\n */\nexport abstract class BaseClient<B extends Backend, O extends Options> implements Client<O> {\n  /**\n   * The backend used to physically interact in the enviornment. Usually, this\n   * will correspond to the client. When composing SDKs, however, the Backend\n   * from the root SDK will be used.\n   */\n  protected readonly _backend: B;\n\n  /** Options passed to the SDK. */\n  protected readonly _options: O;\n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n  protected readonly _dsn?: Dsn;\n\n  /** Array of used integrations. */\n  protected readonly _integrations: IntegrationIndex = {};\n\n  /** Is the client still processing a call? */\n  protected _processing: boolean = false;\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param backendClass A constructor function to create the backend.\n   * @param options Options for the client.\n   */\n  protected constructor(backendClass: BackendClass<B, O>, options: O) {\n    this._backend = new backendClass(options);\n    this._options = options;\n\n    if (options.dsn) {\n      this._dsn = new Dsn(options.dsn);\n    }\n\n    if (this._isEnabled()) {\n      this._integrations = setupIntegrations(this._options);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureException(exception: any, hint?: EventHint, scope?: Scope): string | undefined {\n    let eventId: string | undefined = hint && hint.event_id;\n    this._processing = true;\n\n    this._getBackend()\n      .eventFromException(exception, hint)\n      .then(event => this._processEvent(event, hint, scope))\n      .then(finalEvent => {\n        // We need to check for finalEvent in case beforeSend returned null\n        eventId = finalEvent && finalEvent.event_id;\n        this._processing = false;\n      })\n      .then(null, reason => {\n        logger.error(reason);\n        this._processing = false;\n      });\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureMessage(message: string, level?: Severity, hint?: EventHint, scope?: Scope): string | undefined {\n    let eventId: string | undefined = hint && hint.event_id;\n\n    this._processing = true;\n\n    const promisedEvent = isPrimitive(message)\n      ? this._getBackend().eventFromMessage(`${message}`, level, hint)\n      : this._getBackend().eventFromException(message, hint);\n\n    promisedEvent\n      .then(event => this._processEvent(event, hint, scope))\n      .then(finalEvent => {\n        // We need to check for finalEvent in case beforeSend returned null\n        eventId = finalEvent && finalEvent.event_id;\n        this._processing = false;\n      })\n      .then(null, reason => {\n        logger.error(reason);\n        this._processing = false;\n      });\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureEvent(event: Event, hint?: EventHint, scope?: Scope): string | undefined {\n    let eventId: string | undefined = hint && hint.event_id;\n    this._processing = true;\n\n    this._processEvent(event, hint, scope)\n      .then(finalEvent => {\n        // We need to check for finalEvent in case beforeSend returned null\n        eventId = finalEvent && finalEvent.event_id;\n        this._processing = false;\n      })\n      .then(null, reason => {\n        logger.error(reason);\n        this._processing = false;\n      });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getDsn(): Dsn | undefined {\n    return this._dsn;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getOptions(): O {\n    return this._options;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public flush(timeout?: number): PromiseLike<boolean> {\n    return this._isClientProcessing(timeout).then(status => {\n      clearInterval(status.interval);\n      return this._getBackend()\n        .getTransport()\n        .close(timeout)\n        .then(transportFlushed => status.ready && transportFlushed);\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public close(timeout?: number): PromiseLike<boolean> {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      return result;\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getIntegrations(): IntegrationIndex {\n    return this._integrations || {};\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null {\n    try {\n      return (this._integrations[integration.id] as T) || null;\n    } catch (_oO) {\n      logger.warn(`Cannot retrieve integration ${integration.id} from the current Client`);\n      return null;\n    }\n  }\n\n  /** Waits for the client to be done with processing. */\n  protected _isClientProcessing(timeout?: number): PromiseLike<{ ready: boolean; interval: number }> {\n    return new SyncPromise<{ ready: boolean; interval: number }>(resolve => {\n      let ticked: number = 0;\n      const tick: number = 1;\n\n      let interval = 0;\n      clearInterval(interval);\n\n      interval = (setInterval(() => {\n        if (!this._processing) {\n          resolve({\n            interval,\n            ready: true,\n          });\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            resolve({\n              interval,\n              ready: false,\n            });\n          }\n        }\n      }, tick) as unknown) as number;\n    });\n  }\n\n  /** Returns the current backend. */\n  protected _getBackend(): B {\n    return this._backend;\n  }\n\n  /** Determines whether this SDK is enabled and a valid Dsn is present. */\n  protected _isEnabled(): boolean {\n    return this.getOptions().enabled !== false && this._dsn !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional informartion about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n  protected _prepareEvent(event: Event, scope?: Scope, hint?: EventHint): PromiseLike<Event | null> {\n    const { environment, release, dist, maxValueLength = 250 } = this.getOptions();\n\n    const prepared: Event = { ...event };\n    if (prepared.environment === undefined && environment !== undefined) {\n      prepared.environment = environment;\n    }\n    if (prepared.release === undefined && release !== undefined) {\n      prepared.release = release;\n    }\n\n    if (prepared.dist === undefined && dist !== undefined) {\n      prepared.dist = dist;\n    }\n\n    if (prepared.message) {\n      prepared.message = truncate(prepared.message, maxValueLength);\n    }\n\n    const exception = prepared.exception && prepared.exception.values && prepared.exception.values[0];\n    if (exception && exception.value) {\n      exception.value = truncate(exception.value, maxValueLength);\n    }\n\n    const request = prepared.request;\n    if (request && request.url) {\n      request.url = truncate(request.url, maxValueLength);\n    }\n\n    if (prepared.event_id === undefined) {\n      prepared.event_id = uuid4();\n    }\n\n    this._addIntegrations(prepared.sdk);\n\n    // We prepare the result here with a resolved Event.\n    let result = SyncPromise.resolve<Event | null>(prepared);\n\n    // This should be the last thing called, since we want that\n    // {@link Hub.addEventProcessor} gets the finished prepared event.\n    if (scope) {\n      // In case we have a hub we reassign it.\n      result = scope.applyToEvent(prepared, hint);\n    }\n\n    return result;\n  }\n\n  /**\n   * This function adds all used integrations to the SDK info in the event.\n   * @param sdkInfo The sdkInfo of the event that will be filled with all integrations.\n   */\n  protected _addIntegrations(sdkInfo?: SdkInfo): void {\n    const integrationsArray = Object.keys(this._integrations);\n    if (sdkInfo && integrationsArray.length > 0) {\n      sdkInfo.integrations = integrationsArray;\n    }\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional informartion about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n  protected _processEvent(event: Event, hint?: EventHint, scope?: Scope): PromiseLike<Event> {\n    const { beforeSend, sampleRate } = this.getOptions();\n\n    if (!this._isEnabled()) {\n      return SyncPromise.reject('SDK not enabled, will not send event.');\n    }\n\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    if (typeof sampleRate === 'number' && Math.random() > sampleRate) {\n      return SyncPromise.reject('This event has been sampled, will not send event.');\n    }\n\n    return new SyncPromise((resolve, reject) => {\n      this._prepareEvent(event, scope, hint)\n        .then(prepared => {\n          if (prepared === null) {\n            reject('An event processor returned null, will not send event.');\n            return;\n          }\n\n          let finalEvent: Event | null = prepared;\n\n          try {\n            const isInternalException = hint && hint.data && (hint.data as { [key: string]: any }).__sentry__ === true;\n            if (isInternalException || !beforeSend) {\n              this._getBackend().sendEvent(finalEvent);\n              resolve(finalEvent);\n              return;\n            }\n\n            const beforeSendResult = beforeSend(prepared, hint);\n            // tslint:disable-next-line:strict-type-predicates\n            if (typeof beforeSendResult === 'undefined') {\n              logger.error('`beforeSend` method has to return `null` or a valid event.');\n            } else if (isThenable(beforeSendResult)) {\n              this._handleAsyncBeforeSend(beforeSendResult as PromiseLike<Event | null>, resolve, reject);\n            } else {\n              finalEvent = beforeSendResult as Event | null;\n\n              if (finalEvent === null) {\n                logger.log('`beforeSend` returned `null`, will not send event.');\n                resolve(null);\n                return;\n              }\n\n              // From here on we are really async\n              this._getBackend().sendEvent(finalEvent);\n              resolve(finalEvent);\n            }\n          } catch (exception) {\n            this.captureException(exception, {\n              data: {\n                __sentry__: true,\n              },\n              originalException: exception as Error,\n            });\n            reject('`beforeSend` threw an error, will not send event.');\n          }\n        })\n        .then(null, () => {\n          reject('`beforeSend` threw an error, will not send event.');\n        });\n    });\n  }\n\n  /**\n   * Resolves before send Promise and calls resolve/reject on parent SyncPromise.\n   */\n  private _handleAsyncBeforeSend(\n    beforeSend: PromiseLike<Event | null>,\n    resolve: (event: Event) => void,\n    reject: (reason: string) => void,\n  ): void {\n    beforeSend\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          reject('`beforeSend` returned `null`, will not send event.');\n          return;\n        }\n        // From here on we are really async\n        this._getBackend().sendEvent(processedEvent);\n        resolve(processedEvent);\n      })\n      .then(null, e => {\n        reject(`beforeSend rejected with ${e}`);\n      });\n  }\n}\n","import { Event, Response, Status, Transport } from '@sentry/types';\nimport { SyncPromise } from '@sentry/utils';\n\n/** Noop transport */\nexport class NoopTransport implements Transport {\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(_: Event): PromiseLike<Response> {\n    return SyncPromise.resolve({\n      reason: `NoopTransport: Event has been skipped because no Dsn is configured.`,\n      status: Status.Skipped,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public close(_?: number): PromiseLike<boolean> {\n    return SyncPromise.resolve(true);\n  }\n}\n","import { Event, EventHint, Options, Severity, Transport } from '@sentry/types';\nimport { logger, SentryError } from '@sentry/utils';\n\nimport { NoopTransport } from './transports/noop';\n\n/**\n * Internal platform-dependent Sentry SDK Backend.\n *\n * While {@link Client} contains business logic specific to an SDK, the\n * Backend offers platform specific implementations for low-level operations.\n * These are persisting and loading information, sending events, and hooking\n * into the environment.\n *\n * Backends receive a handle to the Client in their constructor. When a\n * Backend automatically generates events, it must pass them to\n * the Client for validation and processing first.\n *\n * Usually, the Client will be of corresponding type, e.g. NodeBackend\n * receives NodeClient. However, higher-level SDKs can choose to instanciate\n * multiple Backends and delegate tasks between them. In this case, an event\n * generated by one backend might very well be sent by another one.\n *\n * The client also provides access to options via {@link Client.getOptions}.\n * @hidden\n */\nexport interface Backend {\n  /** Creates a {@link Event} from an exception. */\n  eventFromException(exception: any, hint?: EventHint): PromiseLike<Event>;\n\n  /** Creates a {@link Event} from a plain message. */\n  eventFromMessage(message: string, level?: Severity, hint?: EventHint): PromiseLike<Event>;\n\n  /** Submits the event to Sentry */\n  sendEvent(event: Event): void;\n\n  /**\n   * Returns the transport that is used by the backend.\n   * Please note that the transport gets lazy initialized so it will only be there once the first event has been sent.\n   *\n   * @returns The transport.\n   */\n  getTransport(): Transport;\n}\n\n/**\n * A class object that can instanciate Backend objects.\n * @hidden\n */\nexport type BackendClass<B extends Backend, O extends Options> = new (options: O) => B;\n\n/**\n * This is the base implemention of a Backend.\n * @hidden\n */\nexport abstract class BaseBackend<O extends Options> implements Backend {\n  /** Options passed to the SDK. */\n  protected readonly _options: O;\n\n  /** Cached transport used internally. */\n  protected _transport: Transport;\n\n  /** Creates a new backend instance. */\n  public constructor(options: O) {\n    this._options = options;\n    if (!this._options.dsn) {\n      logger.warn('No DSN provided, backend will not do anything.');\n    }\n    this._transport = this._setupTransport();\n  }\n\n  /**\n   * Sets up the transport so it can be used later to send requests.\n   */\n  protected _setupTransport(): Transport {\n    return new NoopTransport();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromException(_exception: any, _hint?: EventHint): PromiseLike<Event> {\n    throw new SentryError('Backend has to implement `eventFromException` method');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromMessage(_message: string, _level?: Severity, _hint?: EventHint): PromiseLike<Event> {\n    throw new SentryError('Backend has to implement `eventFromMessage` method');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(event: Event): void {\n    this._transport.sendEvent(event).then(null, reason => {\n      logger.error(`Error while sending event: ${reason}`);\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getTransport(): Transport {\n    return this._transport;\n  }\n}\n","import { logger } from './logger';\nimport { getGlobalObject } from './misc';\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsErrorEvent(): boolean {\n  try {\n    // tslint:disable:no-unused-expression\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMError(): boolean {\n  try {\n    // It really needs 1 argument, not 0.\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-ignore\n    // tslint:disable:no-unused-expression\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMException(): boolean {\n  try {\n    // tslint:disable:no-unused-expression\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsFetch(): boolean {\n  if (!('fetch' in getGlobalObject<Window>())) {\n    return false;\n  }\n\n  try {\n    // tslint:disable-next-line:no-unused-expression\n    new Headers();\n    // tslint:disable-next-line:no-unused-expression\n    new Request('');\n    // tslint:disable-next-line:no-unused-expression\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nexport function supportsNativeFetch(): boolean {\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  const isNativeFunc = (func: Function) => func.toString().indexOf('native') !== -1;\n  const global = getGlobalObject<Window>();\n  let result = null;\n  const doc = global.document;\n  if (doc) {\n    const sandbox = doc.createElement('iframe');\n    sandbox.hidden = true;\n    try {\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // tslint:disable-next-line no-unbound-method\n        result = isNativeFunc(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  if (result === null) {\n    // tslint:disable-next-line no-unbound-method\n    result = isNativeFunc(global.fetch);\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReportingObserver(): boolean {\n  // tslint:disable-next-line: no-unsafe-any\n  return 'ReportingObserver' in getGlobalObject();\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReferrerPolicy(): boolean {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n  // https://caniuse.com/#feat=referrer-policy\n  // It doesn't. And it throw exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    // tslint:disable:no-unused-expression\n    new Request('_', {\n      referrerPolicy: 'origin' as ReferrerPolicy,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsHistory(): boolean {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  const global = getGlobalObject<Window>();\n  const chrome = (global as any).chrome;\n  // tslint:disable-next-line:no-unsafe-any\n  const isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n  const hasHistoryApi = 'history' in global && !!global.history.pushState && !!global.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n","// tslint:disable:object-literal-sort-keys\n\n/**\n * This was originally forked from https://github.com/occ/TraceKit, but has since been\n * largely modified and is now maintained as part of Sentry JS SDK.\n */\n\n/**\n * An object representing a single stack frame.\n * {Object} StackFrame\n * {string} url The JavaScript or HTML file URL.\n * {string} func The function name, or empty for anonymous functions (if guessing did not work).\n * {string[]?} args The arguments passed to the function, if known.\n * {number=} line The line number, if known.\n * {number=} column The column number, if known.\n * {string[]} context An array of source code lines; the middle element corresponds to the correct line#.\n */\nexport interface StackFrame {\n  url: string;\n  func: string;\n  args: string[];\n  line: number | null;\n  column: number | null;\n}\n\n/**\n * An object representing a JavaScript stack trace.\n * {Object} StackTrace\n * {string} name The name of the thrown exception.\n * {string} message The exception error message.\n * {TraceKit.StackFrame[]} stack An array of stack frames.\n */\nexport interface StackTrace {\n  name: string;\n  message: string;\n  mechanism?: string;\n  stack: StackFrame[];\n  failed?: boolean;\n}\n\n// global reference to slice\nconst UNKNOWN_FUNCTION = '?';\n\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\nconst chrome = /^\\s*at (?:(.*?) ?\\()?((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|[-a-z]+:|\\/).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nconst gecko = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:file|https?|blob|chrome|webpack|resource|moz-extension).*?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js))(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nconst winjs = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\nconst geckoEval = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\nconst chromeEval = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\n/** JSDoc */\nexport function computeStackTrace(ex: any): StackTrace {\n  // tslint:disable:no-unsafe-any\n\n  let stack = null;\n  const popSize: number = ex && ex.framesToPop;\n\n  try {\n    // This must be tried first because Opera 10 *destroys*\n    // its stacktrace property if you try to access the stack\n    // property first!!\n    stack = computeStackTraceFromStacktraceProp(ex);\n    if (stack) {\n      return popFrames(stack, popSize);\n    }\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    stack = computeStackTraceFromStackProp(ex);\n    if (stack) {\n      return popFrames(stack, popSize);\n    }\n  } catch (e) {\n    // no-empty\n  }\n\n  return {\n    message: extractMessage(ex),\n    name: ex && ex.name,\n    stack: [],\n    failed: true,\n  };\n}\n\n/** JSDoc */\n// tslint:disable-next-line:cyclomatic-complexity\nfunction computeStackTraceFromStackProp(ex: any): StackTrace | null {\n  // tslint:disable:no-conditional-assignment\n  if (!ex || !ex.stack) {\n    return null;\n  }\n\n  const stack = [];\n  const lines = ex.stack.split('\\n');\n  let isEval;\n  let submatch;\n  let parts;\n  let element;\n\n  for (let i = 0; i < lines.length; ++i) {\n    if ((parts = chrome.exec(lines[i]))) {\n      const isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n      isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n      if (isEval && (submatch = chromeEval.exec(parts[2]))) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = submatch[1]; // url\n        parts[3] = submatch[2]; // line\n        parts[4] = submatch[3]; // column\n      }\n      element = {\n        url: parts[2],\n        func: parts[1] || UNKNOWN_FUNCTION,\n        args: isNative ? [parts[2]] : [],\n        line: parts[3] ? +parts[3] : null,\n        column: parts[4] ? +parts[4] : null,\n      };\n    } else if ((parts = winjs.exec(lines[i]))) {\n      element = {\n        url: parts[2],\n        func: parts[1] || UNKNOWN_FUNCTION,\n        args: [],\n        line: +parts[3],\n        column: parts[4] ? +parts[4] : null,\n      };\n    } else if ((parts = gecko.exec(lines[i]))) {\n      isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n      if (isEval && (submatch = geckoEval.exec(parts[3]))) {\n        // throw out eval line/column and use top-most line number\n        parts[1] = parts[1] || `eval`;\n        parts[3] = submatch[1];\n        parts[4] = submatch[2];\n        parts[5] = ''; // no column when eval\n      } else if (i === 0 && !parts[5] && ex.columnNumber !== void 0) {\n        // FireFox uses this awesome columnNumber property for its top frame\n        // Also note, Firefox's column number is 0-based and everything else expects 1-based,\n        // so adding 1\n        // NOTE: this hack doesn't work if top-most frame is eval\n        stack[0].column = (ex.columnNumber as number) + 1;\n      }\n      element = {\n        url: parts[3],\n        func: parts[1] || UNKNOWN_FUNCTION,\n        args: parts[2] ? parts[2].split(',') : [],\n        line: parts[4] ? +parts[4] : null,\n        column: parts[5] ? +parts[5] : null,\n      };\n    } else {\n      continue;\n    }\n\n    if (!element.func && element.line) {\n      element.func = UNKNOWN_FUNCTION;\n    }\n\n    stack.push(element);\n  }\n\n  if (!stack.length) {\n    return null;\n  }\n\n  return {\n    message: extractMessage(ex),\n    name: ex.name,\n    stack,\n  };\n}\n\n/** JSDoc */\nfunction computeStackTraceFromStacktraceProp(ex: any): StackTrace | null {\n  if (!ex || !ex.stacktrace) {\n    return null;\n  }\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  const stacktrace = ex.stacktrace;\n  const opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n  const opera11Regex = / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^\\)]+))\\((.*)\\))? in (.*):\\s*$/i;\n  const lines = stacktrace.split('\\n');\n  const stack = [];\n  let parts;\n\n  for (let line = 0; line < lines.length; line += 2) {\n    // tslint:disable:no-conditional-assignment\n    let element = null;\n    if ((parts = opera10Regex.exec(lines[line]))) {\n      element = {\n        url: parts[2],\n        func: parts[3],\n        args: [],\n        line: +parts[1],\n        column: null,\n      };\n    } else if ((parts = opera11Regex.exec(lines[line]))) {\n      element = {\n        url: parts[6],\n        func: parts[3] || parts[4],\n        args: parts[5] ? parts[5].split(',') : [],\n        line: +parts[1],\n        column: +parts[2],\n      };\n    }\n\n    if (element) {\n      if (!element.func && element.line) {\n        element.func = UNKNOWN_FUNCTION;\n      }\n      stack.push(element);\n    }\n  }\n\n  if (!stack.length) {\n    return null;\n  }\n\n  return {\n    message: extractMessage(ex),\n    name: ex.name,\n    stack,\n  };\n}\n\n/** Remove N number of frames from the stack */\nfunction popFrames(stacktrace: StackTrace, popSize: number): StackTrace {\n  try {\n    return {\n      ...stacktrace,\n      stack: stacktrace.stack.slice(popSize),\n    };\n  } catch (e) {\n    return stacktrace;\n  }\n}\n\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\nfunction extractMessage(ex: any): string {\n  const message = ex && ex.message;\n  if (!message) {\n    return 'No error message';\n  }\n  if (message.error && typeof message.error.message === 'string') {\n    return message.error.message;\n  }\n  return message;\n}\n","import { Event, Exception, StackFrame } from '@sentry/types';\nimport { extractExceptionKeysForMessage, isEvent, normalizeToSize } from '@sentry/utils';\n\nimport { computeStackTrace, StackFrame as TraceKitStackFrame, StackTrace as TraceKitStackTrace } from './tracekit';\n\nconst STACKTRACE_LIMIT = 50;\n\n/**\n * This function creates an exception from an TraceKitStackTrace\n * @param stacktrace TraceKitStackTrace that will be converted to an exception\n * @hidden\n */\nexport function exceptionFromStacktrace(stacktrace: TraceKitStackTrace): Exception {\n  const frames = prepareFramesForEvent(stacktrace.stack);\n\n  const exception: Exception = {\n    type: stacktrace.name,\n    value: stacktrace.message,\n  };\n\n  if (frames && frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  // tslint:disable-next-line:strict-type-predicates\n  if (exception.type === undefined && exception.value === '') {\n    exception.value = 'Unrecoverable error caught';\n  }\n\n  return exception;\n}\n\n/**\n * @hidden\n */\nexport function eventFromPlainObject(exception: {}, syntheticException?: Error, rejection?: boolean): Event {\n  const event: Event = {\n    exception: {\n      values: [\n        {\n          type: isEvent(exception) ? exception.constructor.name : rejection ? 'UnhandledRejection' : 'Error',\n          value: `Non-Error ${\n            rejection ? 'promise rejection' : 'exception'\n          } captured with keys: ${extractExceptionKeysForMessage(exception)}`,\n        },\n      ],\n    },\n    extra: {\n      __serialized__: normalizeToSize(exception),\n    },\n  };\n\n  if (syntheticException) {\n    const stacktrace = computeStackTrace(syntheticException);\n    const frames = prepareFramesForEvent(stacktrace.stack);\n    event.stacktrace = {\n      frames,\n    };\n  }\n\n  return event;\n}\n\n/**\n * @hidden\n */\nexport function eventFromStacktrace(stacktrace: TraceKitStackTrace): Event {\n  const exception = exceptionFromStacktrace(stacktrace);\n\n  return {\n    exception: {\n      values: [exception],\n    },\n  };\n}\n\n/**\n * @hidden\n */\nexport function prepareFramesForEvent(stack: TraceKitStackFrame[]): StackFrame[] {\n  if (!stack || !stack.length) {\n    return [];\n  }\n\n  let localStack = stack;\n\n  const firstFrameFunction = localStack[0].func || '';\n  const lastFrameFunction = localStack[localStack.length - 1].func || '';\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (firstFrameFunction.indexOf('captureMessage') !== -1 || firstFrameFunction.indexOf('captureException') !== -1) {\n    localStack = localStack.slice(1);\n  }\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (lastFrameFunction.indexOf('sentryWrapped') !== -1) {\n    localStack = localStack.slice(0, -1);\n  }\n\n  // The frame where the crash happened, should be the last entry in the array\n  return localStack\n    .map(\n      (frame: TraceKitStackFrame): StackFrame => ({\n        colno: frame.column === null ? undefined : frame.column,\n        filename: frame.url || localStack[0].url,\n        function: frame.func || '?',\n        in_app: true,\n        lineno: frame.line === null ? undefined : frame.line,\n      }),\n    )\n    .slice(0, STACKTRACE_LIMIT)\n    .reverse();\n}\n","import { Event } from '@sentry/types';\nimport {\n  addExceptionMechanism,\n  addExceptionTypeValue,\n  isDOMError,\n  isDOMException,\n  isError,\n  isErrorEvent,\n  isEvent,\n  isPlainObject,\n} from '@sentry/utils';\n\nimport { eventFromPlainObject, eventFromStacktrace, prepareFramesForEvent } from './parsers';\nimport { computeStackTrace } from './tracekit';\n\n/** JSDoc */\nexport function eventFromUnknownInput(\n  exception: unknown,\n  syntheticException?: Error,\n  options: {\n    rejection?: boolean;\n    attachStacktrace?: boolean;\n  } = {},\n): Event {\n  let event: Event;\n\n  if (isErrorEvent(exception as ErrorEvent) && (exception as ErrorEvent).error) {\n    // If it is an ErrorEvent with `error` property, extract it to get actual Error\n    const errorEvent = exception as ErrorEvent;\n    exception = errorEvent.error; // tslint:disable-line:no-parameter-reassignment\n    event = eventFromStacktrace(computeStackTrace(exception as Error));\n    return event;\n  }\n  if (isDOMError(exception as DOMError) || isDOMException(exception as DOMException)) {\n    // If it is a DOMError or DOMException (which are legacy APIs, but still supported in some browsers)\n    // then we just extract the name and message, as they don't provide anything else\n    // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n    // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n    const domException = exception as DOMException;\n    const name = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n    const message = domException.message ? `${name}: ${domException.message}` : name;\n\n    event = eventFromString(message, syntheticException, options);\n    addExceptionTypeValue(event, message);\n    return event;\n  }\n  if (isError(exception as Error)) {\n    // we have a real Error object, do nothing\n    event = eventFromStacktrace(computeStackTrace(exception as Error));\n    return event;\n  }\n  if (isPlainObject(exception) || isEvent(exception)) {\n    // If it is plain Object or Event, serialize it manually and extract options\n    // This will allow us to group events based on top-level keys\n    // which is much better than creating new group when any key/value change\n    const objectException = exception as {};\n    event = eventFromPlainObject(objectException, syntheticException, options.rejection);\n    addExceptionMechanism(event, {\n      synthetic: true,\n    });\n    return event;\n  }\n\n  // If none of previous checks were valid, then it means that it's not:\n  // - an instance of DOMError\n  // - an instance of DOMException\n  // - an instance of Event\n  // - an instance of Error\n  // - a valid ErrorEvent (one with an error property)\n  // - a plain Object\n  //\n  // So bail out and capture it as a simple message:\n  event = eventFromString(exception as string, syntheticException, options);\n  addExceptionTypeValue(event, `${exception}`, undefined);\n  addExceptionMechanism(event, {\n    synthetic: true,\n  });\n\n  return event;\n}\n\n// this._options.attachStacktrace\n/** JSDoc */\nexport function eventFromString(\n  input: string,\n  syntheticException?: Error,\n  options: {\n    attachStacktrace?: boolean;\n  } = {},\n): Event {\n  const event: Event = {\n    message: input,\n  };\n\n  if (options.attachStacktrace && syntheticException) {\n    const stacktrace = computeStackTrace(syntheticException);\n    const frames = prepareFramesForEvent(stacktrace.stack);\n    event.stacktrace = {\n      frames,\n    };\n  }\n\n  return event;\n}\n","import { Integration, WrappedFunction } from '@sentry/types';\n\nlet originalFunctionToString: () => void;\n\n/** Patch toString calls to return proper name for wrapped functions */\nexport class FunctionToString implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public name: string = FunctionToString.id;\n\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'FunctionToString';\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    originalFunctionToString = Function.prototype.toString;\n\n    Function.prototype.toString = function(this: WrappedFunction, ...args: any[]): string {\n      const context = this.__sentry__ ? this.__sentry_original__ : this;\n      // tslint:disable-next-line:no-unsafe-any\n      return originalFunctionToString.apply(context, args);\n    };\n  }\n}\n","import { SentryError } from './error';\nimport { SyncPromise } from './syncpromise';\n\n/** A simple queue that holds promises. */\nexport class PromiseBuffer<T> {\n  public constructor(protected _limit?: number) {}\n\n  /** Internal set of queued Promises */\n  private readonly _buffer: Array<PromiseLike<T>> = [];\n\n  /**\n   * Says if the buffer is ready to take more requests\n   */\n  public isReady(): boolean {\n    return this._limit === undefined || this.length() < this._limit;\n  }\n\n  /**\n   * Add a promise to the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns The original promise.\n   */\n  public add(task: PromiseLike<T>): PromiseLike<T> {\n    if (!this.isReady()) {\n      return SyncPromise.reject(new SentryError('Not adding Promise due to buffer limit reached.'));\n    }\n    if (this._buffer.indexOf(task) === -1) {\n      this._buffer.push(task);\n    }\n    task\n      .then(() => this.remove(task))\n      .then(null, () =>\n        this.remove(task).then(null, () => {\n          // We have to add this catch here otherwise we have an unhandledPromiseRejection\n          // because it's a new Promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Remove a promise to the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  public remove(task: PromiseLike<T>): PromiseLike<T> {\n    const removedTask = this._buffer.splice(this._buffer.indexOf(task), 1)[0];\n    return removedTask;\n  }\n\n  /**\n   * This function returns the number of unresolved promises in the queue.\n   */\n  public length(): number {\n    return this._buffer.length;\n  }\n\n  /**\n   * This will drain the whole queue, returns true if queue is empty or drained.\n   * If timeout is provided and the queue takes longer to drain, the promise still resolves but with false.\n   *\n   * @param timeout Number in ms to wait until it resolves with false.\n   */\n  public drain(timeout?: number): PromiseLike<boolean> {\n    return new SyncPromise<boolean>(resolve => {\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n      SyncPromise.all(this._buffer)\n        .then(() => {\n          clearTimeout(capturedSetTimeout);\n          resolve(true);\n        })\n        .then(null, () => {\n          resolve(true);\n        });\n    });\n  }\n}\n","import { API } from '@sentry/core';\nimport { Event, Response, Transport, TransportOptions } from '@sentry/types';\nimport { PromiseBuffer, SentryError } from '@sentry/utils';\n\n/** Base Transport class implementation */\nexport abstract class BaseTransport implements Transport {\n  /**\n   * @inheritDoc\n   */\n  public url: string;\n\n  /** A simple buffer holding all requests. */\n  protected readonly _buffer: PromiseBuffer<Response> = new PromiseBuffer(30);\n\n  public constructor(public options: TransportOptions) {\n    this.url = new API(this.options.dsn).getStoreEndpointWithUrlEncodedAuth();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(_: Event): PromiseLike<Response> {\n    throw new SentryError('Transport Class has to implement `sendEvent` method');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public close(timeout?: number): PromiseLike<boolean> {\n    return this._buffer.drain(timeout);\n  }\n}\n","import { Event, Response, Status } from '@sentry/types';\nimport { getGlobalObject, logger, parseRetryAfterHeader, supportsReferrerPolicy, SyncPromise } from '@sentry/utils';\n\nimport { BaseTransport } from './base';\n\nconst global = getGlobalObject<Window>();\n\n/** `fetch` based transport */\nexport class FetchTransport extends BaseTransport {\n  /** Locks transport after receiving 429 response */\n  private _disabledUntil: Date = new Date(Date.now());\n\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(event: Event): PromiseLike<Response> {\n    if (new Date(Date.now()) < this._disabledUntil) {\n      return Promise.reject({\n        event,\n        reason: `Transport locked till ${this._disabledUntil} due to too many requests.`,\n        status: 429,\n      });\n    }\n\n    const defaultOptions: RequestInit = {\n      body: JSON.stringify(event),\n      method: 'POST',\n      // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n      // https://caniuse.com/#feat=referrer-policy\n      // It doesn't. And it throw exception instead of ignoring this parameter...\n      // REF: https://github.com/getsentry/raven-js/issues/1233\n      referrerPolicy: (supportsReferrerPolicy() ? 'origin' : '') as ReferrerPolicy,\n    };\n\n    return this._buffer.add(\n      new SyncPromise<Response>((resolve, reject) => {\n        global\n          .fetch(this.url, defaultOptions)\n          .then(response => {\n            const status = Status.fromHttpCode(response.status);\n\n            if (status === Status.Success) {\n              resolve({ status });\n              return;\n            }\n\n            if (status === Status.RateLimit) {\n              const now = Date.now();\n              this._disabledUntil = new Date(now + parseRetryAfterHeader(now, response.headers.get('Retry-After')));\n              logger.warn(`Too many requests, backing off till: ${this._disabledUntil}`);\n            }\n\n            reject(response);\n          })\n          .catch(reject);\n      }),\n    );\n  }\n}\n","import { Event, Response, Status } from '@sentry/types';\nimport { logger, parseRetryAfterHeader, SyncPromise } from '@sentry/utils';\n\nimport { BaseTransport } from './base';\n\n/** `XHR` based transport */\nexport class XHRTransport extends BaseTransport {\n  /** Locks transport after receiving 429 response */\n  private _disabledUntil: Date = new Date(Date.now());\n\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(event: Event): PromiseLike<Response> {\n    if (new Date(Date.now()) < this._disabledUntil) {\n      return Promise.reject({\n        event,\n        reason: `Transport locked till ${this._disabledUntil} due to too many requests.`,\n        status: 429,\n      });\n    }\n\n    return this._buffer.add(\n      new SyncPromise<Response>((resolve, reject) => {\n        const request = new XMLHttpRequest();\n\n        request.onreadystatechange = () => {\n          if (request.readyState !== 4) {\n            return;\n          }\n\n          const status = Status.fromHttpCode(request.status);\n\n          if (status === Status.Success) {\n            resolve({ status });\n            return;\n          }\n\n          if (status === Status.RateLimit) {\n            const now = Date.now();\n            this._disabledUntil = new Date(now + parseRetryAfterHeader(now, request.getResponseHeader('Retry-After')));\n            logger.warn(`Too many requests, backing off till: ${this._disabledUntil}`);\n          }\n\n          reject(request);\n        };\n\n        request.open('POST', this.url);\n        request.send(JSON.stringify(event));\n      }),\n    );\n  }\n}\n","import { BaseBackend } from '@sentry/core';\nimport { Event, EventHint, Options, Severity, Transport } from '@sentry/types';\nimport { addExceptionMechanism, supportsFetch, SyncPromise } from '@sentry/utils';\n\nimport { eventFromString, eventFromUnknownInput } from './eventbuilder';\nimport { FetchTransport, XHRTransport } from './transports';\n\n/**\n * Configuration options for the Sentry Browser SDK.\n * @see BrowserClient for more information.\n */\nexport interface BrowserOptions extends Options {\n  /**\n   * A pattern for error URLs which should not be sent to Sentry.\n   * To whitelist certain errors instead, use {@link Options.whitelistUrls}.\n   * By default, all errors will be sent.\n   */\n  blacklistUrls?: Array<string | RegExp>;\n\n  /**\n   * A pattern for error URLs which should exclusively be sent to Sentry.\n   * This is the opposite of {@link Options.blacklistUrls}.\n   * By default, all errors will be sent.\n   */\n  whitelistUrls?: Array<string | RegExp>;\n}\n\n/**\n * The Sentry Browser SDK Backend.\n * @hidden\n */\nexport class BrowserBackend extends BaseBackend<BrowserOptions> {\n  /**\n   * @inheritDoc\n   */\n  protected _setupTransport(): Transport {\n    if (!this._options.dsn) {\n      // We return the noop transport here in case there is no Dsn.\n      return super._setupTransport();\n    }\n\n    const transportOptions = {\n      ...this._options.transportOptions,\n      dsn: this._options.dsn,\n    };\n\n    if (this._options.transport) {\n      return new this._options.transport(transportOptions);\n    }\n    if (supportsFetch()) {\n      return new FetchTransport(transportOptions);\n    }\n    return new XHRTransport(transportOptions);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromException(exception: any, hint?: EventHint): PromiseLike<Event> {\n    const syntheticException = (hint && hint.syntheticException) || undefined;\n    const event = eventFromUnknownInput(exception, syntheticException, {\n      attachStacktrace: this._options.attachStacktrace,\n    });\n    addExceptionMechanism(event, {\n      handled: true,\n      type: 'generic',\n    });\n    event.level = Severity.Error;\n    if (hint && hint.event_id) {\n      event.event_id = hint.event_id;\n    }\n    return SyncPromise.resolve(event);\n  }\n  /**\n   * @inheritDoc\n   */\n  public eventFromMessage(message: string, level: Severity = Severity.Info, hint?: EventHint): PromiseLike<Event> {\n    const syntheticException = (hint && hint.syntheticException) || undefined;\n    const event = eventFromString(message, syntheticException, {\n      attachStacktrace: this._options.attachStacktrace,\n    });\n    event.level = level;\n    if (hint && hint.event_id) {\n      event.event_id = hint.event_id;\n    }\n    return SyncPromise.resolve(event);\n  }\n}\n","export const SDK_NAME = 'sentry.javascript.browser';\nexport const SDK_VERSION = '5.9.1';\n","import { API, BaseClient, Scope } from '@sentry/core';\nimport { DsnLike, Event, EventHint } from '@sentry/types';\nimport { getGlobalObject, logger } from '@sentry/utils';\n\nimport { BrowserBackend, BrowserOptions } from './backend';\nimport { SDK_NAME, SDK_VERSION } from './version';\n\n/**\n * All properties the report dialog supports\n */\nexport interface ReportDialogOptions {\n  [key: string]: any;\n  eventId?: string;\n  dsn?: DsnLike;\n  user?: {\n    email?: string;\n    name?: string;\n  };\n  lang?: string;\n  title?: string;\n  subtitle?: string;\n  subtitle2?: string;\n  labelName?: string;\n  labelEmail?: string;\n  labelComments?: string;\n  labelClose?: string;\n  labelSubmit?: string;\n  errorGeneric?: string;\n  errorFormEntry?: string;\n  successMessage?: string;\n  /** Callback after reportDialog showed up */\n  onLoad?(): void;\n}\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nexport class BrowserClient extends BaseClient<BrowserBackend, BrowserOptions> {\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n  public constructor(options: BrowserOptions = {}) {\n    super(BrowserBackend, options);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  protected _prepareEvent(event: Event, scope?: Scope, hint?: EventHint): PromiseLike<Event | null> {\n    event.platform = event.platform || 'javascript';\n    event.sdk = {\n      ...event.sdk,\n      name: SDK_NAME,\n      packages: [\n        ...((event.sdk && event.sdk.packages) || []),\n        {\n          name: 'npm:@sentry/browser',\n          version: SDK_VERSION,\n        },\n      ],\n      version: SDK_VERSION,\n    };\n\n    return super._prepareEvent(event, scope, hint);\n  }\n\n  /**\n   * Show a report dialog to the user to send feedback to a specific event.\n   *\n   * @param options Set individual options for the dialog\n   */\n  public showReportDialog(options: ReportDialogOptions = {}): void {\n    // doesn't work without a document (React Native)\n    const document = getGlobalObject<Window>().document;\n    if (!document) {\n      return;\n    }\n\n    if (!this._isEnabled()) {\n      logger.error('Trying to call showReportDialog with Sentry Client is disabled');\n      return;\n    }\n\n    const dsn = options.dsn || this.getDsn();\n\n    if (!options.eventId) {\n      logger.error('Missing `eventId` option in showReportDialog call');\n      return;\n    }\n\n    if (!dsn) {\n      logger.error('Missing `Dsn` option in showReportDialog call');\n      return;\n    }\n\n    const script = document.createElement('script');\n    script.async = true;\n    script.src = new API(dsn).getReportDialogEndpoint(options);\n\n    if (options.onLoad) {\n      script.onload = options.onLoad;\n    }\n\n    (document.head || document.body).appendChild(script);\n  }\n}\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { Event, Integration } from '@sentry/types';\nimport { getEventDescription, isMatchingPattern, logger } from '@sentry/utils';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n\n/** JSDoc */\ninterface InboundFiltersOptions {\n  blacklistUrls?: Array<string | RegExp>;\n  ignoreErrors?: Array<string | RegExp>;\n  ignoreInternal?: boolean;\n  whitelistUrls?: Array<string | RegExp>;\n}\n\n/** Inbound filters configurable by the user */\nexport class InboundFilters implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public name: string = InboundFilters.id;\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'InboundFilters';\n\n  public constructor(private readonly _options: InboundFiltersOptions = {}) {}\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    addGlobalEventProcessor((event: Event) => {\n      const hub = getCurrentHub();\n      if (!hub) {\n        return event;\n      }\n      const self = hub.getIntegration(InboundFilters);\n      if (self) {\n        const client = hub.getClient();\n        const clientOptions = client ? client.getOptions() : {};\n        const options = self._mergeOptions(clientOptions);\n        if (self._shouldDropEvent(event, options)) {\n          return null;\n        }\n      }\n      return event;\n    });\n  }\n\n  /** JSDoc */\n  private _shouldDropEvent(event: Event, options: InboundFiltersOptions): boolean {\n    if (this._isSentryError(event, options)) {\n      logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${getEventDescription(event)}`);\n      return true;\n    }\n    if (this._isIgnoredError(event, options)) {\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n      return true;\n    }\n    if (this._isBlacklistedUrl(event, options)) {\n      logger.warn(\n        `Event dropped due to being matched by \\`blacklistUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${this._getEventFilterUrl(event)}`,\n      );\n      return true;\n    }\n    if (!this._isWhitelistedUrl(event, options)) {\n      logger.warn(\n        `Event dropped due to not being matched by \\`whitelistUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${this._getEventFilterUrl(event)}`,\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /** JSDoc */\n  private _isSentryError(event: Event, options: InboundFiltersOptions = {}): boolean {\n    if (!options.ignoreInternal) {\n      return false;\n    }\n\n    try {\n      return (\n        (event &&\n          event.exception &&\n          event.exception.values &&\n          event.exception.values[0] &&\n          event.exception.values[0].type === 'SentryError') ||\n        false\n      );\n    } catch (_oO) {\n      return false;\n    }\n  }\n\n  /** JSDoc */\n  private _isIgnoredError(event: Event, options: InboundFiltersOptions = {}): boolean {\n    if (!options.ignoreErrors || !options.ignoreErrors.length) {\n      return false;\n    }\n\n    return this._getPossibleEventMessages(event).some(message =>\n      // Not sure why TypeScript complains here...\n      (options.ignoreErrors as Array<RegExp | string>).some(pattern => isMatchingPattern(message, pattern)),\n    );\n  }\n\n  /** JSDoc */\n  private _isBlacklistedUrl(event: Event, options: InboundFiltersOptions = {}): boolean {\n    // TODO: Use Glob instead?\n    if (!options.blacklistUrls || !options.blacklistUrls.length) {\n      return false;\n    }\n    const url = this._getEventFilterUrl(event);\n    return !url ? false : options.blacklistUrls.some(pattern => isMatchingPattern(url, pattern));\n  }\n\n  /** JSDoc */\n  private _isWhitelistedUrl(event: Event, options: InboundFiltersOptions = {}): boolean {\n    // TODO: Use Glob instead?\n    if (!options.whitelistUrls || !options.whitelistUrls.length) {\n      return true;\n    }\n    const url = this._getEventFilterUrl(event);\n    return !url ? true : options.whitelistUrls.some(pattern => isMatchingPattern(url, pattern));\n  }\n\n  /** JSDoc */\n  private _mergeOptions(clientOptions: InboundFiltersOptions = {}): InboundFiltersOptions {\n    return {\n      blacklistUrls: [...(this._options.blacklistUrls || []), ...(clientOptions.blacklistUrls || [])],\n      ignoreErrors: [\n        ...(this._options.ignoreErrors || []),\n        ...(clientOptions.ignoreErrors || []),\n        ...DEFAULT_IGNORE_ERRORS,\n      ],\n      ignoreInternal: typeof this._options.ignoreInternal !== 'undefined' ? this._options.ignoreInternal : true,\n      whitelistUrls: [...(this._options.whitelistUrls || []), ...(clientOptions.whitelistUrls || [])],\n    };\n  }\n\n  /** JSDoc */\n  private _getPossibleEventMessages(event: Event): string[] {\n    if (event.message) {\n      return [event.message];\n    }\n    if (event.exception) {\n      try {\n        const { type = '', value = '' } = (event.exception.values && event.exception.values[0]) || {};\n        return [`${value}`, `${type}: ${value}`];\n      } catch (oO) {\n        logger.error(`Cannot extract message for event ${getEventDescription(event)}`);\n        return [];\n      }\n    }\n    return [];\n  }\n\n  /** JSDoc */\n  private _getEventFilterUrl(event: Event): string | null {\n    try {\n      if (event.stacktrace) {\n        const frames = event.stacktrace.frames;\n        return (frames && frames[frames.length - 1].filename) || null;\n      }\n      if (event.exception) {\n        const frames =\n          event.exception.values && event.exception.values[0].stacktrace && event.exception.values[0].stacktrace.frames;\n        return (frames && frames[frames.length - 1].filename) || null;\n      }\n      return null;\n    } catch (oO) {\n      logger.error(`Cannot extract url for event ${getEventDescription(event)}`);\n      return null;\n    }\n  }\n}\n","import { captureException, getCurrentHub, withScope } from '@sentry/core';\nimport { Event as SentryEvent, Mechanism, Scope, WrappedFunction } from '@sentry/types';\nimport { addExceptionMechanism, addExceptionTypeValue, htmlTreeAsString, normalize } from '@sentry/utils';\n\nconst debounceDuration: number = 1000;\nlet keypressTimeout: number | undefined;\nlet lastCapturedEvent: Event | undefined;\nlet ignoreOnError: number = 0;\n\n/**\n * @hidden\n */\nexport function shouldIgnoreOnError(): boolean {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nexport function ignoreNextOnError(): void {\n  // onerror should trigger before setTimeout\n  ignoreOnError += 1;\n  setTimeout(() => {\n    ignoreOnError -= 1;\n  });\n}\n\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap.\n * @returns The wrapped function.\n * @hidden\n */\nexport function wrap(\n  fn: WrappedFunction,\n  options: {\n    mechanism?: Mechanism;\n    capture?: boolean;\n  } = {},\n  before?: WrappedFunction,\n): any {\n  // tslint:disable-next-line:strict-type-predicates\n  if (typeof fn !== 'function') {\n    return fn;\n  }\n\n  try {\n    // We don't wanna wrap it twice\n    if (fn.__sentry__) {\n      return fn;\n    }\n\n    // If this has already been wrapped in the past, return that wrapped function\n    if (fn.__sentry_wrapped__) {\n      return fn.__sentry_wrapped__;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n  const sentryWrapped: WrappedFunction = function(this: any): void {\n    // tslint:disable-next-line:strict-type-predicates\n    if (before && typeof before === 'function') {\n      before.apply(this, arguments);\n    }\n\n    const args = Array.prototype.slice.call(arguments);\n\n    // tslint:disable:no-unsafe-any\n    try {\n      const wrappedArguments = args.map((arg: any) => wrap(arg, options));\n\n      if (fn.handleEvent) {\n        // Attempt to invoke user-land function\n        // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n        //       means the sentry.javascript SDK caught an error invoking your application code. This\n        //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n        return fn.handleEvent.apply(this, wrappedArguments);\n      }\n\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n      // tslint:enable:no-unsafe-any\n    } catch (ex) {\n      ignoreNextOnError();\n\n      withScope((scope: Scope) => {\n        scope.addEventProcessor((event: SentryEvent) => {\n          const processedEvent = { ...event };\n\n          if (options.mechanism) {\n            addExceptionTypeValue(processedEvent, undefined, undefined);\n            addExceptionMechanism(processedEvent, options.mechanism);\n          }\n\n          processedEvent.extra = {\n            ...processedEvent.extra,\n            arguments: normalize(args, 3),\n          };\n\n          return processedEvent;\n        });\n\n        captureException(ex);\n      });\n\n      throw ex;\n    }\n  };\n\n  // Accessing some objects may throw\n  // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  try {\n    for (const property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property] = fn[property];\n      }\n    }\n  } catch (_oO) {} // tslint:disable-line:no-empty\n\n  fn.prototype = fn.prototype || {};\n  sentryWrapped.prototype = fn.prototype;\n\n  Object.defineProperty(fn, '__sentry_wrapped__', {\n    enumerable: false,\n    value: sentryWrapped,\n  });\n\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  Object.defineProperties(sentryWrapped, {\n    __sentry__: {\n      enumerable: false,\n      value: true,\n    },\n    __sentry_original__: {\n      enumerable: false,\n      value: fn,\n    },\n  });\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    const descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name') as PropertyDescriptor;\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get(): string {\n          return fn.name;\n        },\n      });\n    }\n  } catch (_oO) {\n    /*no-empty*/\n  }\n\n  return sentryWrapped;\n}\n\nlet debounceTimer: number = 0;\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n * @param eventName the event name (e.g. \"click\")\n * @returns wrapped breadcrumb events handler\n * @hidden\n */\nexport function breadcrumbEventHandler(eventName: string, debounce: boolean = false): (event: Event) => void {\n  return (event: Event) => {\n    // reset keypress timeout; e.g. triggering a 'click' after\n    // a 'keypress' will reset the keypress debounce so that a new\n    // set of keypresses can be recorded\n    keypressTimeout = undefined;\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors). Ignore if we've\n    // already captured the event.\n    if (!event || lastCapturedEvent === event) {\n      return;\n    }\n\n    lastCapturedEvent = event;\n\n    const captureBreadcrumb = () => {\n      let target;\n\n      // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n      try {\n        target = event.target ? htmlTreeAsString(event.target as Node) : htmlTreeAsString((event as unknown) as Node);\n      } catch (e) {\n        target = '<unknown>';\n      }\n\n      if (target.length === 0) {\n        return;\n      }\n\n      getCurrentHub().addBreadcrumb(\n        {\n          category: `ui.${eventName}`, // e.g. ui.click, ui.input\n          message: target,\n        },\n        {\n          event,\n          name: eventName,\n        },\n      );\n    };\n\n    if (debounceTimer) {\n      clearTimeout(debounceTimer);\n    }\n\n    if (debounce) {\n      debounceTimer = setTimeout(captureBreadcrumb);\n    } else {\n      captureBreadcrumb();\n    }\n  };\n}\n\n/**\n * Wraps addEventListener to capture keypress UI events\n * @returns wrapped keypress events handler\n * @hidden\n */\nexport function keypressEventHandler(): (event: Event) => void {\n  // TODO: if somehow user switches keypress target before\n  //       debounce timeout is triggered, we will only capture\n  //       a single breadcrumb from the FIRST target (acceptable?)\n  return (event: Event) => {\n    let target;\n\n    try {\n      target = event.target;\n    } catch (e) {\n      // just accessing event properties can throw an exception in some rare circumstances\n      // see: https://github.com/getsentry/raven-js/issues/838\n      return;\n    }\n\n    const tagName = target && (target as HTMLElement).tagName;\n\n    // only consider keypress events on actual input elements\n    // this will disregard keypresses targeting body (e.g. tabbing\n    // through elements, hotkeys, etc)\n    if (!tagName || (tagName !== 'INPUT' && tagName !== 'TEXTAREA' && !(target as HTMLElement).isContentEditable)) {\n      return;\n    }\n\n    // record first keypress in a series, but ignore subsequent\n    // keypresses until debounce clears\n    if (!keypressTimeout) {\n      breadcrumbEventHandler('input')(event);\n    }\n    clearTimeout(keypressTimeout);\n\n    keypressTimeout = (setTimeout(() => {\n      keypressTimeout = undefined;\n    }, debounceDuration) as any) as number;\n  };\n}\n","import { Integration, WrappedFunction } from '@sentry/types';\nimport { fill, getGlobalObject } from '@sentry/utils';\n\nimport { wrap } from '../helpers';\n\n/** Wrap timer functions and event targets to catch errors and provide better meta data */\nexport class TryCatch implements Integration {\n  /** JSDoc */\n  private _ignoreOnError: number = 0;\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = TryCatch.id;\n\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'TryCatch';\n\n  /** JSDoc */\n  private _wrapTimeFunction(original: () => void): () => number {\n    return function(this: any, ...args: any[]): number {\n      const originalCallback = args[0];\n      args[0] = wrap(originalCallback, {\n        mechanism: {\n          data: { function: getFunctionName(original) },\n          handled: true,\n          type: 'instrument',\n        },\n      });\n      return original.apply(this, args);\n    };\n  }\n\n  /** JSDoc */\n  private _wrapRAF(original: any): (callback: () => void) => any {\n    return function(this: any, callback: () => void): () => void {\n      return original(\n        wrap(callback, {\n          mechanism: {\n            data: {\n              function: 'requestAnimationFrame',\n              handler: getFunctionName(original),\n            },\n            handled: true,\n            type: 'instrument',\n          },\n        }),\n      );\n    };\n  }\n\n  /** JSDoc */\n  private _wrapEventTarget(target: string): void {\n    const global = getGlobalObject() as { [key: string]: any };\n    const proto = global[target] && global[target].prototype;\n\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function(\n      original: () => void,\n    ): (eventName: string, fn: EventListenerObject, options?: boolean | AddEventListenerOptions) => void {\n      return function(\n        this: any,\n        eventName: string,\n        fn: EventListenerObject,\n        options?: boolean | AddEventListenerOptions,\n      ): (eventName: string, fn: EventListenerObject, capture?: boolean, secure?: boolean) => void {\n        try {\n          // tslint:disable-next-line:no-unbound-method strict-type-predicates\n          if (typeof fn.handleEvent === 'function') {\n            fn.handleEvent = wrap(fn.handleEvent.bind(fn), {\n              mechanism: {\n                data: {\n                  function: 'handleEvent',\n                  handler: getFunctionName(fn),\n                  target,\n                },\n                handled: true,\n                type: 'instrument',\n              },\n            });\n          }\n        } catch (err) {\n          // can sometimes get 'Permission denied to access property \"handle Event'\n        }\n\n        return original.call(\n          this,\n          eventName,\n          wrap((fn as any) as WrappedFunction, {\n            mechanism: {\n              data: {\n                function: 'addEventListener',\n                handler: getFunctionName(fn),\n                target,\n              },\n              handled: true,\n              type: 'instrument',\n            },\n          }),\n          options,\n        );\n      };\n    });\n\n    fill(proto, 'removeEventListener', function(\n      original: () => void,\n    ): (this: any, eventName: string, fn: EventListenerObject, options?: boolean | EventListenerOptions) => () => void {\n      return function(\n        this: any,\n        eventName: string,\n        fn: EventListenerObject,\n        options?: boolean | EventListenerOptions,\n      ): () => void {\n        let callback = (fn as any) as WrappedFunction;\n        try {\n          callback = callback && (callback.__sentry_wrapped__ || callback);\n        } catch (e) {\n          // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n        }\n        return original.call(this, eventName, callback, options);\n      };\n    });\n  }\n\n  /**\n   * Wrap timer functions and event targets to catch errors\n   * and provide better metadata.\n   */\n  public setupOnce(): void {\n    this._ignoreOnError = this._ignoreOnError;\n\n    const global = getGlobalObject();\n\n    fill(global, 'setTimeout', this._wrapTimeFunction.bind(this));\n    fill(global, 'setInterval', this._wrapTimeFunction.bind(this));\n    fill(global, 'requestAnimationFrame', this._wrapRAF.bind(this));\n\n    [\n      'EventTarget',\n      'Window',\n      'Node',\n      'ApplicationCache',\n      'AudioTrackList',\n      'ChannelMergerNode',\n      'CryptoOperation',\n      'EventSource',\n      'FileReader',\n      'HTMLUnknownElement',\n      'IDBDatabase',\n      'IDBRequest',\n      'IDBTransaction',\n      'KeyOperation',\n      'MediaController',\n      'MessagePort',\n      'ModalWindow',\n      'Notification',\n      'SVGElementInstance',\n      'Screen',\n      'TextTrack',\n      'TextTrackCue',\n      'TextTrackList',\n      'WebSocket',\n      'WebSocketWorker',\n      'Worker',\n      'XMLHttpRequest',\n      'XMLHttpRequestEventTarget',\n      'XMLHttpRequestUpload',\n    ].forEach(this._wrapEventTarget.bind(this));\n  }\n}\n\n/**\n * Safely extract function name from itself\n */\nfunction getFunctionName(fn: any): string {\n  try {\n    return (fn && fn.name) || '<anonymous>';\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return '<anonymous>';\n  }\n}\n","import { API, getCurrentHub } from '@sentry/core';\nimport { Breadcrumb, BreadcrumbHint, Integration, Severity, WrappedFunction } from '@sentry/types';\nimport {\n  fill,\n  getEventDescription,\n  getGlobalObject,\n  isString,\n  logger,\n  normalize,\n  parseUrl,\n  safeJoin,\n  supportsHistory,\n  supportsNativeFetch,\n} from '@sentry/utils';\n\nimport { BrowserClient } from '../client';\nimport { breadcrumbEventHandler, keypressEventHandler, wrap } from '../helpers';\n\nconst global = getGlobalObject<Window>();\nlet lastHref: string | undefined;\n/**\n * @hidden\n */\nexport interface SentryWrappedXMLHttpRequest extends XMLHttpRequest {\n  [key: string]: any;\n  __sentry_xhr__?: {\n    method?: string;\n    url?: string;\n    status_code?: number;\n  };\n}\n\n/** JSDoc */\ninterface BreadcrumbIntegrations {\n  console?: boolean;\n  dom?: boolean;\n  fetch?: boolean;\n  history?: boolean;\n  sentry?: boolean;\n  xhr?: boolean;\n}\n\ntype XMLHttpRequestProp = 'onload' | 'onerror' | 'onprogress';\n\n/** Default Breadcrumbs instrumentations */\nexport class Breadcrumbs implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public name: string = Breadcrumbs.id;\n\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Breadcrumbs';\n\n  /** JSDoc */\n  private readonly _options: BreadcrumbIntegrations;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options?: BreadcrumbIntegrations) {\n    this._options = {\n      console: true,\n      dom: true,\n      fetch: true,\n      history: true,\n      sentry: true,\n      xhr: true,\n      ...options,\n    };\n  }\n\n  /** JSDoc */\n  private _instrumentConsole(): void {\n    if (!('console' in global)) {\n      return;\n    }\n    ['debug', 'info', 'warn', 'error', 'log', 'assert'].forEach(function(level: string): void {\n      if (!(level in global.console)) {\n        return;\n      }\n\n      fill(global.console, level, function(originalConsoleLevel: () => any): Function {\n        return function(...args: any[]): void {\n          const breadcrumbData = {\n            category: 'console',\n            data: {\n              extra: {\n                arguments: normalize(args, 3),\n              },\n              logger: 'console',\n            },\n            level: Severity.fromString(level),\n            message: safeJoin(args, ' '),\n          };\n\n          if (level === 'assert') {\n            if (args[0] === false) {\n              breadcrumbData.message = `Assertion failed: ${safeJoin(args.slice(1), ' ') || 'console.assert'}`;\n              breadcrumbData.data.extra.arguments = normalize(args.slice(1), 3);\n              Breadcrumbs.addBreadcrumb(breadcrumbData, {\n                input: args,\n                level,\n              });\n            }\n          } else {\n            Breadcrumbs.addBreadcrumb(breadcrumbData, {\n              input: args,\n              level,\n            });\n          }\n\n          // this fails for some browsers. :(\n          if (originalConsoleLevel) {\n            Function.prototype.apply.call(originalConsoleLevel, global.console, args);\n          }\n        };\n      });\n    });\n  }\n\n  /** JSDoc */\n  private _instrumentDOM(): void {\n    if (!('document' in global)) {\n      return;\n    }\n\n    // Capture breadcrumbs from any click that is unhandled / bubbled up all the way\n    // to the document. Do this before we instrument addEventListener.\n    global.document.addEventListener('click', breadcrumbEventHandler('click'), false);\n    global.document.addEventListener('keypress', keypressEventHandler(), false);\n\n    // After hooking into document bubbled up click and keypresses events, we also hook into user handled click & keypresses.\n    ['EventTarget', 'Node'].forEach((target: string) => {\n      const proto = (global as any)[target] && (global as any)[target].prototype;\n\n      if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n        return;\n      }\n\n      fill(proto, 'addEventListener', function(\n        original: () => void,\n      ): (\n        eventName: string,\n        fn: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions,\n      ) => void {\n        return function(\n          this: any,\n          eventName: string,\n          fn: EventListenerOrEventListenerObject,\n          options?: boolean | AddEventListenerOptions,\n        ): (eventName: string, fn: EventListenerOrEventListenerObject, capture?: boolean, secure?: boolean) => void {\n          if (fn && (fn as EventListenerObject).handleEvent) {\n            if (eventName === 'click') {\n              fill(fn, 'handleEvent', function(innerOriginal: () => void): (caughtEvent: Event) => void {\n                return function(this: any, event: Event): (event: Event) => void {\n                  breadcrumbEventHandler('click')(event);\n                  return innerOriginal.call(this, event);\n                };\n              });\n            }\n            if (eventName === 'keypress') {\n              fill(fn, 'handleEvent', function(innerOriginal: () => void): (caughtEvent: Event) => void {\n                return function(this: any, event: Event): (event: Event) => void {\n                  keypressEventHandler()(event);\n                  return innerOriginal.call(this, event);\n                };\n              });\n            }\n          } else {\n            if (eventName === 'click') {\n              breadcrumbEventHandler('click', true)(this);\n            }\n            if (eventName === 'keypress') {\n              keypressEventHandler()(this);\n            }\n          }\n\n          return original.call(this, eventName, fn, options);\n        };\n      });\n\n      fill(proto, 'removeEventListener', function(\n        original: () => void,\n      ): (\n        this: any,\n        eventName: string,\n        fn: EventListenerOrEventListenerObject,\n        options?: boolean | EventListenerOptions,\n      ) => () => void {\n        return function(\n          this: any,\n          eventName: string,\n          fn: EventListenerOrEventListenerObject,\n          options?: boolean | EventListenerOptions,\n        ): () => void {\n          let callback = fn as WrappedFunction;\n          try {\n            callback = callback && (callback.__sentry_wrapped__ || callback);\n          } catch (e) {\n            // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n          }\n          return original.call(this, eventName, callback, options);\n        };\n      });\n    });\n  }\n\n  /** JSDoc */\n  private _instrumentFetch(): void {\n    if (!supportsNativeFetch()) {\n      return;\n    }\n\n    fill(global, 'fetch', function(originalFetch: () => void): () => void {\n      return function(...args: any[]): void {\n        const fetchInput = args[0];\n        let method = 'GET';\n        let url;\n\n        if (typeof fetchInput === 'string') {\n          url = fetchInput;\n        } else if ('Request' in global && fetchInput instanceof Request) {\n          url = fetchInput.url;\n          if (fetchInput.method) {\n            method = fetchInput.method;\n          }\n        } else {\n          url = String(fetchInput);\n        }\n\n        if (args[1] && args[1].method) {\n          method = args[1].method;\n        }\n\n        const client = getCurrentHub().getClient<BrowserClient>();\n        const dsn = client && client.getDsn();\n        if (dsn) {\n          const filterUrl = new API(dsn).getStoreEndpoint();\n          // if Sentry key appears in URL, don't capture it as a request\n          // but rather as our own 'sentry' type breadcrumb\n          if (filterUrl && url.indexOf(filterUrl) !== -1) {\n            if (method === 'POST' && args[1] && args[1].body) {\n              addSentryBreadcrumb(args[1].body);\n            }\n            return originalFetch.apply(global, args);\n          }\n        }\n\n        const fetchData: {\n          method: string;\n          url: string;\n          status_code?: number;\n        } = {\n          method: isString(method) ? method.toUpperCase() : method,\n          url,\n        };\n\n        return originalFetch\n          .apply(global, args)\n          .then((response: Response) => {\n            fetchData.status_code = response.status;\n            Breadcrumbs.addBreadcrumb(\n              {\n                category: 'fetch',\n                data: fetchData,\n                type: 'http',\n              },\n              {\n                input: args,\n                response,\n              },\n            );\n            return response;\n          })\n          .then(null, (error: Error) => {\n            Breadcrumbs.addBreadcrumb(\n              {\n                category: 'fetch',\n                data: fetchData,\n                level: Severity.Error,\n                type: 'http',\n              },\n              {\n                error,\n                input: args,\n              },\n            );\n\n            throw error;\n          });\n      };\n    });\n  }\n\n  /** JSDoc */\n  private _instrumentHistory(): void {\n    if (!supportsHistory()) {\n      return;\n    }\n\n    const captureUrlChange = (from: string | undefined, to: string | undefined): void => {\n      const parsedLoc = parseUrl(global.location.href);\n      const parsedTo = parseUrl(to as string);\n      let parsedFrom = parseUrl(from as string);\n\n      // Initial pushState doesn't provide `from` information\n      if (!parsedFrom.path) {\n        parsedFrom = parsedLoc;\n      }\n\n      // because onpopstate only tells you the \"new\" (to) value of location.href, and\n      // not the previous (from) value, we need to track the value of the current URL\n      // state ourselves\n      lastHref = to;\n\n      // Use only the path component of the URL if the URL matches the current\n      // document (almost all the time when using pushState)\n      if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n        // tslint:disable-next-line:no-parameter-reassignment\n        to = parsedTo.relative;\n      }\n      if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n        // tslint:disable-next-line:no-parameter-reassignment\n        from = parsedFrom.relative;\n      }\n\n      Breadcrumbs.addBreadcrumb({\n        category: 'navigation',\n        data: {\n          from,\n          to,\n        },\n      });\n    };\n\n    // record navigation (URL) changes\n    const oldOnPopState = global.onpopstate;\n    global.onpopstate = (...args: any[]) => {\n      const currentHref = global.location.href;\n      captureUrlChange(lastHref, currentHref);\n      if (oldOnPopState) {\n        return oldOnPopState.apply(this, args);\n      }\n    };\n\n    /**\n     * @hidden\n     */\n    function historyReplacementFunction(originalHistoryFunction: () => void): () => void {\n      // note history.pushState.length is 0; intentionally not declaring\n      // params to preserve 0 arity\n      return function(this: History, ...args: any[]): void {\n        const url = args.length > 2 ? args[2] : undefined;\n        // url argument is optional\n        if (url) {\n          // coerce to string (this is what pushState does)\n          captureUrlChange(lastHref, String(url));\n        }\n        return originalHistoryFunction.apply(this, args);\n      };\n    }\n\n    fill(global.history, 'pushState', historyReplacementFunction);\n    fill(global.history, 'replaceState', historyReplacementFunction);\n  }\n\n  /** JSDoc */\n  private _instrumentXHR(): void {\n    if (!('XMLHttpRequest' in global)) {\n      return;\n    }\n\n    /**\n     * @hidden\n     */\n    function wrapProp(prop: XMLHttpRequestProp, xhr: XMLHttpRequest): void {\n      if (prop in xhr && typeof xhr[prop] === 'function') {\n        fill(xhr, prop, original =>\n          wrap(original, {\n            mechanism: {\n              data: {\n                function: prop,\n                handler: (original && original.name) || '<anonymous>',\n              },\n              handled: true,\n              type: 'instrument',\n            },\n          }),\n        );\n      }\n    }\n\n    const xhrproto = XMLHttpRequest.prototype;\n    fill(\n      xhrproto,\n      'open',\n      originalOpen =>\n        function(this: SentryWrappedXMLHttpRequest, ...args: any[]): void {\n          const url = args[1];\n          this.__sentry_xhr__ = {\n            method: isString(args[0]) ? args[0].toUpperCase() : args[0],\n            url: args[1],\n          };\n\n          const client = getCurrentHub().getClient<BrowserClient>();\n          const dsn = client && client.getDsn();\n          if (dsn) {\n            const filterUrl = new API(dsn).getStoreEndpoint();\n            // if Sentry key appears in URL, don't capture it as a request\n            // but rather as our own 'sentry' type breadcrumb\n            if (isString(url) && (filterUrl && url.indexOf(filterUrl) !== -1)) {\n              this.__sentry_own_request__ = true;\n            }\n          }\n\n          return originalOpen.apply(this, args);\n        },\n    );\n\n    fill(\n      xhrproto,\n      'send',\n      originalSend =>\n        function(this: SentryWrappedXMLHttpRequest, ...args: any[]): void {\n          const xhr = this; // tslint:disable-line:no-this-assignment\n\n          if (xhr.__sentry_own_request__) {\n            addSentryBreadcrumb(args[0]);\n          }\n\n          /**\n           * @hidden\n           */\n          function onreadystatechangeHandler(): void {\n            if (xhr.readyState === 4) {\n              if (xhr.__sentry_own_request__) {\n                return;\n              }\n              try {\n                // touching statusCode in some platforms throws\n                // an exception\n                if (xhr.__sentry_xhr__) {\n                  xhr.__sentry_xhr__.status_code = xhr.status;\n                }\n              } catch (e) {\n                /* do nothing */\n              }\n              Breadcrumbs.addBreadcrumb(\n                {\n                  category: 'xhr',\n                  data: xhr.__sentry_xhr__,\n                  type: 'http',\n                },\n                {\n                  xhr,\n                },\n              );\n            }\n          }\n\n          const xmlHttpRequestProps: XMLHttpRequestProp[] = ['onload', 'onerror', 'onprogress'];\n          xmlHttpRequestProps.forEach(prop => {\n            wrapProp(prop, xhr);\n          });\n\n          if ('onreadystatechange' in xhr && typeof xhr.onreadystatechange === 'function') {\n            fill(xhr, 'onreadystatechange', function(original: () => void): Function {\n              return wrap(\n                original,\n                {\n                  mechanism: {\n                    data: {\n                      function: 'onreadystatechange',\n                      handler: (original && original.name) || '<anonymous>',\n                    },\n                    handled: true,\n                    type: 'instrument',\n                  },\n                },\n                onreadystatechangeHandler,\n              );\n            });\n          } else {\n            // if onreadystatechange wasn't actually set by the page on this xhr, we\n            // are free to set our own and capture the breadcrumb\n            xhr.onreadystatechange = onreadystatechangeHandler;\n          }\n          return originalSend.apply(this, args);\n        },\n    );\n  }\n\n  /**\n   * Helper that checks if integration is enabled on the client.\n   * @param breadcrumb Breadcrumb\n   * @param hint BreadcrumbHint\n   */\n  public static addBreadcrumb(breadcrumb: Breadcrumb, hint?: BreadcrumbHint): void {\n    if (getCurrentHub().getIntegration(Breadcrumbs)) {\n      getCurrentHub().addBreadcrumb(breadcrumb, hint);\n    }\n  }\n\n  /**\n   * Instrument browser built-ins w/ breadcrumb capturing\n   *  - Console API\n   *  - DOM API (click/typing)\n   *  - XMLHttpRequest API\n   *  - Fetch API\n   *  - History API\n   */\n  public setupOnce(): void {\n    if (this._options.console) {\n      this._instrumentConsole();\n    }\n    if (this._options.dom) {\n      this._instrumentDOM();\n    }\n    if (this._options.xhr) {\n      this._instrumentXHR();\n    }\n    if (this._options.fetch) {\n      this._instrumentFetch();\n    }\n    if (this._options.history) {\n      this._instrumentHistory();\n    }\n  }\n}\n\n/** JSDoc */\nfunction addSentryBreadcrumb(serializedData: string): void {\n  // There's always something that can go wrong with deserialization...\n  try {\n    const event = JSON.parse(serializedData);\n    Breadcrumbs.addBreadcrumb(\n      {\n        category: 'sentry',\n        event_id: event.event_id,\n        level: event.level || Severity.fromString('error'),\n        message: getEventDescription(event),\n      },\n      {\n        event,\n      },\n    );\n  } catch (_oO) {\n    logger.error('Error while adding sentry type breadcrumb');\n  }\n}\n","import { getCurrentHub } from '@sentry/core';\nimport { Event, Integration, Severity } from '@sentry/types';\nimport {\n  addExceptionMechanism,\n  getGlobalObject,\n  getLocationHref,\n  isErrorEvent,\n  isPrimitive,\n  isString,\n  logger,\n} from '@sentry/utils';\n\nimport { eventFromUnknownInput } from '../eventbuilder';\nimport { shouldIgnoreOnError } from '../helpers';\n\n/** JSDoc */\ninterface GlobalHandlersIntegrations {\n  onerror: boolean;\n  onunhandledrejection: boolean;\n}\n\n/** Global handlers */\nexport class GlobalHandlers implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public name: string = GlobalHandlers.id;\n\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'GlobalHandlers';\n\n  /** JSDoc */\n  private readonly _options: GlobalHandlersIntegrations;\n\n  /** JSDoc */\n  private readonly _global: Window = getGlobalObject();\n\n  /** JSDoc */\n  private _oldOnErrorHandler: OnErrorEventHandler = null;\n\n  /** JSDoc */\n  private _oldOnUnhandledRejectionHandler: ((e: any) => void) | null = null;\n\n  /** JSDoc */\n  private _onErrorHandlerInstalled: boolean = false;\n\n  /** JSDoc */\n  private _onUnhandledRejectionHandlerInstalled: boolean = false;\n\n  /** JSDoc */\n  public constructor(options?: GlobalHandlersIntegrations) {\n    this._options = {\n      onerror: true,\n      onunhandledrejection: true,\n      ...options,\n    };\n  }\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    Error.stackTraceLimit = 50;\n\n    if (this._options.onerror) {\n      logger.log('Global Handler attached: onerror');\n      this._installGlobalOnErrorHandler();\n    }\n\n    if (this._options.onunhandledrejection) {\n      logger.log('Global Handler attached: onunhandledrejection');\n      this._installGlobalOnUnhandledRejectionHandler();\n    }\n  }\n\n  /** JSDoc */\n  private _installGlobalOnErrorHandler(): void {\n    if (this._onErrorHandlerInstalled) {\n      return;\n    }\n\n    const self = this; // tslint:disable-line:no-this-assignment\n    this._oldOnErrorHandler = this._global.onerror;\n\n    this._global.onerror = function(msg: any, url: any, line: any, column: any, error: any): boolean {\n      const currentHub = getCurrentHub();\n      const hasIntegration = currentHub.getIntegration(GlobalHandlers);\n      const isFailedOwnDelivery = error && error.__sentry_own_request__ === true;\n\n      if (!hasIntegration || shouldIgnoreOnError() || isFailedOwnDelivery) {\n        if (self._oldOnErrorHandler) {\n          return self._oldOnErrorHandler.apply(this, arguments);\n        }\n        return true;\n      }\n\n      const client = currentHub.getClient();\n      const event = isPrimitive(error)\n        ? self._eventFromIncompleteOnError(msg, url, line, column)\n        : self._enhanceEventWithInitialFrame(\n            eventFromUnknownInput(error, undefined, {\n              attachStacktrace: client && client.getOptions().attachStacktrace,\n              rejection: false,\n            }),\n            url,\n            line,\n            column,\n          );\n\n      addExceptionMechanism(event, {\n        handled: false,\n        type: 'onerror',\n      });\n\n      currentHub.captureEvent(event, {\n        originalException: error,\n      });\n\n      if (self._oldOnErrorHandler) {\n        return self._oldOnErrorHandler.apply(this, arguments);\n      }\n\n      return true;\n    };\n\n    this._onErrorHandlerInstalled = true;\n  }\n\n  /** JSDoc */\n  private _installGlobalOnUnhandledRejectionHandler(): void {\n    if (this._onUnhandledRejectionHandlerInstalled) {\n      return;\n    }\n\n    const self = this; // tslint:disable-line:no-this-assignment\n    this._oldOnUnhandledRejectionHandler = this._global.onunhandledrejection;\n\n    this._global.onunhandledrejection = function(e: any): boolean {\n      let error = e;\n      try {\n        error = e && 'reason' in e ? e.reason : e;\n      } catch (_oO) {\n        // no-empty\n      }\n\n      const currentHub = getCurrentHub();\n      const hasIntegration = currentHub.getIntegration(GlobalHandlers);\n      const isFailedOwnDelivery = error && error.__sentry_own_request__ === true;\n\n      if (!hasIntegration || shouldIgnoreOnError() || isFailedOwnDelivery) {\n        if (self._oldOnUnhandledRejectionHandler) {\n          return self._oldOnUnhandledRejectionHandler.apply(this, arguments);\n        }\n        return true;\n      }\n\n      const client = currentHub.getClient();\n      const event = isPrimitive(error)\n        ? self._eventFromIncompleteRejection(error)\n        : eventFromUnknownInput(error, undefined, {\n            attachStacktrace: client && client.getOptions().attachStacktrace,\n            rejection: true,\n          });\n\n      event.level = Severity.Error;\n\n      addExceptionMechanism(event, {\n        handled: false,\n        type: 'onunhandledrejection',\n      });\n\n      currentHub.captureEvent(event, {\n        originalException: error,\n      });\n\n      if (self._oldOnUnhandledRejectionHandler) {\n        return self._oldOnUnhandledRejectionHandler.apply(this, arguments);\n      }\n\n      return true;\n    };\n\n    this._onUnhandledRejectionHandlerInstalled = true;\n  }\n\n  /**\n   * This function creates a stack from an old, error-less onerror handler.\n   */\n  private _eventFromIncompleteOnError(msg: any, url: any, line: any, column: any): Event {\n    const ERROR_TYPES_RE = /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n\n    // If 'message' is ErrorEvent, get real message from inside\n    let message = isErrorEvent(msg) ? msg.message : msg;\n    let name;\n\n    if (isString(message)) {\n      const groups = message.match(ERROR_TYPES_RE);\n      if (groups) {\n        name = groups[1];\n        message = groups[2];\n      }\n    }\n\n    const event = {\n      exception: {\n        values: [\n          {\n            type: name || 'Error',\n            value: message,\n          },\n        ],\n      },\n    };\n\n    return this._enhanceEventWithInitialFrame(event, url, line, column);\n  }\n\n  /**\n   * This function creates an Event from an TraceKitStackTrace that has part of it missing.\n   */\n  private _eventFromIncompleteRejection(error: any): Event {\n    return {\n      exception: {\n        values: [\n          {\n            type: 'UnhandledRejection',\n            value: `Non-Error promise rejection captured with value: ${error}`,\n          },\n        ],\n      },\n    };\n  }\n\n  /** JSDoc */\n  private _enhanceEventWithInitialFrame(event: Event, url: any, line: any, column: any): Event {\n    event.exception = event.exception || {};\n    event.exception.values = event.exception.values || [];\n    event.exception.values[0] = event.exception.values[0] || {};\n    event.exception.values[0].stacktrace = event.exception.values[0].stacktrace || {};\n    event.exception.values[0].stacktrace.frames = event.exception.values[0].stacktrace.frames || [];\n\n    const colno = isNaN(parseInt(column, 10)) ? undefined : column;\n    const lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n    const filename = isString(url) && url.length > 0 ? url : getLocationHref();\n\n    if (event.exception.values[0].stacktrace.frames.length === 0) {\n      event.exception.values[0].stacktrace.frames.push({\n        colno,\n        filename,\n        function: '?',\n        in_app: true,\n        lineno,\n      });\n    }\n\n    return event;\n  }\n}\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { Event, EventHint, Exception, ExtendedError, Integration } from '@sentry/types';\n\nimport { exceptionFromStacktrace } from '../parsers';\nimport { computeStackTrace } from '../tracekit';\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\n/** Adds SDK info to an event. */\nexport class LinkedErrors implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public readonly name: string = LinkedErrors.id;\n\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'LinkedErrors';\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _key: string;\n\n  /**\n   * @inheritDoc\n   */\n  private readonly _limit: number;\n\n  /**\n   * @inheritDoc\n   */\n  public constructor(options: { key?: string; limit?: number } = {}) {\n    this._key = options.key || DEFAULT_KEY;\n    this._limit = options.limit || DEFAULT_LIMIT;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    addGlobalEventProcessor((event: Event, hint?: EventHint) => {\n      const self = getCurrentHub().getIntegration(LinkedErrors);\n      if (self) {\n        return self._handler(event, hint);\n      }\n      return event;\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  private _handler(event: Event, hint?: EventHint): Event | null {\n    if (!event.exception || !event.exception.values || !hint || !(hint.originalException instanceof Error)) {\n      return event;\n    }\n    const linkedErrors = this._walkErrorTree(hint.originalException, this._key);\n    event.exception.values = [...linkedErrors, ...event.exception.values];\n    return event;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  private _walkErrorTree(error: ExtendedError, key: string, stack: Exception[] = []): Exception[] {\n    if (!(error[key] instanceof Error) || stack.length + 1 >= this._limit) {\n      return stack;\n    }\n    const stacktrace = computeStackTrace(error[key]);\n    const exception = exceptionFromStacktrace(stacktrace);\n    return this._walkErrorTree(error[key], key, [exception, ...stack]);\n  }\n}\n","import { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { Event, Integration } from '@sentry/types';\nimport { getGlobalObject } from '@sentry/utils';\n\nconst global = getGlobalObject<Window>();\n\n/** UserAgent */\nexport class UserAgent implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public name: string = UserAgent.id;\n\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'UserAgent';\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    addGlobalEventProcessor((event: Event) => {\n      if (getCurrentHub().getIntegration(UserAgent)) {\n        if (!global.navigator || !global.location) {\n          return event;\n        }\n\n        // Request Interface: https://docs.sentry.io/development/sdk-dev/event-payloads/request/\n        const request = event.request || {};\n        request.url = request.url || global.location.href;\n        request.headers = request.headers || {};\n        request.headers['User-Agent'] = global.navigator.userAgent;\n\n        return {\n          ...event,\n          request,\n        };\n      }\n      return event;\n    });\n  }\n}\n","import { getCurrentHub, initAndBind, Integrations as CoreIntegrations } from '@sentry/core';\nimport { getGlobalObject, SyncPromise } from '@sentry/utils';\n\nimport { BrowserOptions } from './backend';\nimport { BrowserClient, ReportDialogOptions } from './client';\nimport { wrap as internalWrap } from './helpers';\nimport { Breadcrumbs, GlobalHandlers, LinkedErrors, TryCatch, UserAgent } from './integrations';\n\nexport const defaultIntegrations = [\n  new CoreIntegrations.InboundFilters(),\n  new CoreIntegrations.FunctionToString(),\n  new TryCatch(),\n  new Breadcrumbs(),\n  new GlobalHandlers(),\n  new LinkedErrors(),\n  new UserAgent(),\n];\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nexport function init(options: BrowserOptions = {}): void {\n  if (options.defaultIntegrations === undefined) {\n    options.defaultIntegrations = defaultIntegrations;\n  }\n  if (options.release === undefined) {\n    const window = getGlobalObject<Window>();\n    // This supports the variable that sentry-webpack-plugin injects\n    if (window.SENTRY_RELEASE && window.SENTRY_RELEASE.id) {\n      options.release = window.SENTRY_RELEASE.id;\n    }\n  }\n  initAndBind(BrowserClient, options);\n}\n\n/**\n * Present the user with a report dialog.\n *\n * @param options Everything is optional, we try to fetch all info need from the global scope.\n */\nexport function showReportDialog(options: ReportDialogOptions = {}): void {\n  if (!options.eventId) {\n    options.eventId = getCurrentHub().lastEventId();\n  }\n  const client = getCurrentHub().getClient<BrowserClient>();\n  if (client) {\n    client.showReportDialog(options);\n  }\n}\n\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nexport function lastEventId(): string | undefined {\n  return getCurrentHub().lastEventId();\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function forceLoad(): void {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function onLoad(callback: () => void): void {\n  callback();\n}\n\n/**\n * A promise that resolves when all current events have been sent.\n * If you provide a timeout and the queue takes longer to drain the promise returns false.\n *\n * @param timeout Maximum time in ms the client should wait.\n */\nexport function flush(timeout?: number): PromiseLike<boolean> {\n  const client = getCurrentHub().getClient<BrowserClient>();\n  if (client) {\n    return client.flush(timeout);\n  }\n  return SyncPromise.reject(false);\n}\n\n/**\n * A promise that resolves when all current events have been sent.\n * If you provide a timeout and the queue takes longer to drain the promise returns false.\n *\n * @param timeout Maximum time in ms the client should wait.\n */\nexport function close(timeout?: number): PromiseLike<boolean> {\n  const client = getCurrentHub().getClient<BrowserClient>();\n  if (client) {\n    return client.close(timeout);\n  }\n  return SyncPromise.reject(false);\n}\n\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @param fn A function to wrap.\n *\n * @returns The result of wrapped function call.\n */\nexport function wrap(fn: Function): any {\n  return internalWrap(fn)(); // tslint:disable-line:no-unsafe-any\n}\n","// tslint:disable:no-unsafe-any\n/**\n * Memo class used for decycle json objects. Uses WeakSet if available otherwise array.\n */\nexport class Memo {\n  /** Determines if WeakSet is available */\n  private readonly _hasWeakSet: boolean;\n  /** Either WeakSet or Array */\n  private readonly _inner: any;\n\n  public constructor() {\n    // tslint:disable-next-line\n    this._hasWeakSet = typeof WeakSet === 'function';\n    this._inner = this._hasWeakSet ? new WeakSet() : [];\n  }\n\n  /**\n   * Sets obj to remember.\n   * @param obj Object to remember\n   */\n  public memoize(obj: any): boolean {\n    if (this._hasWeakSet) {\n      if (this._inner.has(obj)) {\n        return true;\n      }\n      this._inner.add(obj);\n      return false;\n    }\n    // tslint:disable-next-line:prefer-for-of\n    for (let i = 0; i < this._inner.length; i++) {\n      const value = this._inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    this._inner.push(obj);\n    return false;\n  }\n\n  /**\n   * Removes object from internal storage.\n   * @param obj Object to forget\n   */\n  public unmemoize(obj: any): void {\n    if (this._hasWeakSet) {\n      this._inner.delete(obj);\n    } else {\n      for (let i = 0; i < this._inner.length; i++) {\n        if (this._inner[i] === obj) {\n          this._inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n}\n","import { isThenable } from './is';\n\n/** SyncPromise internal states */\nenum States {\n  /** Pending */\n  PENDING = 'PENDING',\n  /** Resolved / OK */\n  RESOLVED = 'RESOLVED',\n  /** Rejected / Error */\n  REJECTED = 'REJECTED',\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise<T> implements PromiseLike<T> {\n  private _state: States = States.PENDING;\n  private _handlers: Array<{\n    onfulfilled?: ((value: T) => T | PromiseLike<T>) | null;\n    onrejected?: ((reason: any) => any) | null;\n  }> = [];\n  private _value: any;\n\n  public constructor(\n    executor: (resolve: (value?: T | PromiseLike<T> | null) => void, reject: (reason?: any) => void) => void,\n  ) {\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n  public toString(): string {\n    return '[object SyncPromise]';\n  }\n\n  /** JSDoc */\n  public static resolve<T>(value: T | PromiseLike<T>): PromiseLike<T> {\n    return new SyncPromise(resolve => {\n      resolve(value);\n    });\n  }\n\n  /** JSDoc */\n  public static reject<T = never>(reason?: any): PromiseLike<T> {\n    return new SyncPromise((_, reject) => {\n      reject(reason);\n    });\n  }\n\n  /** JSDoc */\n  public static all<U = any>(collection: Array<U | PromiseLike<U>>): PromiseLike<U[]> {\n    return new SyncPromise<U[]>((resolve, reject) => {\n      if (!Array.isArray(collection)) {\n        reject(new TypeError(`Promise.all requires an array as input.`));\n        return;\n      }\n\n      if (collection.length === 0) {\n        resolve([]);\n        return;\n      }\n\n      let counter = collection.length;\n      const resolvedCollection: U[] = [];\n\n      collection.forEach((item, index) => {\n        SyncPromise.resolve(item)\n          .then(value => {\n            resolvedCollection[index] = value;\n            counter -= 1;\n\n            if (counter !== 0) {\n              return;\n            }\n            resolve(resolvedCollection);\n          })\n          .then(null, reject);\n      });\n    });\n  }\n\n  /** JSDoc */\n  public then<TResult1 = T, TResult2 = never>(\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null,\n  ): PromiseLike<TResult1 | TResult2> {\n    return new SyncPromise((resolve, reject) => {\n      this._attachHandler({\n        onfulfilled: result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result as any);\n            return;\n          }\n          try {\n            resolve(onfulfilled(result));\n            return;\n          } catch (e) {\n            reject(e);\n            return;\n          }\n        },\n        onrejected: reason => {\n          if (!onrejected) {\n            reject(reason);\n            return;\n          }\n          try {\n            resolve(onrejected(reason));\n            return;\n          } catch (e) {\n            reject(e);\n            return;\n          }\n        },\n      });\n    });\n  }\n\n  /** JSDoc */\n  public catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null,\n  ): PromiseLike<T | TResult> {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n  public finally<TResult>(onfinally?: (() => void) | null): PromiseLike<TResult> {\n    return new SyncPromise<TResult>((resolve, reject) => {\n      let val: TResult | any;\n      let isRejected: boolean;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        // tslint:disable-next-line:no-unsafe-any\n        resolve(val);\n      });\n    });\n  }\n\n  /** JSDoc */\n  private readonly _resolve = (value?: T | PromiseLike<T> | null) => {\n    this._setResult(States.RESOLVED, value);\n  };\n\n  /** JSDoc */\n  private readonly _reject = (reason?: any) => {\n    this._setResult(States.REJECTED, reason);\n  };\n\n  /** JSDoc */\n  private readonly _setResult = (state: States, value?: T | PromiseLike<T> | any) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      (value as PromiseLike<T>).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };\n\n  // TODO: FIXME\n  /** JSDoc */\n  private readonly _attachHandler = (handler: {\n    /** JSDoc */\n    onfulfilled?(value: T): any;\n    /** JSDoc */\n    onrejected?(reason: any): any;\n  }) => {\n    this._handlers = this._handlers.concat(handler);\n    this._executeHandlers();\n  };\n\n  /** JSDoc */\n  private readonly _executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    if (this._state === States.REJECTED) {\n      this._handlers.forEach(handler => {\n        if (handler.onrejected) {\n          handler.onrejected(this._value);\n        }\n      });\n    } else {\n      this._handlers.forEach(handler => {\n        if (handler.onfulfilled) {\n          // tslint:disable-next-line:no-unsafe-any\n          handler.onfulfilled(this._value);\n        }\n      });\n    }\n\n    this._handlers = [];\n  };\n}\n\nexport { SyncPromise };\n","import { consoleSandbox, getGlobalObject } from './misc';\n\n// TODO: Implement different loggers for different environments\nconst global = getGlobalObject<Window | NodeJS.Global>();\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\n/** JSDoc */\nclass Logger {\n  /** JSDoc */\n  private _enabled: boolean;\n\n  /** JSDoc */\n  public constructor() {\n    this._enabled = false;\n  }\n\n  /** JSDoc */\n  public disable(): void {\n    this._enabled = false;\n  }\n\n  /** JSDoc */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  /** JSDoc */\n  public log(...args: any[]): void {\n    if (!this._enabled) {\n      return;\n    }\n    consoleSandbox(() => {\n      global.console.log(`${PREFIX}[Log]: ${args.join(' ')}`); // tslint:disable-line:no-console\n    });\n  }\n\n  /** JSDoc */\n  public warn(...args: any[]): void {\n    if (!this._enabled) {\n      return;\n    }\n    consoleSandbox(() => {\n      global.console.warn(`${PREFIX}[Warn]: ${args.join(' ')}`); // tslint:disable-line:no-console\n    });\n  }\n\n  /** JSDoc */\n  public error(...args: any[]): void {\n    if (!this._enabled) {\n      return;\n    }\n    consoleSandbox(() => {\n      global.console.error(`${PREFIX}[Error]: ${args.join(' ')}`); // tslint:disable-line:no-console\n    });\n  }\n}\n\n// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\nglobal.__SENTRY__ = global.__SENTRY__ || {};\nconst logger = (global.__SENTRY__.logger as Logger) || (global.__SENTRY__.logger = new Logger());\n\nexport { logger };\n","/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isError(wat: any): boolean {\n  switch (Object.prototype.toString.call(wat)) {\n    case '[object Error]':\n      return true;\n    case '[object Exception]':\n      return true;\n    case '[object DOMException]':\n      return true;\n    default:\n      return wat instanceof Error;\n  }\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isErrorEvent(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object ErrorEvent]';\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMError(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object DOMError]';\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMException(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object DOMException]';\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isString(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object String]';\n}\n\n/**\n * Checks whether given value's is a primitive (undefined, null, number, boolean, string)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPrimitive(wat: any): boolean {\n  return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPlainObject(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object Object]';\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isEvent(wat: any): boolean {\n  // tslint:disable-next-line:strict-type-predicates\n  return typeof Event !== 'undefined' && wat instanceof Event;\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isElement(wat: any): boolean {\n  // tslint:disable-next-line:strict-type-predicates\n  return typeof Element !== 'undefined' && wat instanceof Element;\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isRegExp(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object RegExp]';\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nexport function isThenable(wat: any): boolean {\n  // tslint:disable:no-unsafe-any\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n  // tslint:enable:no-unsafe-any\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isSyntheticEvent(wat: any): boolean {\n  // tslint:disable-next-line:no-unsafe-any\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n","import { ExtendedError, WrappedFunction } from '@sentry/types';\n\nimport { isElement, isError, isEvent, isPrimitive, isSyntheticEvent } from './is';\nimport { Memo } from './memo';\nimport { htmlTreeAsString } from './misc';\nimport { truncate } from './string';\n\n/**\n * Wrap a given object method with a higher-order function\n *\n * @param source An object that contains a method to be wrapped.\n * @param name A name of method to be wrapped.\n * @param replacement A function that should be used to wrap a given method.\n * @returns void\n */\nexport function fill(source: { [key: string]: any }, name: string, replacement: (...args: any[]) => any): void {\n  if (!(name in source)) {\n    return;\n  }\n\n  const original = source[name] as () => any;\n  const wrapped = replacement(original) as WrappedFunction;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  // tslint:disable-next-line:strict-type-predicates\n  if (typeof wrapped === 'function') {\n    try {\n      wrapped.prototype = wrapped.prototype || {};\n      Object.defineProperties(wrapped, {\n        __sentry__: {\n          enumerable: false,\n          value: true,\n        },\n        __sentry_original__: {\n          enumerable: false,\n          value: original,\n        },\n        __sentry_wrapped__: {\n          enumerable: false,\n          value: wrapped,\n        },\n      });\n    } catch (_Oo) {\n      // This can throw if multiple fill happens on a global object like XMLHttpRequest\n      // Fixes https://github.com/getsentry/sentry-javascript/issues/2043\n    }\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nexport function urlEncode(object: { [key: string]: any }): string {\n  return Object.keys(object)\n    .map(\n      // tslint:disable-next-line:no-unsafe-any\n      key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`,\n    )\n    .join('&');\n}\n\n/**\n * Transforms any object into an object literal with all it's attributes\n * attached to it.\n *\n * @param value Initial source that we have to transform in order to be usable by the serializer\n */\nfunction getWalkSource(\n  value: any,\n): {\n  [key: string]: any;\n} {\n  if (isError(value)) {\n    const error = value as ExtendedError;\n    const err: {\n      stack: string | undefined;\n      message: string;\n      name: string;\n      [key: string]: any;\n    } = {\n      message: error.message,\n      name: error.name,\n      stack: error.stack,\n    };\n\n    for (const i in error) {\n      if (Object.prototype.hasOwnProperty.call(error, i)) {\n        err[i] = error[i];\n      }\n    }\n\n    return err;\n  }\n\n  if (isEvent(value)) {\n    /**\n     * Event-like interface that's usable in browser and node\n     */\n    interface SimpleEvent {\n      [key: string]: unknown;\n      type: string;\n      target?: unknown;\n      currentTarget?: unknown;\n    }\n\n    const event = value as SimpleEvent;\n\n    const source: {\n      [key: string]: any;\n    } = {};\n\n    source.type = event.type;\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      source.target = isElement(event.target)\n        ? htmlTreeAsString(event.target)\n        : Object.prototype.toString.call(event.target);\n    } catch (_oO) {\n      source.target = '<unknown>';\n    }\n\n    try {\n      source.currentTarget = isElement(event.currentTarget)\n        ? htmlTreeAsString(event.currentTarget)\n        : Object.prototype.toString.call(event.currentTarget);\n    } catch (_oO) {\n      source.currentTarget = '<unknown>';\n    }\n\n    // tslint:disable-next-line:strict-type-predicates\n    if (typeof CustomEvent !== 'undefined' && value instanceof CustomEvent) {\n      source.detail = event.detail;\n    }\n\n    for (const i in event) {\n      if (Object.prototype.hasOwnProperty.call(event, i)) {\n        source[i] = event;\n      }\n    }\n\n    return source;\n  }\n\n  return value as {\n    [key: string]: any;\n  };\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value: string): number {\n  // tslint:disable-next-line:no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\nfunction jsonSize(value: any): number {\n  return utf8Length(JSON.stringify(value));\n}\n\n/** JSDoc */\nexport function normalizeToSize<T>(\n  object: { [key: string]: any },\n  // Default Node.js REPL depth\n  depth: number = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize: number = 100 * 1024,\n): T {\n  const serialized = normalize(object, depth);\n\n  if (jsonSize(serialized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return serialized as T;\n}\n\n/** Transforms any input value into a string form, either primitive value or a type of the input */\nfunction serializeValue(value: any): any {\n  const type = Object.prototype.toString.call(value);\n\n  // Node.js REPL notation\n  if (typeof value === 'string') {\n    return value;\n  }\n  if (type === '[object Object]') {\n    return '[Object]';\n  }\n  if (type === '[object Array]') {\n    return '[Array]';\n  }\n\n  const normalized = normalizeValue(value);\n  return isPrimitive(normalized) ? normalized : type;\n}\n\n/**\n * normalizeValue()\n *\n * Takes unserializable input and make it serializable friendly\n *\n * - translates undefined/NaN values to \"[undefined]\"/\"[NaN]\" respectively,\n * - serializes Error objects\n * - filter global objects\n */\n// tslint:disable-next-line:cyclomatic-complexity\nfunction normalizeValue<T>(value: T, key?: any): T | string {\n  if (key === 'domain' && value && typeof value === 'object' && ((value as unknown) as { _events: any })._events) {\n    return '[Domain]';\n  }\n\n  if (key === 'domainEmitter') {\n    return '[DomainEmitter]';\n  }\n\n  if (typeof (global as any) !== 'undefined' && (value as unknown) === global) {\n    return '[Global]';\n  }\n\n  if (typeof (window as any) !== 'undefined' && (value as unknown) === window) {\n    return '[Window]';\n  }\n\n  if (typeof (document as any) !== 'undefined' && (value as unknown) === document) {\n    return '[Document]';\n  }\n\n  // React's SyntheticEvent thingy\n  if (isSyntheticEvent(value)) {\n    return '[SyntheticEvent]';\n  }\n\n  // tslint:disable-next-line:no-tautology-expression\n  if (typeof value === 'number' && value !== value) {\n    return '[NaN]';\n  }\n\n  if (value === void 0) {\n    return '[undefined]';\n  }\n\n  if (typeof value === 'function') {\n    return `[Function: ${value.name || '<unknown-function-name>'}]`;\n  }\n\n  return value;\n}\n\n/**\n * Walks an object to perform a normalization on it\n *\n * @param key of object that's walked in current iteration\n * @param value object to be walked\n * @param depth Optional number indicating how deep should walking be performed\n * @param memo Optional Memo class handling decycling\n */\nexport function walk(key: string, value: any, depth: number = +Infinity, memo: Memo = new Memo()): any {\n  // If we reach the maximum depth, serialize whatever has left\n  if (depth === 0) {\n    return serializeValue(value);\n  }\n\n  // If value implements `toJSON` method, call it and return early\n  // tslint:disable:no-unsafe-any\n  if (value !== null && value !== undefined && typeof value.toJSON === 'function') {\n    return value.toJSON();\n  }\n  // tslint:enable:no-unsafe-any\n\n  // If normalized value is a primitive, there are no branches left to walk, so we can just bail out, as theres no point in going down that branch any further\n  const normalized = normalizeValue(value, key);\n  if (isPrimitive(normalized)) {\n    return normalized;\n  }\n\n  // Create source that we will use for next itterations, either objectified error object (Error type with extracted keys:value pairs) or the input itself\n  const source = getWalkSource(value);\n\n  // Create an accumulator that will act as a parent for all future itterations of that branch\n  const acc = Array.isArray(value) ? [] : {};\n\n  // If we already walked that branch, bail out, as it's circular reference\n  if (memo.memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // Walk all keys of the source\n  for (const innerKey in source) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(source, innerKey)) {\n      continue;\n    }\n    // Recursively walk through all the child nodes\n    (acc as { [key: string]: any })[innerKey] = walk(innerKey, source[innerKey], depth - 1, memo);\n  }\n\n  // Once walked through all the branches, remove the parent from memo storage\n  memo.unmemoize(value);\n\n  // Return accumulated values\n  return acc;\n}\n\n/**\n * normalize()\n *\n * - Creates a copy to prevent original input mutation\n * - Skip non-enumerablers\n * - Calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializeable values (undefined/NaN/Functions) to serializable format\n * - Translates known global objects/Classes to a string representations\n * - Takes care of Error objects serialization\n * - Optionally limit depth of final output\n */\nexport function normalize(input: any, depth?: number): any {\n  try {\n    // tslint:disable-next-line:no-unsafe-any\n    return JSON.parse(JSON.stringify(input, (key: string, value: any) => walk(key, value, depth)));\n  } catch (_oO) {\n    return '**non-serializable**';\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nexport function extractExceptionKeysForMessage(exception: any, maxLength: number = 40): string {\n  // tslint:disable:strict-type-predicates\n  const keys = Object.keys(getWalkSource(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return truncate(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n","require('./_typed-array')('Uint16', 2, function (init) {\n  return function Uint16Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","import { Span as SpanInterface } from '@sentry/types';\nimport { uuid4 } from '@sentry/utils';\n\nexport const TRACEPARENT_REGEXP = /^[ \\t]*([0-9a-f]{32})?-?([0-9a-f]{16})?-?([01])?[ \\t]*$/;\n\n/**\n * Span containg all data about a span\n */\nexport class Span implements SpanInterface {\n  public constructor(\n    private readonly _traceId: string = uuid4(),\n    private readonly _spanId: string = uuid4().substring(16),\n    private _sampled?: boolean,\n    private _parent?: Span,\n  ) {}\n\n  /**\n   * Setter for parent\n   */\n  public setParent(parent: Span | undefined): this {\n    this._parent = parent;\n    return this;\n  }\n\n  /**\n   * Setter for sampled\n   */\n  public setSampled(sampled: boolean | undefined): this {\n    this._sampled = sampled;\n    return this;\n  }\n\n  /**\n   * Continues a trace\n   * @param traceparent Traceparent string\n   */\n  public static fromTraceparent(traceparent: string): Span | undefined {\n    const matches = traceparent.match(TRACEPARENT_REGEXP);\n    if (matches) {\n      let sampled;\n      if (matches[3] === '1') {\n        sampled = true;\n      } else if (matches[3] === '0') {\n        sampled = false;\n      }\n      const parent = new Span(matches[1], matches[2], sampled);\n      return new Span(matches[1], undefined, sampled, parent);\n    }\n    return undefined;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public toTraceparent(): string {\n    let sampled = '';\n    if (this._sampled === true) {\n      sampled = '-1';\n    } else if (this._sampled === false) {\n      sampled = '-0';\n    }\n\n    return `${this._traceId}-${this._spanId}${sampled}`;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public toJSON(): object {\n    return {\n      parent: (this._parent && this._parent.toJSON()) || undefined,\n      sampled: this._sampled,\n      span_id: this._spanId,\n      trace_id: this._traceId,\n    };\n  }\n}\n","import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es6.object.set-prototype-of\";\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\nvar _extendStatics = function extendStatics(d, b) {\n  _extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return _extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  _extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nvar _assign = function __assign() {\n  _assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return _assign.apply(this, arguments);\n};\n\nexport { _assign as __assign };\nexport function __rest(s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\nexport function __param(paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n}\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\nexport function __generator(thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n}\nexport function __exportStar(m, exports) {\n  for (var p in m) {\n    if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n  }\n}\nexport function __values(o) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator],\n      i = 0;\n  if (m) return m.call(o);\n  return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n}\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n}\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++) {\n    ar = ar.concat(__read(arguments[i]));\n  }\n\n  return ar;\n}\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []),\n      i,\n      q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () {\n    return this;\n  }, i;\n\n  function verb(n) {\n    if (g[n]) i[n] = function (v) {\n      return new Promise(function (a, b) {\n        q.push([n, v, a, b]) > 1 || resume(n, v);\n      });\n    };\n  }\n\n  function resume(n, v) {\n    try {\n      step(g[n](v));\n    } catch (e) {\n      settle(q[0][3], e);\n    }\n  }\n\n  function step(r) {\n    r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n  }\n\n  function fulfill(value) {\n    resume(\"next\", value);\n  }\n\n  function reject(value) {\n    resume(\"throw\", value);\n  }\n\n  function settle(f, v) {\n    if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n  }\n}\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) {\n    throw e;\n  }), verb(\"return\"), i[Symbol.iterator] = function () {\n    return this;\n  }, i;\n\n  function verb(n, f) {\n    i[n] = o[n] ? function (v) {\n      return (p = !p) ? {\n        value: __await(o[n](v)),\n        done: n === \"return\"\n      } : f ? f(v) : v;\n    } : f;\n  }\n}\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator],\n      i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () {\n    return this;\n  }, i);\n\n  function verb(n) {\n    i[n] = o[n] && function (v) {\n      return new Promise(function (resolve, reject) {\n        v = o[n](v), settle(resolve, reject, v.done, v.value);\n      });\n    };\n  }\n\n  function settle(resolve, reject, d, v) {\n    Promise.resolve(v).then(function (v) {\n      resolve({\n        value: v,\n        done: d\n      });\n    }, reject);\n  }\n}\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) {\n    Object.defineProperty(cooked, \"raw\", {\n      value: raw\n    });\n  } else {\n    cooked.raw = raw;\n  }\n\n  return cooked;\n}\n;\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result.default = mod;\n  return result;\n}\nexport function __importDefault(mod) {\n  return mod && mod.__esModule ? mod : {\n    default: mod\n  };\n}","import { Breadcrumb, Event, EventHint, EventProcessor, Scope as ScopeInterface, Severity, User } from '@sentry/types';\nimport { getGlobalObject, isThenable, normalize, SyncPromise } from '@sentry/utils';\n\nimport { Span } from './span';\n\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nexport class Scope implements ScopeInterface {\n  /** Flag if notifiying is happening. */\n  protected _notifyingListeners: boolean = false;\n\n  /** Callback for client to receive scope changes. */\n  protected _scopeListeners: Array<(scope: Scope) => void> = [];\n\n  /** Callback list that will be called after {@link applyToEvent}. */\n  protected _eventProcessors: EventProcessor[] = [];\n\n  /** Array of breadcrumbs. */\n  protected _breadcrumbs: Breadcrumb[] = [];\n\n  /** User */\n  protected _user: User = {};\n\n  /** Tags */\n  protected _tags: { [key: string]: string } = {};\n\n  /** Extra */\n  protected _extra: { [key: string]: any } = {};\n\n  /** Contexts */\n  protected _context: { [key: string]: any } = {};\n\n  /** Fingerprint */\n  protected _fingerprint?: string[];\n\n  /** Severity */\n  protected _level?: Severity;\n\n  /** Transaction */\n  protected _transaction?: string;\n\n  /** Span */\n  protected _span?: Span;\n\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n  public addScopeListener(callback: (scope: Scope) => void): void {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addEventProcessor(callback: EventProcessor): this {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n  protected _notifyScopeListeners(): void {\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      setTimeout(() => {\n        this._scopeListeners.forEach(callback => {\n          callback(this);\n        });\n        this._notifyingListeners = false;\n      });\n    }\n  }\n\n  /**\n   * This will be called after {@link applyToEvent} is finished.\n   */\n  protected _notifyEventProcessors(\n    processors: EventProcessor[],\n    event: Event | null,\n    hint?: EventHint,\n    index: number = 0,\n  ): PromiseLike<Event | null> {\n    return new SyncPromise<Event | null>((resolve, reject) => {\n      const processor = processors[index];\n      // tslint:disable-next-line:strict-type-predicates\n      if (event === null || typeof processor !== 'function') {\n        resolve(event);\n      } else {\n        const result = processor({ ...event }, hint) as Event | null;\n        if (isThenable(result)) {\n          (result as PromiseLike<Event | null>)\n            .then(final => this._notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n            .then(null, reject);\n        } else {\n          this._notifyEventProcessors(processors, result, hint, index + 1)\n            .then(resolve)\n            .then(null, reject);\n        }\n      }\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setUser(user: User | null): this {\n    this._user = normalize(user);\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTags(tags: { [key: string]: string }): this {\n    this._tags = {\n      ...this._tags,\n      ...normalize(tags),\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTag(key: string, value: string): this {\n    this._tags = { ...this._tags, [key]: normalize(value) };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtras(extra: { [key: string]: any }): this {\n    this._extra = {\n      ...this._extra,\n      ...normalize(extra),\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtra(key: string, extra: any): this {\n    this._extra = { ...this._extra, [key]: normalize(extra) };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setFingerprint(fingerprint: string[]): this {\n    this._fingerprint = normalize(fingerprint);\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setLevel(level: Severity): this {\n    this._level = normalize(level);\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTransaction(transaction?: string): this {\n    this._transaction = transaction;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setContext(name: string, context: { [key: string]: any } | null): this {\n    this._context[name] = context ? normalize(context) : undefined;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setSpan(span?: Span): this {\n    this._span = span;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public startSpan(parentSpan?: Span): Span {\n    const span = new Span();\n    span.setParent(parentSpan);\n    this.setSpan(span);\n    return span;\n  }\n\n  /**\n   * Internal getter for Span, used in Hub.\n   * @hidden\n   */\n  public getSpan(): Span | undefined {\n    return this._span;\n  }\n\n  /**\n   * Inherit values from the parent scope.\n   * @param scope to clone.\n   */\n  public static clone(scope?: Scope): Scope {\n    const newScope = new Scope();\n    if (scope) {\n      newScope._breadcrumbs = [...scope._breadcrumbs];\n      newScope._tags = { ...scope._tags };\n      newScope._extra = { ...scope._extra };\n      newScope._context = { ...scope._context };\n      newScope._user = scope._user;\n      newScope._level = scope._level;\n      newScope._span = scope._span;\n      newScope._transaction = scope._transaction;\n      newScope._fingerprint = scope._fingerprint;\n      newScope._eventProcessors = [...scope._eventProcessors];\n    }\n    return newScope;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clear(): this {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._context = {};\n    this._level = undefined;\n    this._transaction = undefined;\n    this._fingerprint = undefined;\n    this._span = undefined;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, maxBreadcrumbs?: number): this {\n    const timestamp = new Date().getTime() / 1000;\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n\n    this._breadcrumbs =\n      maxBreadcrumbs !== undefined && maxBreadcrumbs >= 0\n        ? [...this._breadcrumbs, normalize(mergedBreadcrumb)].slice(-maxBreadcrumbs)\n        : [...this._breadcrumbs, normalize(mergedBreadcrumb)];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clearBreadcrumbs(): this {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Applies fingerprint from the scope to the event if there's one,\n   * uses message if there's one instead or get rid of empty fingerprint\n   */\n  private _applyFingerprint(event: Event): void {\n    // Make sure it's an array first and we actually have something in place\n    event.fingerprint = event.fingerprint\n      ? Array.isArray(event.fingerprint)\n        ? event.fingerprint\n        : [event.fingerprint]\n      : [];\n\n    // If we have something on the scope, then merge it with event\n    if (this._fingerprint) {\n      event.fingerprint = event.fingerprint.concat(this._fingerprint);\n    }\n\n    // If we have no data at all, remove empty array default\n    if (event.fingerprint && !event.fingerprint.length) {\n      delete event.fingerprint;\n    }\n  }\n\n  /**\n   * Applies the current context and fingerprint to the event.\n   * Note that breadcrumbs will be added by the client.\n   * Also if the event has already breadcrumbs on it, we do not merge them.\n   * @param event Event\n   * @param hint May contain additional informartion about the original exception.\n   * @hidden\n   */\n  public applyToEvent(event: Event, hint?: EventHint): PromiseLike<Event | null> {\n    if (this._extra && Object.keys(this._extra).length) {\n      event.extra = { ...this._extra, ...event.extra };\n    }\n    if (this._tags && Object.keys(this._tags).length) {\n      event.tags = { ...this._tags, ...event.tags };\n    }\n    if (this._user && Object.keys(this._user).length) {\n      event.user = { ...this._user, ...event.user };\n    }\n    if (this._context && Object.keys(this._context).length) {\n      event.contexts = { ...this._context, ...event.contexts };\n    }\n    if (this._level) {\n      event.level = this._level;\n    }\n    if (this._transaction) {\n      event.transaction = this._transaction;\n    }\n    if (this._span) {\n      event.contexts = event.contexts || {};\n      event.contexts.trace = this._span;\n    }\n\n    this._applyFingerprint(event);\n\n    event.breadcrumbs = [...(event.breadcrumbs || []), ...this._breadcrumbs];\n    event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : undefined;\n\n    return this._notifyEventProcessors([...getGlobalEventProcessors(), ...this._eventProcessors], event, hint);\n  }\n}\n\n/**\n * Retruns the global event processors.\n */\nfunction getGlobalEventProcessors(): EventProcessor[] {\n  const global = getGlobalObject<Window | NodeJS.Global>();\n  global.__SENTRY__ = global.__SENTRY__ || {};\n  global.__SENTRY__.globalEventProcessors = global.__SENTRY__.globalEventProcessors || [];\n  return global.__SENTRY__.globalEventProcessors;\n}\n\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nexport function addGlobalEventProcessor(callback: EventProcessor): void {\n  getGlobalEventProcessors().push(callback);\n}\n"],"sourceRoot":""}