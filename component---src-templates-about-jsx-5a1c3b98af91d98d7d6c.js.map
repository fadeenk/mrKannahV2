{"version":3,"sources":["webpack:///./src/templates/about.jsx"],"names":["cardStyle","fontSize","lineHeight","margin","maxWidth","AboutNavBar","page","pages","classes","path","id","style","padding","indicator","onChange","event","location","navigate","value","centered","variant","map","node","key","route","label","role","aria-level","title","backgroundColor","config","primary","main","dangerouslySetInnerHTML","__html","html","About","render","this","props","pathname","pageContext","data","markdownRemark","pageSEO","frontmatter","siteTitle","description","url","href","background","secondary","dark","backgroundImage","light","Component","withStyles","pageQuery"],"mappings":"gUAcA,IAMMA,EAAY,CAChBC,SAAU,OACVC,WAAY,MACZC,OAAQ,SACRC,SAAU,SAGNC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,QAASC,EAAzB,EAAyBA,KAAzB,OAClB,yBAAKC,GAAG,QAAQC,MAAO,CAACC,QAAS,SAC/B,kBAAC,IAAD,CAAMD,MAAOX,GACX,kBAAC,IAAD,CAAMW,MAAO,CACXR,OAAQ,SACRD,WAAY,QACZE,SAAU,SAERI,QAAS,CAACK,UAAWL,EAAQK,WAC7BC,SAAU,SAACC,EAAOC,GAAR,OAAqBC,mBAASD,IACxCE,MAAOT,EACPU,UAAQ,EAACC,QAAQ,aAElBb,EAAMc,KAAI,SAAAC,GAAI,OACb,kBAAC,IAAD,CAAKC,IAAKD,EAAKE,MAAOC,MAAOH,EAAKE,QAAUf,EAAO,0BAAMiB,KAAK,UAAUC,aAAW,KAAKL,EAAKM,OAAgBN,EAAKM,MAAOV,MAAOI,EAAKE,MAChIb,MAAS,CAACkB,gBAAiBC,IAAOC,QAAQC,YAGnD,kBAAC,IAAD,KACE,yBAAKC,wBAAyB,CAAEC,OAAQ5B,EAAK6B,YAO/CC,E,gLAEJC,OAAA,WACE,IAAM5B,EAAO6B,KAAKC,MAAMvB,SAASwB,SAC3BjC,EAAQ+B,KAAKC,MAAME,YAAYlC,MAC/BD,EAAOgC,KAAKC,MAAMG,KAAKC,eACvBC,EAAU,CACdhB,MAAM,SAAUtB,EAAKuC,YAAYjB,MAA5B,MAAuCE,IAAOgB,UACnDC,YAAazC,EAAKuC,YAAYE,aAEhC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,IAAKV,KAAKC,MAAMvB,SAASiC,KAAML,QAASA,IAC7C,kBAAC,IAAD,CAAQjC,MAAO,CAACuC,WAAYpB,IAAOqB,UAAUC,MAAOpC,SAAUsB,KAAKC,MAAMvB,WACzE,yBAAKL,MAAO,CAAC0C,gBAAgB,mBAAoBvB,IAAOqB,UAAUC,KAAtC,KAA+CtB,IAAOC,QAAQuB,MAA9D,SAA4ExB,IAAOC,QAAQuB,MAA3F,SAAyGxB,IAAOqB,UAAUC,KAA1H,MAC1B,kBAAC/C,EAAD,CAAaC,KAAMA,EAAMC,MAAOA,EAAOC,QAAS8B,KAAKC,MAAM/B,QAASC,KAAMA,KAE5E,kBAAC,IAAD,Q,GAjBY8C,aAuBLC,uBA9DA,iBAAO,CACpB3C,UAAW,CACTgB,gBAAiBC,IAAOqB,UAAUC,SA4DvBI,CAAmBpB,GAG3B,IAAMqB,EAAS","file":"component---src-templates-about-jsx-5a1c3b98af91d98d7d6c.js","sourcesContent":["import React, { Component } from 'react';\nimport Helmet from \"react-helmet\";\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { withStyles } from '@material-ui/core/styles';\nimport {navigate, graphql, StaticQuery} from \"gatsby\";\nimport config from \"../../data/SiteConfig\";\nimport SEO from \"../components/SEO/SEO\";\nimport NavBar from \"../components/navBar\";\nimport Footer from \"../components/Footer\";\nimport Layout from \"../layout\";\n\nconst styles = () => ({\n  indicator: {\n    backgroundColor: config.secondary.dark\n  },\n});\n\nconst cardStyle = {\n  fontSize: '14px',\n  lineHeight: '2em',\n  margin: '0 auto',\n  maxWidth: '790px',\n};\n\nconst AboutNavBar = ({ page, pages, classes, path }) => (\n  <div id=\"about\" style={{padding: '10px'}}>\n    <Card style={cardStyle}>\n      <Tabs style={{\n        margin: '0 auto',\n        lineHeight: '1.5em',\n        maxWidth: '800px',\n      }}\n          classes={{indicator: classes.indicator}}\n          onChange={(event, location) => navigate(location)}\n          value={path}\n          centered variant=\"fullWidth\"\n      >\n        {pages.map(node =>\n          <Tab key={node.route} label={node.route === path ? <span role=\"heading\" aria-level=\"1\">{node.title}</span> : node.title} value={node.route}\n               style = {{backgroundColor: config.primary.main}} />\n        )}\n      </Tabs>\n      <CardContent>\n        <div dangerouslySetInnerHTML={{ __html: page.html }} />\n      </CardContent>\n    </Card>\n  </div>\n);\n\n\nclass About extends Component {\n\n  render() {\n    const path = this.props.location.pathname;\n    const pages = this.props.pageContext.pages;\n    const page = this.props.data.markdownRemark;\n    const pageSEO = {\n      title: `About ${page.frontmatter.title} | ${config.siteTitle}`,\n      description: page.frontmatter.description,\n    };\n    return (\n      <Layout>\n        <SEO url={this.props.location.href} pageSEO={pageSEO} />\n        <NavBar style={{background: config.secondary.dark}} location={this.props.location} />\n        <div style={{backgroundImage: `linear-gradient(${config.secondary.dark}, ${config.primary.light} 40%, ${config.primary.light} 60%, ${config.secondary.dark})`}}>\n          <AboutNavBar page={page} pages={pages} classes={this.props.classes} path={path} />\n        </div>\n        <Footer />\n      </Layout>\n    )\n  }\n}\n\nexport default withStyles(styles)(About);\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query AboutPage($route: String!) {\n    markdownRemark (frontmatter: {route: {eq: $route}}) {\n      html\n      frontmatter {\n        route\n        title\n        description\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}